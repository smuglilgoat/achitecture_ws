// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/geometry/geometry.proto

#include "com/here/pb/hdmap/external/v1/geometry/geometry.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto;
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace geometry {
class Point2dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point2d> _instance;
} _Point2d_default_instance_;
class Point3dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point3d> _instance;
} _Point3d_default_instance_;
class LineString2dOffsetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LineString2dOffset> _instance;
} _LineString2dOffset_default_instance_;
class LineString3dOffsetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LineString3dOffset> _instance;
} _LineString3dOffset_default_instance_;
class ElevationMeasureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElevationMeasure> _instance;
} _ElevationMeasure_default_instance_;
class ZLevelIndexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ZLevelIndex> _instance;
} _ZLevelIndex_default_instance_;
class OrientedRectangle3dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrientedRectangle3d> _instance;
} _OrientedRectangle3d_default_instance_;
}  // namespace geometry
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
static void InitDefaultsPoint2d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::geometry::_Point2d_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::geometry::Point2d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::geometry::Point2d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point2d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint2d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto}, {}};

static void InitDefaultsPoint3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::geometry::_Point3d_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::geometry::Point3d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::geometry::Point3d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto}, {}};

static void InitDefaultsLineString2dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::geometry::_LineString2dOffset_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LineString2dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLineString2dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto}, {}};

static void InitDefaultsLineString3dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::geometry::_LineString3dOffset_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LineString3dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLineString3dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto}, {}};

static void InitDefaultsElevationMeasure_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::geometry::_ElevationMeasure_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::geometry::ElevationMeasure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::geometry::ElevationMeasure::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ElevationMeasure_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsElevationMeasure_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto}, {}};

static void InitDefaultsZLevelIndex_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::geometry::_ZLevelIndex_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::geometry::ZLevelIndex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::geometry::ZLevelIndex::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ZLevelIndex_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsZLevelIndex_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto}, {}};

static void InitDefaultsOrientedRectangle3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::geometry::_OrientedRectangle3d_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::geometry::OrientedRectangle3d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::geometry::OrientedRectangle3d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrientedRectangle3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrientedRectangle3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto}, {
      &scc_info_Point3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base,}};

void InitDefaults_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Point2d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LineString2dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LineString3dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElevationMeasure_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ZLevelIndex_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrientedRectangle3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto[7];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::Point2d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::Point2d, here_2d_coordinate_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::Point2d, z_level_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::Point3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::Point3d, here_2d_coordinate_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::Point3d, cm_from_wgs84_ellipsoid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset, here_2d_coordinate_diffs_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset, z_level_indexes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset, here_2d_coordinate_diffs_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset, cm_from_wgs84_ellipsoid_diffs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::ElevationMeasure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::ElevationMeasure, cm_from_wgs84_ellipsoid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::ZLevelIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::ZLevelIndex, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::OrientedRectangle3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::OrientedRectangle3d, center_point_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::OrientedRectangle3d, height_in_cm_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::OrientedRectangle3d, width_in_cm_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::geometry::OrientedRectangle3d, bearing_in_degrees_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::here::pb::hdmap::external::v1::geometry::Point2d)},
  { 7, -1, sizeof(::com::here::pb::hdmap::external::v1::geometry::Point3d)},
  { 14, -1, sizeof(::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset)},
  { 21, -1, sizeof(::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset)},
  { 28, -1, sizeof(::com::here::pb::hdmap::external::v1::geometry::ElevationMeasure)},
  { 34, -1, sizeof(::com::here::pb::hdmap::external::v1::geometry::ZLevelIndex)},
  { 40, -1, sizeof(::com::here::pb::hdmap::external::v1::geometry::OrientedRectangle3d)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::geometry::_Point2d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::geometry::_Point3d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::geometry::_LineString2dOffset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::geometry::_LineString3dOffset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::geometry::_ElevationMeasure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::geometry::_ZLevelIndex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::geometry::_OrientedRectangle3d_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto = {
  {}, AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto, "com/here/pb/hdmap/external/v1/geometry/geometry.proto", schemas,
  file_default_instances, TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::offsets,
  file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto, 7, file_level_enum_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto, file_level_service_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto,
};

const char descriptor_table_protodef_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto[] =
  "\n5com/here/pb/hdmap/external/v1/geometry"
  "/geometry.proto\022&com.here.pb.hdmap.exter"
  "nal.v1.geometry\"<\n\007Point2d\022\032\n\022here_2d_co"
  "ordinate\030\001 \001(\022\022\025\n\rz_level_index\030\002 \001(\021\"F\n"
  "\007Point3d\022\032\n\022here_2d_coordinate\030\001 \001(\022\022\037\n\027"
  "cm_from_WGS84_ellipsoid\030\002 \001(\021\"W\n\022LineStr"
  "ing2dOffset\022$\n\030here_2d_coordinate_diffs\030"
  "\001 \003(\022B\002\020\001\022\033\n\017z_level_indexes\030\002 \003(\021B\002\020\001\"e"
  "\n\022LineString3dOffset\022$\n\030here_2d_coordina"
  "te_diffs\030\001 \003(\022B\002\020\001\022)\n\035cm_from_WGS84_elli"
  "psoid_diffs\030\002 \003(\021B\002\020\001\"3\n\020ElevationMeasur"
  "e\022\037\n\027cm_from_WGS84_ellipsoid\030\001 \001(\021\"\034\n\013ZL"
  "evelIndex\022\r\n\005index\030\001 \001(\021\"\243\001\n\023OrientedRec"
  "tangle3d\022E\n\014center_point\030\001 \001(\0132/.com.her"
  "e.pb.hdmap.external.v1.geometry.Point3d\022"
  "\024\n\014height_in_cm\030\002 \001(\r\022\023\n\013width_in_cm\030\003 \001"
  "(\r\022\032\n\022bearing_in_degrees\030\004 \001(\rb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto = {
  false, InitDefaults_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto, 
  descriptor_table_protodef_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto,
  "com/here/pb/hdmap/external/v1/geometry/geometry.proto", &assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto, 678,
};

void AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto = []() { AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto(); return true; }();
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace geometry {

// ===================================================================

void Point2d::InitAsDefaultInstance() {
}
class Point2d::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point2d::kHere2DCoordinateFieldNumber;
const int Point2d::kZLevelIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point2d::Point2d()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.Point2d)
}
Point2d::Point2d(const Point2d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&here_2d_coordinate_, &from.here_2d_coordinate_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_level_index_) -
    reinterpret_cast<char*>(&here_2d_coordinate_)) + sizeof(z_level_index_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.Point2d)
}

void Point2d::SharedCtor() {
  ::memset(&here_2d_coordinate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_level_index_) -
      reinterpret_cast<char*>(&here_2d_coordinate_)) + sizeof(z_level_index_));
}

Point2d::~Point2d() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.Point2d)
  SharedDtor();
}

void Point2d::SharedDtor() {
}

void Point2d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Point2d& Point2d::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Point2d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  return *internal_default_instance();
}


void Point2d::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&here_2d_coordinate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_level_index_) -
      reinterpret_cast<char*>(&here_2d_coordinate_)) + sizeof(z_level_index_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Point2d::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Point2d*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // sint64 here_2d_coordinate = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_here_2d_coordinate(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // sint32 z_level_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_z_level_index(::google::protobuf::internal::ReadVarintZigZag32(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Point2d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint64 here_2d_coordinate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &here_2d_coordinate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 z_level_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &z_level_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.Point2d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.Point2d)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Point2d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 here_2d_coordinate = 1;
  if (this->here_2d_coordinate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->here_2d_coordinate(), output);
  }

  // sint32 z_level_index = 2;
  if (this->z_level_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->z_level_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.Point2d)
}

::google::protobuf::uint8* Point2d::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 here_2d_coordinate = 1;
  if (this->here_2d_coordinate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->here_2d_coordinate(), target);
  }

  // sint32 z_level_index = 2;
  if (this->z_level_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->z_level_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.Point2d)
  return target;
}

size_t Point2d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint64 here_2d_coordinate = 1;
  if (this->here_2d_coordinate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->here_2d_coordinate());
  }

  // sint32 z_level_index = 2;
  if (this->z_level_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->z_level_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point2d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  GOOGLE_DCHECK_NE(&from, this);
  const Point2d* source =
      ::google::protobuf::DynamicCastToGenerated<Point2d>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.Point2d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.Point2d)
    MergeFrom(*source);
  }
}

void Point2d::MergeFrom(const Point2d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.here_2d_coordinate() != 0) {
    set_here_2d_coordinate(from.here_2d_coordinate());
  }
  if (from.z_level_index() != 0) {
    set_z_level_index(from.z_level_index());
  }
}

void Point2d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point2d::CopyFrom(const Point2d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point2d::IsInitialized() const {
  return true;
}

void Point2d::Swap(Point2d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point2d::InternalSwap(Point2d* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(here_2d_coordinate_, other->here_2d_coordinate_);
  swap(z_level_index_, other->z_level_index_);
}

::google::protobuf::Metadata Point2d::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Point3d::InitAsDefaultInstance() {
}
class Point3d::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3d::kHere2DCoordinateFieldNumber;
const int Point3d::kCmFromWGS84EllipsoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3d::Point3d()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.Point3d)
}
Point3d::Point3d(const Point3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&here_2d_coordinate_, &from.here_2d_coordinate_,
    static_cast<size_t>(reinterpret_cast<char*>(&cm_from_wgs84_ellipsoid_) -
    reinterpret_cast<char*>(&here_2d_coordinate_)) + sizeof(cm_from_wgs84_ellipsoid_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.Point3d)
}

void Point3d::SharedCtor() {
  ::memset(&here_2d_coordinate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cm_from_wgs84_ellipsoid_) -
      reinterpret_cast<char*>(&here_2d_coordinate_)) + sizeof(cm_from_wgs84_ellipsoid_));
}

Point3d::~Point3d() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.Point3d)
  SharedDtor();
}

void Point3d::SharedDtor() {
}

void Point3d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Point3d& Point3d::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Point3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  return *internal_default_instance();
}


void Point3d::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&here_2d_coordinate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cm_from_wgs84_ellipsoid_) -
      reinterpret_cast<char*>(&here_2d_coordinate_)) + sizeof(cm_from_wgs84_ellipsoid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Point3d::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Point3d*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // sint64 here_2d_coordinate = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_here_2d_coordinate(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // sint32 cm_from_WGS84_ellipsoid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_cm_from_wgs84_ellipsoid(::google::protobuf::internal::ReadVarintZigZag32(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Point3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint64 here_2d_coordinate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &here_2d_coordinate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 cm_from_WGS84_ellipsoid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &cm_from_wgs84_ellipsoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.Point3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.Point3d)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Point3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 here_2d_coordinate = 1;
  if (this->here_2d_coordinate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->here_2d_coordinate(), output);
  }

  // sint32 cm_from_WGS84_ellipsoid = 2;
  if (this->cm_from_wgs84_ellipsoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->cm_from_wgs84_ellipsoid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.Point3d)
}

::google::protobuf::uint8* Point3d::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 here_2d_coordinate = 1;
  if (this->here_2d_coordinate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->here_2d_coordinate(), target);
  }

  // sint32 cm_from_WGS84_ellipsoid = 2;
  if (this->cm_from_wgs84_ellipsoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->cm_from_wgs84_ellipsoid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.Point3d)
  return target;
}

size_t Point3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint64 here_2d_coordinate = 1;
  if (this->here_2d_coordinate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->here_2d_coordinate());
  }

  // sint32 cm_from_WGS84_ellipsoid = 2;
  if (this->cm_from_wgs84_ellipsoid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->cm_from_wgs84_ellipsoid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3d* source =
      ::google::protobuf::DynamicCastToGenerated<Point3d>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.Point3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.Point3d)
    MergeFrom(*source);
  }
}

void Point3d::MergeFrom(const Point3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.here_2d_coordinate() != 0) {
    set_here_2d_coordinate(from.here_2d_coordinate());
  }
  if (from.cm_from_wgs84_ellipsoid() != 0) {
    set_cm_from_wgs84_ellipsoid(from.cm_from_wgs84_ellipsoid());
  }
}

void Point3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3d::CopyFrom(const Point3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3d::IsInitialized() const {
  return true;
}

void Point3d::Swap(Point3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3d::InternalSwap(Point3d* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(here_2d_coordinate_, other->here_2d_coordinate_);
  swap(cm_from_wgs84_ellipsoid_, other->cm_from_wgs84_ellipsoid_);
}

::google::protobuf::Metadata Point3d::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LineString2dOffset::InitAsDefaultInstance() {
}
class LineString2dOffset::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LineString2dOffset::kHere2DCoordinateDiffsFieldNumber;
const int LineString2dOffset::kZLevelIndexesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LineString2dOffset::LineString2dOffset()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
}
LineString2dOffset::LineString2dOffset(const LineString2dOffset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      here_2d_coordinate_diffs_(from.here_2d_coordinate_diffs_),
      z_level_indexes_(from.z_level_indexes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
}

void LineString2dOffset::SharedCtor() {
}

LineString2dOffset::~LineString2dOffset() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  SharedDtor();
}

void LineString2dOffset::SharedDtor() {
}

void LineString2dOffset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LineString2dOffset& LineString2dOffset::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LineString2dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  return *internal_default_instance();
}


void LineString2dOffset::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  here_2d_coordinate_diffs_.Clear();
  z_level_indexes_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LineString2dOffset::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LineString2dOffset*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedSInt64Parser;
          object = msg->mutable_here_2d_coordinate_diffs();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        do {
          msg->add_here_2d_coordinate_diffs(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
        break;
      }
      // repeated sint32 z_level_indexes = 2 [packed = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 18) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedSInt32Parser;
          object = msg->mutable_z_level_indexes();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        do {
          msg->add_z_level_indexes(::google::protobuf::internal::ReadVarintZigZag32(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LineString2dOffset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_here_2d_coordinate_diffs())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_here_2d_coordinate_diffs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 z_level_indexes = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_z_level_indexes())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_z_level_indexes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LineString2dOffset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  if (this->here_2d_coordinate_diffs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_here_2d_coordinate_diffs_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->here_2d_coordinate_diffs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->here_2d_coordinate_diffs(i), output);
  }

  // repeated sint32 z_level_indexes = 2 [packed = true];
  if (this->z_level_indexes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_z_level_indexes_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->z_level_indexes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->z_level_indexes(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
}

::google::protobuf::uint8* LineString2dOffset::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  if (this->here_2d_coordinate_diffs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _here_2d_coordinate_diffs_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->here_2d_coordinate_diffs_, target);
  }

  // repeated sint32 z_level_indexes = 2 [packed = true];
  if (this->z_level_indexes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _z_level_indexes_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->z_level_indexes_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  return target;
}

size_t LineString2dOffset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->here_2d_coordinate_diffs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _here_2d_coordinate_diffs_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated sint32 z_level_indexes = 2 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->z_level_indexes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _z_level_indexes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LineString2dOffset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  GOOGLE_DCHECK_NE(&from, this);
  const LineString2dOffset* source =
      ::google::protobuf::DynamicCastToGenerated<LineString2dOffset>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
    MergeFrom(*source);
  }
}

void LineString2dOffset::MergeFrom(const LineString2dOffset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  here_2d_coordinate_diffs_.MergeFrom(from.here_2d_coordinate_diffs_);
  z_level_indexes_.MergeFrom(from.z_level_indexes_);
}

void LineString2dOffset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LineString2dOffset::CopyFrom(const LineString2dOffset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LineString2dOffset::IsInitialized() const {
  return true;
}

void LineString2dOffset::Swap(LineString2dOffset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LineString2dOffset::InternalSwap(LineString2dOffset* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  here_2d_coordinate_diffs_.InternalSwap(&other->here_2d_coordinate_diffs_);
  z_level_indexes_.InternalSwap(&other->z_level_indexes_);
}

::google::protobuf::Metadata LineString2dOffset::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LineString3dOffset::InitAsDefaultInstance() {
}
class LineString3dOffset::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LineString3dOffset::kHere2DCoordinateDiffsFieldNumber;
const int LineString3dOffset::kCmFromWGS84EllipsoidDiffsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LineString3dOffset::LineString3dOffset()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
}
LineString3dOffset::LineString3dOffset(const LineString3dOffset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      here_2d_coordinate_diffs_(from.here_2d_coordinate_diffs_),
      cm_from_wgs84_ellipsoid_diffs_(from.cm_from_wgs84_ellipsoid_diffs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
}

void LineString3dOffset::SharedCtor() {
}

LineString3dOffset::~LineString3dOffset() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  SharedDtor();
}

void LineString3dOffset::SharedDtor() {
}

void LineString3dOffset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LineString3dOffset& LineString3dOffset::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LineString3dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  return *internal_default_instance();
}


void LineString3dOffset::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  here_2d_coordinate_diffs_.Clear();
  cm_from_wgs84_ellipsoid_diffs_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LineString3dOffset::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LineString3dOffset*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedSInt64Parser;
          object = msg->mutable_here_2d_coordinate_diffs();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        do {
          msg->add_here_2d_coordinate_diffs(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
        break;
      }
      // repeated sint32 cm_from_WGS84_ellipsoid_diffs = 2 [packed = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 18) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedSInt32Parser;
          object = msg->mutable_cm_from_wgs84_ellipsoid_diffs();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        do {
          msg->add_cm_from_wgs84_ellipsoid_diffs(::google::protobuf::internal::ReadVarintZigZag32(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LineString3dOffset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_here_2d_coordinate_diffs())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_here_2d_coordinate_diffs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 cm_from_WGS84_ellipsoid_diffs = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_cm_from_wgs84_ellipsoid_diffs())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_cm_from_wgs84_ellipsoid_diffs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LineString3dOffset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  if (this->here_2d_coordinate_diffs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_here_2d_coordinate_diffs_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->here_2d_coordinate_diffs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->here_2d_coordinate_diffs(i), output);
  }

  // repeated sint32 cm_from_WGS84_ellipsoid_diffs = 2 [packed = true];
  if (this->cm_from_wgs84_ellipsoid_diffs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_cm_from_wgs84_ellipsoid_diffs_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->cm_from_wgs84_ellipsoid_diffs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->cm_from_wgs84_ellipsoid_diffs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
}

::google::protobuf::uint8* LineString3dOffset::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  if (this->here_2d_coordinate_diffs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _here_2d_coordinate_diffs_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->here_2d_coordinate_diffs_, target);
  }

  // repeated sint32 cm_from_WGS84_ellipsoid_diffs = 2 [packed = true];
  if (this->cm_from_wgs84_ellipsoid_diffs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _cm_from_wgs84_ellipsoid_diffs_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->cm_from_wgs84_ellipsoid_diffs_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  return target;
}

size_t LineString3dOffset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->here_2d_coordinate_diffs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _here_2d_coordinate_diffs_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated sint32 cm_from_WGS84_ellipsoid_diffs = 2 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->cm_from_wgs84_ellipsoid_diffs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _cm_from_wgs84_ellipsoid_diffs_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LineString3dOffset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  GOOGLE_DCHECK_NE(&from, this);
  const LineString3dOffset* source =
      ::google::protobuf::DynamicCastToGenerated<LineString3dOffset>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
    MergeFrom(*source);
  }
}

void LineString3dOffset::MergeFrom(const LineString3dOffset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  here_2d_coordinate_diffs_.MergeFrom(from.here_2d_coordinate_diffs_);
  cm_from_wgs84_ellipsoid_diffs_.MergeFrom(from.cm_from_wgs84_ellipsoid_diffs_);
}

void LineString3dOffset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LineString3dOffset::CopyFrom(const LineString3dOffset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LineString3dOffset::IsInitialized() const {
  return true;
}

void LineString3dOffset::Swap(LineString3dOffset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LineString3dOffset::InternalSwap(LineString3dOffset* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  here_2d_coordinate_diffs_.InternalSwap(&other->here_2d_coordinate_diffs_);
  cm_from_wgs84_ellipsoid_diffs_.InternalSwap(&other->cm_from_wgs84_ellipsoid_diffs_);
}

::google::protobuf::Metadata LineString3dOffset::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ElevationMeasure::InitAsDefaultInstance() {
}
class ElevationMeasure::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElevationMeasure::kCmFromWGS84EllipsoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElevationMeasure::ElevationMeasure()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
}
ElevationMeasure::ElevationMeasure(const ElevationMeasure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cm_from_wgs84_ellipsoid_ = from.cm_from_wgs84_ellipsoid_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
}

void ElevationMeasure::SharedCtor() {
  cm_from_wgs84_ellipsoid_ = 0;
}

ElevationMeasure::~ElevationMeasure() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  SharedDtor();
}

void ElevationMeasure::SharedDtor() {
}

void ElevationMeasure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ElevationMeasure& ElevationMeasure::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ElevationMeasure_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  return *internal_default_instance();
}


void ElevationMeasure::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cm_from_wgs84_ellipsoid_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ElevationMeasure::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ElevationMeasure*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // sint32 cm_from_WGS84_ellipsoid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_cm_from_wgs84_ellipsoid(::google::protobuf::internal::ReadVarintZigZag32(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ElevationMeasure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 cm_from_WGS84_ellipsoid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &cm_from_wgs84_ellipsoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ElevationMeasure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 cm_from_WGS84_ellipsoid = 1;
  if (this->cm_from_wgs84_ellipsoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->cm_from_wgs84_ellipsoid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
}

::google::protobuf::uint8* ElevationMeasure::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 cm_from_WGS84_ellipsoid = 1;
  if (this->cm_from_wgs84_ellipsoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->cm_from_wgs84_ellipsoid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  return target;
}

size_t ElevationMeasure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 cm_from_WGS84_ellipsoid = 1;
  if (this->cm_from_wgs84_ellipsoid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->cm_from_wgs84_ellipsoid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElevationMeasure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  GOOGLE_DCHECK_NE(&from, this);
  const ElevationMeasure* source =
      ::google::protobuf::DynamicCastToGenerated<ElevationMeasure>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
    MergeFrom(*source);
  }
}

void ElevationMeasure::MergeFrom(const ElevationMeasure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cm_from_wgs84_ellipsoid() != 0) {
    set_cm_from_wgs84_ellipsoid(from.cm_from_wgs84_ellipsoid());
  }
}

void ElevationMeasure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElevationMeasure::CopyFrom(const ElevationMeasure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElevationMeasure::IsInitialized() const {
  return true;
}

void ElevationMeasure::Swap(ElevationMeasure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElevationMeasure::InternalSwap(ElevationMeasure* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(cm_from_wgs84_ellipsoid_, other->cm_from_wgs84_ellipsoid_);
}

::google::protobuf::Metadata ElevationMeasure::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ZLevelIndex::InitAsDefaultInstance() {
}
class ZLevelIndex::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZLevelIndex::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZLevelIndex::ZLevelIndex()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
}
ZLevelIndex::ZLevelIndex(const ZLevelIndex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
}

void ZLevelIndex::SharedCtor() {
  index_ = 0;
}

ZLevelIndex::~ZLevelIndex() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  SharedDtor();
}

void ZLevelIndex::SharedDtor() {
}

void ZLevelIndex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ZLevelIndex& ZLevelIndex::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ZLevelIndex_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  return *internal_default_instance();
}


void ZLevelIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ZLevelIndex::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ZLevelIndex*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // sint32 index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_index(::google::protobuf::internal::ReadVarintZigZag32(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ZLevelIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ZLevelIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
}

::google::protobuf::uint8* ZLevelIndex::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  return target;
}

size_t ZLevelIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZLevelIndex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  GOOGLE_DCHECK_NE(&from, this);
  const ZLevelIndex* source =
      ::google::protobuf::DynamicCastToGenerated<ZLevelIndex>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
    MergeFrom(*source);
  }
}

void ZLevelIndex::MergeFrom(const ZLevelIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
}

void ZLevelIndex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZLevelIndex::CopyFrom(const ZLevelIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZLevelIndex::IsInitialized() const {
  return true;
}

void ZLevelIndex::Swap(ZLevelIndex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZLevelIndex::InternalSwap(ZLevelIndex* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(index_, other->index_);
}

::google::protobuf::Metadata ZLevelIndex::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OrientedRectangle3d::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::geometry::_OrientedRectangle3d_default_instance_._instance.get_mutable()->center_point_ = const_cast< ::com::here::pb::hdmap::external::v1::geometry::Point3d*>(
      ::com::here::pb::hdmap::external::v1::geometry::Point3d::internal_default_instance());
}
class OrientedRectangle3d::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::geometry::Point3d& center_point(const OrientedRectangle3d* msg);
};

const ::com::here::pb::hdmap::external::v1::geometry::Point3d&
OrientedRectangle3d::HasBitSetters::center_point(const OrientedRectangle3d* msg) {
  return *msg->center_point_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrientedRectangle3d::kCenterPointFieldNumber;
const int OrientedRectangle3d::kHeightInCmFieldNumber;
const int OrientedRectangle3d::kWidthInCmFieldNumber;
const int OrientedRectangle3d::kBearingInDegreesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrientedRectangle3d::OrientedRectangle3d()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
}
OrientedRectangle3d::OrientedRectangle3d(const OrientedRectangle3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_center_point()) {
    center_point_ = new ::com::here::pb::hdmap::external::v1::geometry::Point3d(*from.center_point_);
  } else {
    center_point_ = nullptr;
  }
  ::memcpy(&height_in_cm_, &from.height_in_cm_,
    static_cast<size_t>(reinterpret_cast<char*>(&bearing_in_degrees_) -
    reinterpret_cast<char*>(&height_in_cm_)) + sizeof(bearing_in_degrees_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
}

void OrientedRectangle3d::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OrientedRectangle3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  ::memset(&center_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bearing_in_degrees_) -
      reinterpret_cast<char*>(&center_point_)) + sizeof(bearing_in_degrees_));
}

OrientedRectangle3d::~OrientedRectangle3d() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  SharedDtor();
}

void OrientedRectangle3d::SharedDtor() {
  if (this != internal_default_instance()) delete center_point_;
}

void OrientedRectangle3d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OrientedRectangle3d& OrientedRectangle3d::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OrientedRectangle3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base);
  return *internal_default_instance();
}


void OrientedRectangle3d::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && center_point_ != nullptr) {
    delete center_point_;
  }
  center_point_ = nullptr;
  ::memset(&height_in_cm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bearing_in_degrees_) -
      reinterpret_cast<char*>(&height_in_cm_)) + sizeof(bearing_in_degrees_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OrientedRectangle3d::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OrientedRectangle3d*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.external.v1.geometry.Point3d center_point = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::geometry::Point3d::_InternalParse;
        object = msg->mutable_center_point();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // uint32 height_in_cm = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_height_in_cm(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 width_in_cm = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_width_in_cm(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 bearing_in_degrees = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_bearing_in_degrees(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OrientedRectangle3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.geometry.Point3d center_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_center_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height_in_cm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_in_cm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width_in_cm = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_in_cm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bearing_in_degrees = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bearing_in_degrees_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OrientedRectangle3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.Point3d center_point = 1;
  if (this->has_center_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::center_point(this), output);
  }

  // uint32 height_in_cm = 2;
  if (this->height_in_cm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->height_in_cm(), output);
  }

  // uint32 width_in_cm = 3;
  if (this->width_in_cm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->width_in_cm(), output);
  }

  // uint32 bearing_in_degrees = 4;
  if (this->bearing_in_degrees() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->bearing_in_degrees(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
}

::google::protobuf::uint8* OrientedRectangle3d::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.Point3d center_point = 1;
  if (this->has_center_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::center_point(this), target);
  }

  // uint32 height_in_cm = 2;
  if (this->height_in_cm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->height_in_cm(), target);
  }

  // uint32 width_in_cm = 3;
  if (this->width_in_cm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->width_in_cm(), target);
  }

  // uint32 bearing_in_degrees = 4;
  if (this->bearing_in_degrees() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->bearing_in_degrees(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  return target;
}

size_t OrientedRectangle3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.Point3d center_point = 1;
  if (this->has_center_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *center_point_);
  }

  // uint32 height_in_cm = 2;
  if (this->height_in_cm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height_in_cm());
  }

  // uint32 width_in_cm = 3;
  if (this->width_in_cm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width_in_cm());
  }

  // uint32 bearing_in_degrees = 4;
  if (this->bearing_in_degrees() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bearing_in_degrees());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrientedRectangle3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  GOOGLE_DCHECK_NE(&from, this);
  const OrientedRectangle3d* source =
      ::google::protobuf::DynamicCastToGenerated<OrientedRectangle3d>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
    MergeFrom(*source);
  }
}

void OrientedRectangle3d::MergeFrom(const OrientedRectangle3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_center_point()) {
    mutable_center_point()->::com::here::pb::hdmap::external::v1::geometry::Point3d::MergeFrom(from.center_point());
  }
  if (from.height_in_cm() != 0) {
    set_height_in_cm(from.height_in_cm());
  }
  if (from.width_in_cm() != 0) {
    set_width_in_cm(from.width_in_cm());
  }
  if (from.bearing_in_degrees() != 0) {
    set_bearing_in_degrees(from.bearing_in_degrees());
  }
}

void OrientedRectangle3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrientedRectangle3d::CopyFrom(const OrientedRectangle3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrientedRectangle3d::IsInitialized() const {
  return true;
}

void OrientedRectangle3d::Swap(OrientedRectangle3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrientedRectangle3d::InternalSwap(OrientedRectangle3d* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(center_point_, other->center_point_);
  swap(height_in_cm_, other->height_in_cm_);
  swap(width_in_cm_, other->width_in_cm_);
  swap(bearing_in_degrees_, other->bearing_in_degrees_);
}

::google::protobuf::Metadata OrientedRectangle3d::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace geometry
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::geometry::Point2d* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::geometry::Point2d >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::geometry::Point2d >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::geometry::Point3d* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::geometry::Point3d >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::geometry::Point3d >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::geometry::ElevationMeasure* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::geometry::ElevationMeasure >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::geometry::ElevationMeasure >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::geometry::ZLevelIndex* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::geometry::ZLevelIndex >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::geometry::ZLevelIndex >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::geometry::OrientedRectangle3d* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::geometry::OrientedRectangle3d >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::geometry::OrientedRectangle3d >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
