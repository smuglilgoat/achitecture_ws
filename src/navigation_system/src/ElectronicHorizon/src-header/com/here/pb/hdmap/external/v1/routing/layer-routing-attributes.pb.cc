// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/routing/layer-routing-attributes.proto

#include "com/here/pb/hdmap/external/v1/routing/layer-routing-attributes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParametricLocation_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParametricRange_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PartitionedAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StrandAttributionLocalReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TiledStrandAttributionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RoutingAttributionGroup_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<11> scc_info_RoutingLinkParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DefinesAdministrativeAreaBoundary_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LinkAttribution_PointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RoutingNodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StrandAttribution_OrientedTiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_WithinAdministrativeArea_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_AdministrativeAreaRelationship_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_LinkAttribution_ParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_NodeAttribution_IntersectionTraversalAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RoutingStrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_LinkAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_RoutingLinkPointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_StrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RoadUsers_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConditionalTollStructure_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ConditionalAccessPermission_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ConditionalAccessRestriction_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ConditionalOvertakingRestriction_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ConditionalPermittedDrivingManoeuvre_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ConditionalRestrictedDrivingManoeuvre_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ConditionalUsageFeeRequired_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BuiltUpAreaRoad_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ComplexIntersection_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RoadDivider_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RoadIdentifiers_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TrafficMessageChannelCode_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto;
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace routing {
class RoutingAttributesLayerTileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoutingAttributesLayerTile> _instance;
} _RoutingAttributesLayerTile_default_instance_;
class LinkAttribution_ParametricAttributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinkAttribution_ParametricAttribution> _instance;
} _LinkAttribution_ParametricAttribution_default_instance_;
class LinkAttribution_PointAttributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinkAttribution_PointAttribution> _instance;
} _LinkAttribution_PointAttribution_default_instance_;
class LinkAttributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinkAttribution> _instance;
} _LinkAttribution_default_instance_;
class NodeAttribution_IntersectionTraversalAttributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeAttribution_IntersectionTraversalAttribution> _instance;
} _NodeAttribution_IntersectionTraversalAttribution_default_instance_;
class NodeAttributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeAttribution> _instance;
} _NodeAttribution_default_instance_;
class StrandAttribution_OrientedTiledLinkReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StrandAttribution_OrientedTiledLinkReference> _instance;
} _StrandAttribution_OrientedTiledLinkReference_default_instance_;
class StrandAttributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StrandAttribution> _instance;
} _StrandAttribution_default_instance_;
class RoutingAttributionGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoutingAttributionGroup> _instance;
} _RoutingAttributionGroup_default_instance_;
class RoutingLinkParametricAttributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoutingLinkParametricAttribution> _instance;
  const ::com::here::pb::hdmap::shared::v1::core::RoadUsers* accessible_by_;
  int functional_class_;
  bool is_multiply_digitized_;
  bool is_bridge_;
  bool is_tunnel_;
  bool is_controlled_access_;
  bool is_limited_access_;
  bool is_urban_;
  bool is_priority_road_;
  bool is_ramp_;
  const ::com::here::pb::hdmap::shared::v1::core::BuiltUpAreaRoad* built_up_area_road_;
  const ::com::here::pb::hdmap::shared::v1::core::ComplexIntersection* complex_intersection_;
  const ::com::here::pb::hdmap::shared::v1::core::TrafficMessageChannelCode* rds_tmc_code_;
  const ::com::here::pb::hdmap::shared::v1::core::ConditionalUsageFeeRequired* conditional_usage_fee_required_;
  const ::com::here::pb::hdmap::shared::v1::core::ConditionalOvertakingRestriction* conditional_overtaking_restriction_;
  const ::com::here::pb::hdmap::shared::v1::core::ConditionalAccessRestriction* conditional_access_restriction_;
  const ::com::here::pb::hdmap::shared::v1::core::ConditionalAccessPermission* conditional_access_permission_;
  const ::com::here::pb::hdmap::shared::v1::core::RoadDivider* road_divider_;
  const ::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship* administrative_area_relationship_;
  const ::com::here::pb::hdmap::shared::v1::core::RoadIdentifiers* road_identifiers_;
  bool is_within_interchange_;
} _RoutingLinkParametricAttribution_default_instance_;
class RoutingLinkPointAttributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoutingLinkPointAttribution> _instance;
  const ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre* conditional_restricted_driving_manoeuvre_;
  const ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre* conditional_uturn_restricted_driving_manoeuvre_;
  const ::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre* conditional_uturn_permitted_driving_manoeuvre_;
  const ::com::here::pb::hdmap::shared::v1::core::ConditionalTollStructure* conditional_toll_structure_;
} _RoutingLinkPointAttribution_default_instance_;
class RoutingNodeAttributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoutingNodeAttribution> _instance;
  const ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre* conditional_restricted_driving_manoeuvre_;
} _RoutingNodeAttribution_default_instance_;
class RoutingStrandAttributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoutingStrandAttribution> _instance;
  const ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre* conditional_restricted_driving_manoeuvre_;
  const ::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre* conditional_permitted_driving_manoeuvre_;
} _RoutingStrandAttribution_default_instance_;
class AdministrativeAreaRelationshipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdministrativeAreaRelationship> _instance;
  const ::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary* administrative_area_boundary_;
  const ::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea* within_administrative_area_;
} _AdministrativeAreaRelationship_default_instance_;
class DefinesAdministrativeAreaBoundaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DefinesAdministrativeAreaBoundary> _instance;
} _DefinesAdministrativeAreaBoundary_default_instance_;
class WithinAdministrativeAreaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WithinAdministrativeArea> _instance;
} _WithinAdministrativeArea_default_instance_;
}  // namespace routing
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
static void InitDefaultsRoutingAttributesLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_RoutingAttributesLayerTile_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::RoutingAttributesLayerTile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::RoutingAttributesLayerTile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_RoutingAttributesLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsRoutingAttributesLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_LinkAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,
      &scc_info_NodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,
      &scc_info_StrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,
      &scc_info_RoutingAttributionGroup_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,}};

static void InitDefaultsLinkAttribution_ParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_LinkAttribution_ParametricAttribution_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::LinkAttribution_ParametricAttribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::LinkAttribution_ParametricAttribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LinkAttribution_ParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLinkAttribution_ParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_ParametricRange_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base,
      &scc_info_RoutingLinkParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,}};

static void InitDefaultsLinkAttribution_PointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_LinkAttribution_PointAttribution_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::LinkAttribution_PointAttribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::LinkAttribution_PointAttribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LinkAttribution_PointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLinkAttribution_PointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_RoutingLinkPointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,}};

static void InitDefaultsLinkAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_LinkAttribution_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::LinkAttribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::LinkAttribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_LinkAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsLinkAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_LinkAttribution_ParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,
      &scc_info_LinkAttribution_PointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,
      &scc_info_TiledStrandAttributionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base,}};

static void InitDefaultsNodeAttribution_IntersectionTraversalAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_NodeAttribution_IntersectionTraversalAttribution_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::NodeAttribution_IntersectionTraversalAttribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::NodeAttribution_IntersectionTraversalAttribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_NodeAttribution_IntersectionTraversalAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsNodeAttribution_IntersectionTraversalAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_TiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base,
      &scc_info_RoutingNodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,}};

static void InitDefaultsNodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_NodeAttribution_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::NodeAttribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::NodeAttribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_NodeAttribution_IntersectionTraversalAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,}};

static void InitDefaultsStrandAttribution_OrientedTiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_StrandAttribution_OrientedTiledLinkReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::StrandAttribution_OrientedTiledLinkReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::StrandAttribution_OrientedTiledLinkReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StrandAttribution_OrientedTiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStrandAttribution_OrientedTiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_TiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base,}};

static void InitDefaultsStrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_StrandAttribution_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::StrandAttribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::StrandAttribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_StrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsStrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_StrandAttributionLocalReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base,
      &scc_info_ParametricLocation_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base,
      &scc_info_StrandAttribution_OrientedTiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,
      &scc_info_RoutingStrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,}};

static void InitDefaultsRoutingAttributionGroup_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_RoutingAttributionGroup_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::RoutingAttributionGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::RoutingAttributionGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RoutingAttributionGroup_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoutingAttributionGroup_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {}};

static void InitDefaultsRoutingLinkParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<11> scc_info_RoutingLinkParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 11, InitDefaultsRoutingLinkParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_RoadUsers_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fcommon_2eproto.base,
      &scc_info_BuiltUpAreaRoad_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto.base,
      &scc_info_ComplexIntersection_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto.base,
      &scc_info_TrafficMessageChannelCode_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto.base,
      &scc_info_ConditionalUsageFeeRequired_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto.base,
      &scc_info_ConditionalOvertakingRestriction_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto.base,
      &scc_info_ConditionalAccessRestriction_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto.base,
      &scc_info_ConditionalAccessPermission_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto.base,
      &scc_info_RoadDivider_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto.base,
      &scc_info_AdministrativeAreaRelationship_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,
      &scc_info_RoadIdentifiers_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto.base,}};

static void InitDefaultsRoutingLinkPointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_RoutingLinkPointAttribution_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RoutingLinkPointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRoutingLinkPointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_ConditionalRestrictedDrivingManoeuvre_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto.base,
      &scc_info_ConditionalPermittedDrivingManoeuvre_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto.base,
      &scc_info_ConditionalTollStructure_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto.base,}};

static void InitDefaultsRoutingNodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_RoutingNodeAttribution_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::RoutingNodeAttribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::RoutingNodeAttribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RoutingNodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRoutingNodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_ConditionalRestrictedDrivingManoeuvre_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto.base,}};

static void InitDefaultsRoutingStrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_RoutingStrandAttribution_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::RoutingStrandAttribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::RoutingStrandAttribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RoutingStrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRoutingStrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_ConditionalRestrictedDrivingManoeuvre_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto.base,
      &scc_info_ConditionalPermittedDrivingManoeuvre_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto.base,}};

static void InitDefaultsAdministrativeAreaRelationship_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_AdministrativeAreaRelationship_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AdministrativeAreaRelationship_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAdministrativeAreaRelationship_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_DefinesAdministrativeAreaBoundary_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,
      &scc_info_WithinAdministrativeArea_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base,}};

static void InitDefaultsDefinesAdministrativeAreaBoundary_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_DefinesAdministrativeAreaBoundary_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DefinesAdministrativeAreaBoundary_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDefinesAdministrativeAreaBoundary_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_PartitionedAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base,}};

static void InitDefaultsWithinAdministrativeArea_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::routing::_WithinAdministrativeArea_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WithinAdministrativeArea_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWithinAdministrativeArea_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto}, {
      &scc_info_PartitionedAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base,}};

void InitDefaults_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_RoutingAttributesLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinkAttribution_ParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinkAttribution_PointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinkAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeAttribution_IntersectionTraversalAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StrandAttribution_OrientedTiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoutingAttributionGroup_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoutingLinkParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoutingLinkPointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoutingNodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoutingStrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdministrativeAreaRelationship_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DefinesAdministrativeAreaBoundary_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WithinAdministrativeArea_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[16];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingAttributesLayerTile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingAttributesLayerTile, here_tile_id_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingAttributesLayerTile, link_attribution_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingAttributesLayerTile, node_attribution_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingAttributesLayerTile, strand_attribution_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingAttributesLayerTile, attribution_group_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution_ParametricAttribution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution_ParametricAttribution, applies_to_range_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution_ParametricAttribution, applies_to_direction_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution_ParametricAttribution, attribution_group_indexes_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution_ParametricAttribution, link_parametric_attribution_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution_PointAttribution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution_PointAttribution, applies_to_location_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution_PointAttribution, applies_to_direction_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution_PointAttribution, attribution_group_indexes_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution_PointAttribution, link_point_attribution_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution, link_local_ref_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution, parametric_attribution_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution, point_attribution_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::LinkAttribution, strand_attribution_refs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::NodeAttribution_IntersectionTraversalAttribution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::NodeAttribution_IntersectionTraversalAttribution, from_link_refs_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::NodeAttribution_IntersectionTraversalAttribution, to_link_refs_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::NodeAttribution_IntersectionTraversalAttribution, attribution_group_indexes_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::NodeAttribution_IntersectionTraversalAttribution, node_attribution_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::NodeAttribution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::NodeAttribution, node_id_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::NodeAttribution, intersection_traversal_attribution_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::StrandAttribution_OrientedTiledLinkReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::StrandAttribution_OrientedTiledLinkReference, additional_link_refs_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::StrandAttribution_OrientedTiledLinkReference, link_orientation_in_strand_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::StrandAttribution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::StrandAttribution, strand_attribution_id_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::StrandAttribution, first_link_id_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::StrandAttribution, first_link_start_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::StrandAttribution, first_link_orientation_in_strand_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::StrandAttribution, additional_link_refs_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::StrandAttribution, last_link_end_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::StrandAttribution, attribution_group_indexes_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::StrandAttribution, strand_attribution_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingAttributionGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttribution, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttribution, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, accessible_by_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, functional_class_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, is_multiply_digitized_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, is_bridge_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, is_tunnel_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, is_controlled_access_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, is_limited_access_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, is_urban_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, is_priority_road_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, is_ramp_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, built_up_area_road_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, complex_intersection_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, rds_tmc_code_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, conditional_usage_fee_required_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, conditional_overtaking_restriction_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, conditional_access_restriction_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, conditional_access_permission_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, road_divider_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, administrative_area_relationship_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, road_identifiers_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttributionDefaultTypeInternal, is_within_interchange_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttribution, attribute_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttribution, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttribution, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttributionDefaultTypeInternal, conditional_restricted_driving_manoeuvre_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttributionDefaultTypeInternal, conditional_uturn_restricted_driving_manoeuvre_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttributionDefaultTypeInternal, conditional_uturn_permitted_driving_manoeuvre_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttributionDefaultTypeInternal, conditional_toll_structure_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttribution, attribute_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingNodeAttribution, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingNodeAttribution, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingNodeAttributionDefaultTypeInternal, conditional_restricted_driving_manoeuvre_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingNodeAttribution, attribute_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingStrandAttribution, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingStrandAttribution, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingStrandAttributionDefaultTypeInternal, conditional_restricted_driving_manoeuvre_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::RoutingStrandAttributionDefaultTypeInternal, conditional_permitted_driving_manoeuvre_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::RoutingStrandAttribution, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationshipDefaultTypeInternal, administrative_area_boundary_),
  offsetof(::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationshipDefaultTypeInternal, within_administrative_area_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship, relation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary, left_administrative_area_ref_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary, right_administrative_area_ref_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea, administrative_area_ref_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::RoutingAttributesLayerTile)},
  { 10, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::LinkAttribution_ParametricAttribution)},
  { 19, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::LinkAttribution_PointAttribution)},
  { 28, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::LinkAttribution)},
  { 37, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::NodeAttribution_IntersectionTraversalAttribution)},
  { 46, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::NodeAttribution)},
  { 53, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::StrandAttribution_OrientedTiledLinkReference)},
  { 60, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::StrandAttribution)},
  { 73, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::RoutingAttributionGroup)},
  { 78, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttribution)},
  { 105, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttribution)},
  { 115, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::RoutingNodeAttribution)},
  { 122, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::RoutingStrandAttribution)},
  { 130, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship)},
  { 138, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary)},
  { 145, -1, sizeof(::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_RoutingAttributesLayerTile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_LinkAttribution_ParametricAttribution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_LinkAttribution_PointAttribution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_LinkAttribution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_NodeAttribution_IntersectionTraversalAttribution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_NodeAttribution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_StrandAttribution_OrientedTiledLinkReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_StrandAttribution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_RoutingAttributionGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_RoutingLinkPointAttribution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_RoutingNodeAttribution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_RoutingStrandAttribution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_AdministrativeAreaRelationship_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_DefinesAdministrativeAreaBoundary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::routing::_WithinAdministrativeArea_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto = {
  {}, AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto, "com/here/pb/hdmap/external/v1/routing/layer-routing-attributes.proto", schemas,
  file_default_instances, TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto::offsets,
  file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto, 16, file_level_enum_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto, file_level_service_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto,
};

const char descriptor_table_protodef_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[] =
  "\nDcom/here/pb/hdmap/external/v1/routing/"
  "layer-routing-attributes.proto\022%com.here"
  ".pb.hdmap.external.v1.routing\0321com/here/"
  "pb/hdmap/external/v1/common/common.proto"
  "\032-com/here/pb/hdmap/shared/v1/core/commo"
  "n.proto\032=com/here/pb/hdmap/shared/v1/cor"
  "e/conditional-attributes.proto\032\?com/here"
  "/pb/hdmap/shared/v1/core/unconditional-a"
  "ttributes.proto\"\214\003\n\032RoutingAttributesLay"
  "erTile\022\024\n\014here_tile_id\030\001 \001(\r\022P\n\020link_att"
  "ribution\030\002 \003(\01326.com.here.pb.hdmap.exter"
  "nal.v1.routing.LinkAttribution\022P\n\020node_a"
  "ttribution\030\003 \003(\01326.com.here.pb.hdmap.ext"
  "ernal.v1.routing.NodeAttribution\022T\n\022stra"
  "nd_attribution\030\004 \003(\01328.com.here.pb.hdmap"
  ".external.v1.routing.StrandAttribution\022^"
  "\n\026attribution_group_list\030\005 \003(\0132>.com.her"
  "e.pb.hdmap.external.v1.routing.RoutingAt"
  "tributionGroup\"\316\007\n\017LinkAttribution\022\026\n\016li"
  "nk_local_ref\030\001 \001(\r\022l\n\026parametric_attribu"
  "tion\030\002 \003(\0132L.com.here.pb.hdmap.external."
  "v1.routing.LinkAttribution.ParametricAtt"
  "ribution\022b\n\021point_attribution\030\003 \003(\0132G.co"
  "m.here.pb.hdmap.external.v1.routing.Link"
  "Attribution.PointAttribution\022f\n\027strand_a"
  "ttribution_refs\030\004 \003(\0132E.com.here.pb.hdma"
  "p.external.v1.common.TiledStrandAttribut"
  "ionReference\032\324\002\n\025ParametricAttribution\022O"
  "\n\020applies_to_range\030\001 \001(\01325.com.here.pb.h"
  "dmap.external.v1.common.ParametricRange\022"
  "U\n\024applies_to_direction\030\002 \001(\01627.com.here"
  ".pb.hdmap.external.v1.common.RelativeDir"
  "ection\022%\n\031attribution_group_indexes\030\003 \003("
  "\rB\002\020\001\022l\n\033link_parametric_attribution\030\004 \003"
  "(\0132G.com.here.pb.hdmap.external.v1.routi"
  "ng.RoutingLinkParametricAttribution\032\221\002\n\020"
  "PointAttribution\022\033\n\023applies_to_location\030"
  "\001 \001(\001\022U\n\024applies_to_direction\030\002 \001(\01627.co"
  "m.here.pb.hdmap.external.v1.common.Relat"
  "iveDirection\022%\n\031attribution_group_indexe"
  "s\030\003 \003(\rB\002\020\001\022b\n\026link_point_attribution\030\004 "
  "\003(\0132B.com.here.pb.hdmap.external.v1.rout"
  "ing.RoutingLinkPointAttribution\"\357\003\n\017Node"
  "Attribution\022\017\n\007node_id\030\001 \001(\r\022\203\001\n\"interse"
  "ction_traversal_attribution\030\002 \003(\0132W.com."
  "here.pb.hdmap.external.v1.routing.NodeAt"
  "tribution.IntersectionTraversalAttributi"
  "on\032\304\002\n IntersectionTraversalAttribution\022"
  "P\n\016from_link_refs\030\001 \003(\01328.com.here.pb.hd"
  "map.external.v1.common.TiledLinkReferenc"
  "e\022N\n\014to_link_refs\030\002 \003(\01328.com.here.pb.hd"
  "map.external.v1.common.TiledLinkReferenc"
  "e\022%\n\031attribution_group_indexes\030\003 \003(\rB\002\020\001"
  "\022W\n\020node_attribution\030\004 \003(\0132=.com.here.pb"
  ".hdmap.external.v1.routing.RoutingNodeAt"
  "tribution\"\343\006\n\021StrandAttribution\022d\n\025stran"
  "d_attribution_id\030\001 \001(\0132E.com.here.pb.hdm"
  "ap.external.v1.common.StrandAttributionL"
  "ocalReference\022\025\n\rfirst_link_id\030\002 \001(\r\022R\n\020"
  "first_link_start\030\003 \001(\01328.com.here.pb.hdm"
  "ap.external.v1.common.ParametricLocation"
  "\022a\n first_link_orientation_in_strand\030\004 \001"
  "(\01627.com.here.pb.hdmap.external.v1.commo"
  "n.RelativeDirection\022q\n\024additional_link_r"
  "efs\030\005 \003(\0132S.com.here.pb.hdmap.external.v"
  "1.routing.StrandAttribution.OrientedTile"
  "dLinkReference\022O\n\rlast_link_end\030\006 \001(\01328."
  "com.here.pb.hdmap.external.v1.common.Par"
  "ametricLocation\022%\n\031attribution_group_ind"
  "exes\030\007 \003(\rB\002\020\001\022[\n\022strand_attribution\030\010 \003"
  "(\0132\?.com.here.pb.hdmap.external.v1.routi"
  "ng.RoutingStrandAttribution\032\321\001\n\032Oriented"
  "TiledLinkReference\022V\n\024additional_link_re"
  "fs\030\001 \001(\01328.com.here.pb.hdmap.external.v1"
  ".common.TiledLinkReference\022[\n\032link_orien"
  "tation_in_strand\030\002 \001(\01627.com.here.pb.hdm"
  "ap.external.v1.common.RelativeDirection\""
  "\037\n\027RoutingAttributionGroupJ\004\010\001\020\002\"\343\n\n Rou"
  "tingLinkParametricAttribution\022D\n\raccessi"
  "ble_by\030\002 \001(\0132+.com.here.pb.hdmap.shared."
  "v1.core.RoadUsersH\000\022M\n\020functional_class\030"
  "\003 \001(\01621.com.here.pb.hdmap.shared.v1.core"
  ".FunctionalClassH\000\022\037\n\025is_multiply_digiti"
  "zed\030\004 \001(\010H\000\022\023\n\tis_bridge\030\005 \001(\010H\000\022\023\n\tis_t"
  "unnel\030\006 \001(\010H\000\022\036\n\024is_controlled_access\030\007 "
  "\001(\010H\000\022\033\n\021is_limited_access\030\010 \001(\010H\000\022\022\n\010is"
  "_urban\030\t \001(\010H\000\022\032\n\020is_priority_road\030\n \001(\010"
  "H\000\022\021\n\007is_ramp\030\013 \001(\010H\000\022O\n\022built_up_area_r"
  "oad\030\014 \001(\01321.com.here.pb.hdmap.shared.v1."
  "core.BuiltUpAreaRoadH\000\022U\n\024complex_inters"
  "ection\030\r \001(\01325.com.here.pb.hdmap.shared."
  "v1.core.ComplexIntersectionH\000\022S\n\014rds_tmc"
  "_code\030\016 \001(\0132;.com.here.pb.hdmap.shared.v"
  "1.core.TrafficMessageChannelCodeH\000\022g\n\036co"
  "nditional_usage_fee_required\030\017 \001(\0132=.com"
  ".here.pb.hdmap.shared.v1.core.Conditiona"
  "lUsageFeeRequiredH\000\022p\n\"conditional_overt"
  "aking_restriction\030\020 \001(\0132B.com.here.pb.hd"
  "map.shared.v1.core.ConditionalOvertaking"
  "RestrictionH\000\022h\n\036conditional_access_rest"
  "riction\030\021 \001(\0132>.com.here.pb.hdmap.shared"
  ".v1.core.ConditionalAccessRestrictionH\000\022"
  "f\n\035conditional_access_permission\030\022 \001(\0132="
  ".com.here.pb.hdmap.shared.v1.core.Condit"
  "ionalAccessPermissionH\000\022E\n\014road_divider\030"
  "\023 \001(\0132-.com.here.pb.hdmap.shared.v1.core"
  ".RoadDividerH\000\022q\n administrative_area_re"
  "lationship\030\024 \001(\0132E.com.here.pb.hdmap.ext"
  "ernal.v1.routing.AdministrativeAreaRelat"
  "ionshipH\000\022M\n\020road_identifiers\030\025 \001(\01321.co"
  "m.here.pb.hdmap.shared.v1.core.RoadIdent"
  "ifiersH\000\022\037\n\025is_within_interchange\030\026 \001(\010H"
  "\000B\013\n\tattribute\"\216\004\n\033RoutingLinkPointAttri"
  "bution\022{\n(conditional_restricted_driving"
  "_manoeuvre\030\001 \001(\0132G.com.here.pb.hdmap.sha"
  "red.v1.core.ConditionalRestrictedDriving"
  "ManoeuvreH\000\022\201\001\n.conditional_uturn_restri"
  "cted_driving_manoeuvre\030\002 \001(\0132G.com.here."
  "pb.hdmap.shared.v1.core.ConditionalRestr"
  "ictedDrivingManoeuvreH\000\022\177\n-conditional_u"
  "turn_permitted_driving_manoeuvre\030\003 \001(\0132F"
  ".com.here.pb.hdmap.shared.v1.core.Condit"
  "ionalPermittedDrivingManoeuvreH\000\022`\n\032cond"
  "itional_toll_structure\030\004 \001(\0132:.com.here."
  "pb.hdmap.shared.v1.core.ConditionalTollS"
  "tructureH\000B\013\n\tattribute\"\242\001\n\026RoutingNodeA"
  "ttribution\022{\n(conditional_restricted_dri"
  "ving_manoeuvre\030\001 \001(\0132G.com.here.pb.hdmap"
  ".shared.v1.core.ConditionalRestrictedDri"
  "vingManoeuvreH\000B\013\n\tattribute\"\232\002\n\030Routing"
  "StrandAttribution\022{\n(conditional_restric"
  "ted_driving_manoeuvre\030\001 \001(\0132G.com.here.p"
  "b.hdmap.shared.v1.core.ConditionalRestri"
  "ctedDrivingManoeuvreH\000\022y\n\'conditional_pe"
  "rmitted_driving_manoeuvre\030\002 \001(\0132F.com.he"
  "re.pb.hdmap.shared.v1.core.ConditionalPe"
  "rmittedDrivingManoeuvreH\000B\006\n\004type\"\205\002\n\036Ad"
  "ministrativeAreaRelationship\022p\n\034administ"
  "rative_area_boundary\030\001 \001(\0132H.com.here.pb"
  ".hdmap.external.v1.routing.DefinesAdmini"
  "strativeAreaBoundaryH\000\022e\n\032within_adminis"
  "trative_area\030\002 \001(\0132\?.com.here.pb.hdmap.e"
  "xternal.v1.routing.WithinAdministrativeA"
  "reaH\000B\n\n\010relation\"\214\002\n!DefinesAdministrat"
  "iveAreaBoundary\022r\n\034left_administrative_a"
  "rea_ref\030\001 \001(\0132L.com.here.pb.hdmap.extern"
  "al.v1.common.PartitionedAdministrativeAr"
  "eaReference\022s\n\035right_administrative_area"
  "_ref\030\002 \001(\0132L.com.here.pb.hdmap.external."
  "v1.common.PartitionedAdministrativeAreaR"
  "eference\"\211\001\n\030WithinAdministrativeArea\022m\n"
  "\027administrative_area_ref\030\001 \001(\0132L.com.her"
  "e.pb.hdmap.external.v1.common.Partitione"
  "dAdministrativeAreaReferenceb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto = {
  false, InitDefaults_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto, 
  descriptor_table_protodef_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto,
  "com/here/pb/hdmap/external/v1/routing/layer-routing-attributes.proto", &assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto, 6156,
};

void AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[4] =
  {
    ::AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto,
    ::AddDescriptors_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fcommon_2eproto,
    ::AddDescriptors_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2fconditional_2dattributes_2eproto,
    ::AddDescriptors_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fcore_2funconditional_2dattributes_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto, deps, 4);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto = []() { AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto(); return true; }();
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace routing {

// ===================================================================

void RoutingAttributesLayerTile::InitAsDefaultInstance() {
}
class RoutingAttributesLayerTile::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoutingAttributesLayerTile::kHereTileIdFieldNumber;
const int RoutingAttributesLayerTile::kLinkAttributionFieldNumber;
const int RoutingAttributesLayerTile::kNodeAttributionFieldNumber;
const int RoutingAttributesLayerTile::kStrandAttributionFieldNumber;
const int RoutingAttributesLayerTile::kAttributionGroupListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoutingAttributesLayerTile::RoutingAttributesLayerTile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
}
RoutingAttributesLayerTile::RoutingAttributesLayerTile(const RoutingAttributesLayerTile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      link_attribution_(from.link_attribution_),
      node_attribution_(from.node_attribution_),
      strand_attribution_(from.strand_attribution_),
      attribution_group_list_(from.attribution_group_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  here_tile_id_ = from.here_tile_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
}

void RoutingAttributesLayerTile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RoutingAttributesLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  here_tile_id_ = 0u;
}

RoutingAttributesLayerTile::~RoutingAttributesLayerTile() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  SharedDtor();
}

void RoutingAttributesLayerTile::SharedDtor() {
}

void RoutingAttributesLayerTile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RoutingAttributesLayerTile& RoutingAttributesLayerTile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RoutingAttributesLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void RoutingAttributesLayerTile::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  link_attribution_.Clear();
  node_attribution_.Clear();
  strand_attribution_.Clear();
  attribution_group_list_.Clear();
  here_tile_id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RoutingAttributesLayerTile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RoutingAttributesLayerTile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 here_tile_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_here_tile_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution link_attribution = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::routing::LinkAttribution::_InternalParse;
          object = msg->add_link_attribution();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.routing.NodeAttribution node_attribution = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::routing::NodeAttribution::_InternalParse;
          object = msg->add_node_attribution();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.routing.StrandAttribution strand_attribution = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::routing::StrandAttribution::_InternalParse;
          object = msg->add_strand_attribution();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup attribution_group_list = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::routing::RoutingAttributionGroup::_InternalParse;
          object = msg->add_attribution_group_list();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RoutingAttributesLayerTile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 here_tile_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution link_attribution = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_link_attribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.routing.NodeAttribution node_attribution = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_node_attribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.routing.StrandAttribution strand_attribution = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_strand_attribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup attribution_group_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attribution_group_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RoutingAttributesLayerTile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->here_tile_id(), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution link_attribution = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_attribution_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->link_attribution(static_cast<int>(i)),
      output);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.NodeAttribution node_attribution = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_attribution_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->node_attribution(static_cast<int>(i)),
      output);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.StrandAttribution strand_attribution = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->strand_attribution_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->strand_attribution(static_cast<int>(i)),
      output);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup attribution_group_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribution_group_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->attribution_group_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
}

::google::protobuf::uint8* RoutingAttributesLayerTile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->here_tile_id(), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution link_attribution = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_attribution_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->link_attribution(static_cast<int>(i)), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.NodeAttribution node_attribution = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_attribution_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->node_attribution(static_cast<int>(i)), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.StrandAttribution strand_attribution = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->strand_attribution_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->strand_attribution(static_cast<int>(i)), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup attribution_group_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribution_group_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->attribution_group_list(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  return target;
}

size_t RoutingAttributesLayerTile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution link_attribution = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->link_attribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->link_attribution(static_cast<int>(i)));
    }
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.NodeAttribution node_attribution = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->node_attribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->node_attribution(static_cast<int>(i)));
    }
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.StrandAttribution strand_attribution = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->strand_attribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->strand_attribution(static_cast<int>(i)));
    }
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup attribution_group_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->attribution_group_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attribution_group_list(static_cast<int>(i)));
    }
  }

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoutingAttributesLayerTile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  GOOGLE_DCHECK_NE(&from, this);
  const RoutingAttributesLayerTile* source =
      ::google::protobuf::DynamicCastToGenerated<RoutingAttributesLayerTile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
    MergeFrom(*source);
  }
}

void RoutingAttributesLayerTile::MergeFrom(const RoutingAttributesLayerTile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  link_attribution_.MergeFrom(from.link_attribution_);
  node_attribution_.MergeFrom(from.node_attribution_);
  strand_attribution_.MergeFrom(from.strand_attribution_);
  attribution_group_list_.MergeFrom(from.attribution_group_list_);
  if (from.here_tile_id() != 0) {
    set_here_tile_id(from.here_tile_id());
  }
}

void RoutingAttributesLayerTile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoutingAttributesLayerTile::CopyFrom(const RoutingAttributesLayerTile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributesLayerTile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoutingAttributesLayerTile::IsInitialized() const {
  return true;
}

void RoutingAttributesLayerTile::Swap(RoutingAttributesLayerTile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoutingAttributesLayerTile::InternalSwap(RoutingAttributesLayerTile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&link_attribution_)->InternalSwap(CastToBase(&other->link_attribution_));
  CastToBase(&node_attribution_)->InternalSwap(CastToBase(&other->node_attribution_));
  CastToBase(&strand_attribution_)->InternalSwap(CastToBase(&other->strand_attribution_));
  CastToBase(&attribution_group_list_)->InternalSwap(CastToBase(&other->attribution_group_list_));
  swap(here_tile_id_, other->here_tile_id_);
}

::google::protobuf::Metadata RoutingAttributesLayerTile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LinkAttribution_ParametricAttribution::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::routing::_LinkAttribution_ParametricAttribution_default_instance_._instance.get_mutable()->applies_to_range_ = const_cast< ::com::here::pb::hdmap::external::v1::common::ParametricRange*>(
      ::com::here::pb::hdmap::external::v1::common::ParametricRange::internal_default_instance());
}
class LinkAttribution_ParametricAttribution::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::common::ParametricRange& applies_to_range(const LinkAttribution_ParametricAttribution* msg);
};

const ::com::here::pb::hdmap::external::v1::common::ParametricRange&
LinkAttribution_ParametricAttribution::HasBitSetters::applies_to_range(const LinkAttribution_ParametricAttribution* msg) {
  return *msg->applies_to_range_;
}
void LinkAttribution_ParametricAttribution::clear_applies_to_range() {
  if (GetArenaNoVirtual() == nullptr && applies_to_range_ != nullptr) {
    delete applies_to_range_;
  }
  applies_to_range_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkAttribution_ParametricAttribution::kAppliesToRangeFieldNumber;
const int LinkAttribution_ParametricAttribution::kAppliesToDirectionFieldNumber;
const int LinkAttribution_ParametricAttribution::kAttributionGroupIndexesFieldNumber;
const int LinkAttribution_ParametricAttribution::kLinkParametricAttributionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkAttribution_ParametricAttribution::LinkAttribution_ParametricAttribution()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
}
LinkAttribution_ParametricAttribution::LinkAttribution_ParametricAttribution(const LinkAttribution_ParametricAttribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      attribution_group_indexes_(from.attribution_group_indexes_),
      link_parametric_attribution_(from.link_parametric_attribution_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_applies_to_range()) {
    applies_to_range_ = new ::com::here::pb::hdmap::external::v1::common::ParametricRange(*from.applies_to_range_);
  } else {
    applies_to_range_ = nullptr;
  }
  applies_to_direction_ = from.applies_to_direction_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
}

void LinkAttribution_ParametricAttribution::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LinkAttribution_ParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::memset(&applies_to_range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&applies_to_direction_) -
      reinterpret_cast<char*>(&applies_to_range_)) + sizeof(applies_to_direction_));
}

LinkAttribution_ParametricAttribution::~LinkAttribution_ParametricAttribution() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  SharedDtor();
}

void LinkAttribution_ParametricAttribution::SharedDtor() {
  if (this != internal_default_instance()) delete applies_to_range_;
}

void LinkAttribution_ParametricAttribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinkAttribution_ParametricAttribution& LinkAttribution_ParametricAttribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LinkAttribution_ParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void LinkAttribution_ParametricAttribution::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribution_group_indexes_.Clear();
  link_parametric_attribution_.Clear();
  if (GetArenaNoVirtual() == nullptr && applies_to_range_ != nullptr) {
    delete applies_to_range_;
  }
  applies_to_range_ = nullptr;
  applies_to_direction_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LinkAttribution_ParametricAttribution::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LinkAttribution_ParametricAttribution*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_range = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::ParametricRange::_InternalParse;
        object = msg->mutable_applies_to_range();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_applies_to_direction(static_cast<::com::here::pb::hdmap::external::v1::common::RelativeDirection>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 attribution_group_indexes = 3 [packed = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 26) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_attribution_group_indexes();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        do {
          msg->add_attribution_group_indexes(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution link_parametric_attribution = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttribution::_InternalParse;
          object = msg->add_link_parametric_attribution();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LinkAttribution_ParametricAttribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_range = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_applies_to_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_applies_to_direction(static_cast< ::com::here::pb::hdmap::external::v1::common::RelativeDirection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 attribution_group_indexes = 3 [packed = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_attribution_group_indexes())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_attribution_group_indexes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution link_parametric_attribution = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_link_parametric_attribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LinkAttribution_ParametricAttribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_range = 1;
  if (this->has_applies_to_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::applies_to_range(this), output);
  }

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
  if (this->applies_to_direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->applies_to_direction(), output);
  }

  // repeated uint32 attribution_group_indexes = 3 [packed = true];
  if (this->attribution_group_indexes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_attribution_group_indexes_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->attribution_group_indexes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->attribution_group_indexes(i), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution link_parametric_attribution = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_parametric_attribution_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->link_parametric_attribution(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
}

::google::protobuf::uint8* LinkAttribution_ParametricAttribution::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_range = 1;
  if (this->has_applies_to_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::applies_to_range(this), target);
  }

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
  if (this->applies_to_direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->applies_to_direction(), target);
  }

  // repeated uint32 attribution_group_indexes = 3 [packed = true];
  if (this->attribution_group_indexes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _attribution_group_indexes_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->attribution_group_indexes_, target);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution link_parametric_attribution = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_parametric_attribution_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->link_parametric_attribution(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  return target;
}

size_t LinkAttribution_ParametricAttribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 attribution_group_indexes = 3 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->attribution_group_indexes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _attribution_group_indexes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution link_parametric_attribution = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->link_parametric_attribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->link_parametric_attribution(static_cast<int>(i)));
    }
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_range = 1;
  if (this->has_applies_to_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *applies_to_range_);
  }

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
  if (this->applies_to_direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->applies_to_direction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkAttribution_ParametricAttribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkAttribution_ParametricAttribution* source =
      ::google::protobuf::DynamicCastToGenerated<LinkAttribution_ParametricAttribution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
    MergeFrom(*source);
  }
}

void LinkAttribution_ParametricAttribution::MergeFrom(const LinkAttribution_ParametricAttribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribution_group_indexes_.MergeFrom(from.attribution_group_indexes_);
  link_parametric_attribution_.MergeFrom(from.link_parametric_attribution_);
  if (from.has_applies_to_range()) {
    mutable_applies_to_range()->::com::here::pb::hdmap::external::v1::common::ParametricRange::MergeFrom(from.applies_to_range());
  }
  if (from.applies_to_direction() != 0) {
    set_applies_to_direction(from.applies_to_direction());
  }
}

void LinkAttribution_ParametricAttribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkAttribution_ParametricAttribution::CopyFrom(const LinkAttribution_ParametricAttribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkAttribution_ParametricAttribution::IsInitialized() const {
  return true;
}

void LinkAttribution_ParametricAttribution::Swap(LinkAttribution_ParametricAttribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkAttribution_ParametricAttribution::InternalSwap(LinkAttribution_ParametricAttribution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  attribution_group_indexes_.InternalSwap(&other->attribution_group_indexes_);
  CastToBase(&link_parametric_attribution_)->InternalSwap(CastToBase(&other->link_parametric_attribution_));
  swap(applies_to_range_, other->applies_to_range_);
  swap(applies_to_direction_, other->applies_to_direction_);
}

::google::protobuf::Metadata LinkAttribution_ParametricAttribution::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LinkAttribution_PointAttribution::InitAsDefaultInstance() {
}
class LinkAttribution_PointAttribution::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkAttribution_PointAttribution::kAppliesToLocationFieldNumber;
const int LinkAttribution_PointAttribution::kAppliesToDirectionFieldNumber;
const int LinkAttribution_PointAttribution::kAttributionGroupIndexesFieldNumber;
const int LinkAttribution_PointAttribution::kLinkPointAttributionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkAttribution_PointAttribution::LinkAttribution_PointAttribution()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
}
LinkAttribution_PointAttribution::LinkAttribution_PointAttribution(const LinkAttribution_PointAttribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      attribution_group_indexes_(from.attribution_group_indexes_),
      link_point_attribution_(from.link_point_attribution_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&applies_to_location_, &from.applies_to_location_,
    static_cast<size_t>(reinterpret_cast<char*>(&applies_to_direction_) -
    reinterpret_cast<char*>(&applies_to_location_)) + sizeof(applies_to_direction_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
}

void LinkAttribution_PointAttribution::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LinkAttribution_PointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::memset(&applies_to_location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&applies_to_direction_) -
      reinterpret_cast<char*>(&applies_to_location_)) + sizeof(applies_to_direction_));
}

LinkAttribution_PointAttribution::~LinkAttribution_PointAttribution() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  SharedDtor();
}

void LinkAttribution_PointAttribution::SharedDtor() {
}

void LinkAttribution_PointAttribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinkAttribution_PointAttribution& LinkAttribution_PointAttribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LinkAttribution_PointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void LinkAttribution_PointAttribution::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribution_group_indexes_.Clear();
  link_point_attribution_.Clear();
  ::memset(&applies_to_location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&applies_to_direction_) -
      reinterpret_cast<char*>(&applies_to_location_)) + sizeof(applies_to_direction_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LinkAttribution_PointAttribution::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LinkAttribution_PointAttribution*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double applies_to_location = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_applies_to_location(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_applies_to_direction(static_cast<::com::here::pb::hdmap::external::v1::common::RelativeDirection>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 attribution_group_indexes = 3 [packed = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 26) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_attribution_group_indexes();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        do {
          msg->add_attribution_group_indexes(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution link_point_attribution = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttribution::_InternalParse;
          object = msg->add_link_point_attribution();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LinkAttribution_PointAttribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double applies_to_location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &applies_to_location_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_applies_to_direction(static_cast< ::com::here::pb::hdmap::external::v1::common::RelativeDirection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 attribution_group_indexes = 3 [packed = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_attribution_group_indexes())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_attribution_group_indexes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution link_point_attribution = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_link_point_attribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LinkAttribution_PointAttribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double applies_to_location = 1;
  if (this->applies_to_location() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->applies_to_location(), output);
  }

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
  if (this->applies_to_direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->applies_to_direction(), output);
  }

  // repeated uint32 attribution_group_indexes = 3 [packed = true];
  if (this->attribution_group_indexes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_attribution_group_indexes_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->attribution_group_indexes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->attribution_group_indexes(i), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution link_point_attribution = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_point_attribution_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->link_point_attribution(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
}

::google::protobuf::uint8* LinkAttribution_PointAttribution::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double applies_to_location = 1;
  if (this->applies_to_location() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->applies_to_location(), target);
  }

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
  if (this->applies_to_direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->applies_to_direction(), target);
  }

  // repeated uint32 attribution_group_indexes = 3 [packed = true];
  if (this->attribution_group_indexes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _attribution_group_indexes_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->attribution_group_indexes_, target);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution link_point_attribution = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_point_attribution_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->link_point_attribution(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  return target;
}

size_t LinkAttribution_PointAttribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 attribution_group_indexes = 3 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->attribution_group_indexes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _attribution_group_indexes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution link_point_attribution = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->link_point_attribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->link_point_attribution(static_cast<int>(i)));
    }
  }

  // double applies_to_location = 1;
  if (this->applies_to_location() != 0) {
    total_size += 1 + 8;
  }

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
  if (this->applies_to_direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->applies_to_direction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkAttribution_PointAttribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkAttribution_PointAttribution* source =
      ::google::protobuf::DynamicCastToGenerated<LinkAttribution_PointAttribution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
    MergeFrom(*source);
  }
}

void LinkAttribution_PointAttribution::MergeFrom(const LinkAttribution_PointAttribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribution_group_indexes_.MergeFrom(from.attribution_group_indexes_);
  link_point_attribution_.MergeFrom(from.link_point_attribution_);
  if (from.applies_to_location() != 0) {
    set_applies_to_location(from.applies_to_location());
  }
  if (from.applies_to_direction() != 0) {
    set_applies_to_direction(from.applies_to_direction());
  }
}

void LinkAttribution_PointAttribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkAttribution_PointAttribution::CopyFrom(const LinkAttribution_PointAttribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkAttribution_PointAttribution::IsInitialized() const {
  return true;
}

void LinkAttribution_PointAttribution::Swap(LinkAttribution_PointAttribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkAttribution_PointAttribution::InternalSwap(LinkAttribution_PointAttribution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  attribution_group_indexes_.InternalSwap(&other->attribution_group_indexes_);
  CastToBase(&link_point_attribution_)->InternalSwap(CastToBase(&other->link_point_attribution_));
  swap(applies_to_location_, other->applies_to_location_);
  swap(applies_to_direction_, other->applies_to_direction_);
}

::google::protobuf::Metadata LinkAttribution_PointAttribution::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LinkAttribution::InitAsDefaultInstance() {
}
class LinkAttribution::HasBitSetters {
 public:
};

void LinkAttribution::clear_strand_attribution_refs() {
  strand_attribution_refs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkAttribution::kLinkLocalRefFieldNumber;
const int LinkAttribution::kParametricAttributionFieldNumber;
const int LinkAttribution::kPointAttributionFieldNumber;
const int LinkAttribution::kStrandAttributionRefsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkAttribution::LinkAttribution()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
}
LinkAttribution::LinkAttribution(const LinkAttribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      parametric_attribution_(from.parametric_attribution_),
      point_attribution_(from.point_attribution_),
      strand_attribution_refs_(from.strand_attribution_refs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  link_local_ref_ = from.link_local_ref_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
}

void LinkAttribution::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LinkAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  link_local_ref_ = 0u;
}

LinkAttribution::~LinkAttribution() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  SharedDtor();
}

void LinkAttribution::SharedDtor() {
}

void LinkAttribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinkAttribution& LinkAttribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LinkAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void LinkAttribution::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parametric_attribution_.Clear();
  point_attribution_.Clear();
  strand_attribution_refs_.Clear();
  link_local_ref_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LinkAttribution::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LinkAttribution*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 link_local_ref = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_link_local_ref(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution parametric_attribution = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::routing::LinkAttribution_ParametricAttribution::_InternalParse;
          object = msg->add_parametric_attribution();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution point_attribution = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::routing::LinkAttribution_PointAttribution::_InternalParse;
          object = msg->add_point_attribution();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference strand_attribution_refs = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference::_InternalParse;
          object = msg->add_strand_attribution_refs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LinkAttribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 link_local_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &link_local_ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution parametric_attribution = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parametric_attribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution point_attribution = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_point_attribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference strand_attribution_refs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_strand_attribution_refs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LinkAttribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 link_local_ref = 1;
  if (this->link_local_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->link_local_ref(), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution parametric_attribution = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parametric_attribution_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->parametric_attribution(static_cast<int>(i)),
      output);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution point_attribution = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_attribution_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->point_attribution(static_cast<int>(i)),
      output);
  }

  // repeated .com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference strand_attribution_refs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->strand_attribution_refs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->strand_attribution_refs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
}

::google::protobuf::uint8* LinkAttribution::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 link_local_ref = 1;
  if (this->link_local_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->link_local_ref(), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution parametric_attribution = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parametric_attribution_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->parametric_attribution(static_cast<int>(i)), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution point_attribution = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_attribution_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->point_attribution(static_cast<int>(i)), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference strand_attribution_refs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->strand_attribution_refs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->strand_attribution_refs(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  return target;
}

size_t LinkAttribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution.ParametricAttribution parametric_attribution = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->parametric_attribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parametric_attribution(static_cast<int>(i)));
    }
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.LinkAttribution.PointAttribution point_attribution = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->point_attribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->point_attribution(static_cast<int>(i)));
    }
  }

  // repeated .com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference strand_attribution_refs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->strand_attribution_refs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->strand_attribution_refs(static_cast<int>(i)));
    }
  }

  // uint32 link_local_ref = 1;
  if (this->link_local_ref() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->link_local_ref());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkAttribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkAttribution* source =
      ::google::protobuf::DynamicCastToGenerated<LinkAttribution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
    MergeFrom(*source);
  }
}

void LinkAttribution::MergeFrom(const LinkAttribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parametric_attribution_.MergeFrom(from.parametric_attribution_);
  point_attribution_.MergeFrom(from.point_attribution_);
  strand_attribution_refs_.MergeFrom(from.strand_attribution_refs_);
  if (from.link_local_ref() != 0) {
    set_link_local_ref(from.link_local_ref());
  }
}

void LinkAttribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkAttribution::CopyFrom(const LinkAttribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.LinkAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkAttribution::IsInitialized() const {
  return true;
}

void LinkAttribution::Swap(LinkAttribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkAttribution::InternalSwap(LinkAttribution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&parametric_attribution_)->InternalSwap(CastToBase(&other->parametric_attribution_));
  CastToBase(&point_attribution_)->InternalSwap(CastToBase(&other->point_attribution_));
  CastToBase(&strand_attribution_refs_)->InternalSwap(CastToBase(&other->strand_attribution_refs_));
  swap(link_local_ref_, other->link_local_ref_);
}

::google::protobuf::Metadata LinkAttribution::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NodeAttribution_IntersectionTraversalAttribution::InitAsDefaultInstance() {
}
class NodeAttribution_IntersectionTraversalAttribution::HasBitSetters {
 public:
};

void NodeAttribution_IntersectionTraversalAttribution::clear_from_link_refs() {
  from_link_refs_.Clear();
}
void NodeAttribution_IntersectionTraversalAttribution::clear_to_link_refs() {
  to_link_refs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeAttribution_IntersectionTraversalAttribution::kFromLinkRefsFieldNumber;
const int NodeAttribution_IntersectionTraversalAttribution::kToLinkRefsFieldNumber;
const int NodeAttribution_IntersectionTraversalAttribution::kAttributionGroupIndexesFieldNumber;
const int NodeAttribution_IntersectionTraversalAttribution::kNodeAttributionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeAttribution_IntersectionTraversalAttribution::NodeAttribution_IntersectionTraversalAttribution()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
}
NodeAttribution_IntersectionTraversalAttribution::NodeAttribution_IntersectionTraversalAttribution(const NodeAttribution_IntersectionTraversalAttribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      from_link_refs_(from.from_link_refs_),
      to_link_refs_(from.to_link_refs_),
      attribution_group_indexes_(from.attribution_group_indexes_),
      node_attribution_(from.node_attribution_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
}

void NodeAttribution_IntersectionTraversalAttribution::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NodeAttribution_IntersectionTraversalAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
}

NodeAttribution_IntersectionTraversalAttribution::~NodeAttribution_IntersectionTraversalAttribution() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  SharedDtor();
}

void NodeAttribution_IntersectionTraversalAttribution::SharedDtor() {
}

void NodeAttribution_IntersectionTraversalAttribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeAttribution_IntersectionTraversalAttribution& NodeAttribution_IntersectionTraversalAttribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodeAttribution_IntersectionTraversalAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void NodeAttribution_IntersectionTraversalAttribution::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_link_refs_.Clear();
  to_link_refs_.Clear();
  attribution_group_indexes_.Clear();
  node_attribution_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodeAttribution_IntersectionTraversalAttribution::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodeAttribution_IntersectionTraversalAttribution*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference from_link_refs = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::common::TiledLinkReference::_InternalParse;
          object = msg->add_from_link_refs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference to_link_refs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::common::TiledLinkReference::_InternalParse;
          object = msg->add_to_link_refs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated uint32 attribution_group_indexes = 3 [packed = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 26) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_attribution_group_indexes();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        do {
          msg->add_attribution_group_indexes(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution node_attribution = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::routing::RoutingNodeAttribution::_InternalParse;
          object = msg->add_node_attribution();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeAttribution_IntersectionTraversalAttribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference from_link_refs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_from_link_refs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference to_link_refs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_to_link_refs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 attribution_group_indexes = 3 [packed = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_attribution_group_indexes())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_attribution_group_indexes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution node_attribution = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_node_attribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodeAttribution_IntersectionTraversalAttribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference from_link_refs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->from_link_refs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->from_link_refs(static_cast<int>(i)),
      output);
  }

  // repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference to_link_refs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->to_link_refs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->to_link_refs(static_cast<int>(i)),
      output);
  }

  // repeated uint32 attribution_group_indexes = 3 [packed = true];
  if (this->attribution_group_indexes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_attribution_group_indexes_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->attribution_group_indexes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->attribution_group_indexes(i), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution node_attribution = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_attribution_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->node_attribution(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
}

::google::protobuf::uint8* NodeAttribution_IntersectionTraversalAttribution::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference from_link_refs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->from_link_refs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->from_link_refs(static_cast<int>(i)), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference to_link_refs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->to_link_refs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->to_link_refs(static_cast<int>(i)), target);
  }

  // repeated uint32 attribution_group_indexes = 3 [packed = true];
  if (this->attribution_group_indexes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _attribution_group_indexes_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->attribution_group_indexes_, target);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution node_attribution = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_attribution_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->node_attribution(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  return target;
}

size_t NodeAttribution_IntersectionTraversalAttribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference from_link_refs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->from_link_refs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->from_link_refs(static_cast<int>(i)));
    }
  }

  // repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference to_link_refs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->to_link_refs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->to_link_refs(static_cast<int>(i)));
    }
  }

  // repeated uint32 attribution_group_indexes = 3 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->attribution_group_indexes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _attribution_group_indexes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution node_attribution = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->node_attribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->node_attribution(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeAttribution_IntersectionTraversalAttribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeAttribution_IntersectionTraversalAttribution* source =
      ::google::protobuf::DynamicCastToGenerated<NodeAttribution_IntersectionTraversalAttribution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
    MergeFrom(*source);
  }
}

void NodeAttribution_IntersectionTraversalAttribution::MergeFrom(const NodeAttribution_IntersectionTraversalAttribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  from_link_refs_.MergeFrom(from.from_link_refs_);
  to_link_refs_.MergeFrom(from.to_link_refs_);
  attribution_group_indexes_.MergeFrom(from.attribution_group_indexes_);
  node_attribution_.MergeFrom(from.node_attribution_);
}

void NodeAttribution_IntersectionTraversalAttribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeAttribution_IntersectionTraversalAttribution::CopyFrom(const NodeAttribution_IntersectionTraversalAttribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeAttribution_IntersectionTraversalAttribution::IsInitialized() const {
  return true;
}

void NodeAttribution_IntersectionTraversalAttribution::Swap(NodeAttribution_IntersectionTraversalAttribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeAttribution_IntersectionTraversalAttribution::InternalSwap(NodeAttribution_IntersectionTraversalAttribution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&from_link_refs_)->InternalSwap(CastToBase(&other->from_link_refs_));
  CastToBase(&to_link_refs_)->InternalSwap(CastToBase(&other->to_link_refs_));
  attribution_group_indexes_.InternalSwap(&other->attribution_group_indexes_);
  CastToBase(&node_attribution_)->InternalSwap(CastToBase(&other->node_attribution_));
}

::google::protobuf::Metadata NodeAttribution_IntersectionTraversalAttribution::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NodeAttribution::InitAsDefaultInstance() {
}
class NodeAttribution::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeAttribution::kNodeIdFieldNumber;
const int NodeAttribution::kIntersectionTraversalAttributionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeAttribution::NodeAttribution()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
}
NodeAttribution::NodeAttribution(const NodeAttribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      intersection_traversal_attribution_(from.intersection_traversal_attribution_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  node_id_ = from.node_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
}

void NodeAttribution::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  node_id_ = 0u;
}

NodeAttribution::~NodeAttribution() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  SharedDtor();
}

void NodeAttribution::SharedDtor() {
}

void NodeAttribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeAttribution& NodeAttribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void NodeAttribution::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intersection_traversal_attribution_.Clear();
  node_id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodeAttribution::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodeAttribution*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 node_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_node_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution intersection_traversal_attribution = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::routing::NodeAttribution_IntersectionTraversalAttribution::_InternalParse;
          object = msg->add_intersection_traversal_attribution();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeAttribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 node_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution intersection_traversal_attribution = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_intersection_traversal_attribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodeAttribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->node_id(), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution intersection_traversal_attribution = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intersection_traversal_attribution_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->intersection_traversal_attribution(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
}

::google::protobuf::uint8* NodeAttribution::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->node_id(), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution intersection_traversal_attribution = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intersection_traversal_attribution_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->intersection_traversal_attribution(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  return target;
}

size_t NodeAttribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.here.pb.hdmap.external.v1.routing.NodeAttribution.IntersectionTraversalAttribution intersection_traversal_attribution = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->intersection_traversal_attribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->intersection_traversal_attribution(static_cast<int>(i)));
    }
  }

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeAttribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeAttribution* source =
      ::google::protobuf::DynamicCastToGenerated<NodeAttribution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
    MergeFrom(*source);
  }
}

void NodeAttribution::MergeFrom(const NodeAttribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  intersection_traversal_attribution_.MergeFrom(from.intersection_traversal_attribution_);
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
}

void NodeAttribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeAttribution::CopyFrom(const NodeAttribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.NodeAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeAttribution::IsInitialized() const {
  return true;
}

void NodeAttribution::Swap(NodeAttribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeAttribution::InternalSwap(NodeAttribution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&intersection_traversal_attribution_)->InternalSwap(CastToBase(&other->intersection_traversal_attribution_));
  swap(node_id_, other->node_id_);
}

::google::protobuf::Metadata NodeAttribution::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StrandAttribution_OrientedTiledLinkReference::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::routing::_StrandAttribution_OrientedTiledLinkReference_default_instance_._instance.get_mutable()->additional_link_refs_ = const_cast< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference*>(
      ::com::here::pb::hdmap::external::v1::common::TiledLinkReference::internal_default_instance());
}
class StrandAttribution_OrientedTiledLinkReference::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::common::TiledLinkReference& additional_link_refs(const StrandAttribution_OrientedTiledLinkReference* msg);
};

const ::com::here::pb::hdmap::external::v1::common::TiledLinkReference&
StrandAttribution_OrientedTiledLinkReference::HasBitSetters::additional_link_refs(const StrandAttribution_OrientedTiledLinkReference* msg) {
  return *msg->additional_link_refs_;
}
void StrandAttribution_OrientedTiledLinkReference::clear_additional_link_refs() {
  if (GetArenaNoVirtual() == nullptr && additional_link_refs_ != nullptr) {
    delete additional_link_refs_;
  }
  additional_link_refs_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StrandAttribution_OrientedTiledLinkReference::kAdditionalLinkRefsFieldNumber;
const int StrandAttribution_OrientedTiledLinkReference::kLinkOrientationInStrandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StrandAttribution_OrientedTiledLinkReference::StrandAttribution_OrientedTiledLinkReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
}
StrandAttribution_OrientedTiledLinkReference::StrandAttribution_OrientedTiledLinkReference(const StrandAttribution_OrientedTiledLinkReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_additional_link_refs()) {
    additional_link_refs_ = new ::com::here::pb::hdmap::external::v1::common::TiledLinkReference(*from.additional_link_refs_);
  } else {
    additional_link_refs_ = nullptr;
  }
  link_orientation_in_strand_ = from.link_orientation_in_strand_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
}

void StrandAttribution_OrientedTiledLinkReference::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StrandAttribution_OrientedTiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::memset(&additional_link_refs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&link_orientation_in_strand_) -
      reinterpret_cast<char*>(&additional_link_refs_)) + sizeof(link_orientation_in_strand_));
}

StrandAttribution_OrientedTiledLinkReference::~StrandAttribution_OrientedTiledLinkReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  SharedDtor();
}

void StrandAttribution_OrientedTiledLinkReference::SharedDtor() {
  if (this != internal_default_instance()) delete additional_link_refs_;
}

void StrandAttribution_OrientedTiledLinkReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StrandAttribution_OrientedTiledLinkReference& StrandAttribution_OrientedTiledLinkReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StrandAttribution_OrientedTiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void StrandAttribution_OrientedTiledLinkReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && additional_link_refs_ != nullptr) {
    delete additional_link_refs_;
  }
  additional_link_refs_ = nullptr;
  link_orientation_in_strand_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StrandAttribution_OrientedTiledLinkReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StrandAttribution_OrientedTiledLinkReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.external.v1.common.TiledLinkReference additional_link_refs = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::TiledLinkReference::_InternalParse;
        object = msg->mutable_additional_link_refs();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.external.v1.common.RelativeDirection link_orientation_in_strand = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_link_orientation_in_strand(static_cast<::com::here::pb::hdmap::external::v1::common::RelativeDirection>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StrandAttribution_OrientedTiledLinkReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.common.TiledLinkReference additional_link_refs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_additional_link_refs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.common.RelativeDirection link_orientation_in_strand = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_link_orientation_in_strand(static_cast< ::com::here::pb::hdmap::external::v1::common::RelativeDirection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StrandAttribution_OrientedTiledLinkReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.TiledLinkReference additional_link_refs = 1;
  if (this->has_additional_link_refs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::additional_link_refs(this), output);
  }

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection link_orientation_in_strand = 2;
  if (this->link_orientation_in_strand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->link_orientation_in_strand(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
}

::google::protobuf::uint8* StrandAttribution_OrientedTiledLinkReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.TiledLinkReference additional_link_refs = 1;
  if (this->has_additional_link_refs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::additional_link_refs(this), target);
  }

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection link_orientation_in_strand = 2;
  if (this->link_orientation_in_strand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->link_orientation_in_strand(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  return target;
}

size_t StrandAttribution_OrientedTiledLinkReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.TiledLinkReference additional_link_refs = 1;
  if (this->has_additional_link_refs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *additional_link_refs_);
  }

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection link_orientation_in_strand = 2;
  if (this->link_orientation_in_strand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->link_orientation_in_strand());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StrandAttribution_OrientedTiledLinkReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  GOOGLE_DCHECK_NE(&from, this);
  const StrandAttribution_OrientedTiledLinkReference* source =
      ::google::protobuf::DynamicCastToGenerated<StrandAttribution_OrientedTiledLinkReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
    MergeFrom(*source);
  }
}

void StrandAttribution_OrientedTiledLinkReference::MergeFrom(const StrandAttribution_OrientedTiledLinkReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_additional_link_refs()) {
    mutable_additional_link_refs()->::com::here::pb::hdmap::external::v1::common::TiledLinkReference::MergeFrom(from.additional_link_refs());
  }
  if (from.link_orientation_in_strand() != 0) {
    set_link_orientation_in_strand(from.link_orientation_in_strand());
  }
}

void StrandAttribution_OrientedTiledLinkReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StrandAttribution_OrientedTiledLinkReference::CopyFrom(const StrandAttribution_OrientedTiledLinkReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrandAttribution_OrientedTiledLinkReference::IsInitialized() const {
  return true;
}

void StrandAttribution_OrientedTiledLinkReference::Swap(StrandAttribution_OrientedTiledLinkReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StrandAttribution_OrientedTiledLinkReference::InternalSwap(StrandAttribution_OrientedTiledLinkReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(additional_link_refs_, other->additional_link_refs_);
  swap(link_orientation_in_strand_, other->link_orientation_in_strand_);
}

::google::protobuf::Metadata StrandAttribution_OrientedTiledLinkReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StrandAttribution::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::routing::_StrandAttribution_default_instance_._instance.get_mutable()->strand_attribution_id_ = const_cast< ::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference*>(
      ::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_StrandAttribution_default_instance_._instance.get_mutable()->first_link_start_ = const_cast< ::com::here::pb::hdmap::external::v1::common::ParametricLocation*>(
      ::com::here::pb::hdmap::external::v1::common::ParametricLocation::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_StrandAttribution_default_instance_._instance.get_mutable()->last_link_end_ = const_cast< ::com::here::pb::hdmap::external::v1::common::ParametricLocation*>(
      ::com::here::pb::hdmap::external::v1::common::ParametricLocation::internal_default_instance());
}
class StrandAttribution::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference& strand_attribution_id(const StrandAttribution* msg);
  static const ::com::here::pb::hdmap::external::v1::common::ParametricLocation& first_link_start(const StrandAttribution* msg);
  static const ::com::here::pb::hdmap::external::v1::common::ParametricLocation& last_link_end(const StrandAttribution* msg);
};

const ::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference&
StrandAttribution::HasBitSetters::strand_attribution_id(const StrandAttribution* msg) {
  return *msg->strand_attribution_id_;
}
const ::com::here::pb::hdmap::external::v1::common::ParametricLocation&
StrandAttribution::HasBitSetters::first_link_start(const StrandAttribution* msg) {
  return *msg->first_link_start_;
}
const ::com::here::pb::hdmap::external::v1::common::ParametricLocation&
StrandAttribution::HasBitSetters::last_link_end(const StrandAttribution* msg) {
  return *msg->last_link_end_;
}
void StrandAttribution::clear_strand_attribution_id() {
  if (GetArenaNoVirtual() == nullptr && strand_attribution_id_ != nullptr) {
    delete strand_attribution_id_;
  }
  strand_attribution_id_ = nullptr;
}
void StrandAttribution::clear_first_link_start() {
  if (GetArenaNoVirtual() == nullptr && first_link_start_ != nullptr) {
    delete first_link_start_;
  }
  first_link_start_ = nullptr;
}
void StrandAttribution::clear_last_link_end() {
  if (GetArenaNoVirtual() == nullptr && last_link_end_ != nullptr) {
    delete last_link_end_;
  }
  last_link_end_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StrandAttribution::kStrandAttributionIdFieldNumber;
const int StrandAttribution::kFirstLinkIdFieldNumber;
const int StrandAttribution::kFirstLinkStartFieldNumber;
const int StrandAttribution::kFirstLinkOrientationInStrandFieldNumber;
const int StrandAttribution::kAdditionalLinkRefsFieldNumber;
const int StrandAttribution::kLastLinkEndFieldNumber;
const int StrandAttribution::kAttributionGroupIndexesFieldNumber;
const int StrandAttribution::kStrandAttributionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StrandAttribution::StrandAttribution()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
}
StrandAttribution::StrandAttribution(const StrandAttribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      additional_link_refs_(from.additional_link_refs_),
      attribution_group_indexes_(from.attribution_group_indexes_),
      strand_attribution_(from.strand_attribution_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_strand_attribution_id()) {
    strand_attribution_id_ = new ::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference(*from.strand_attribution_id_);
  } else {
    strand_attribution_id_ = nullptr;
  }
  if (from.has_first_link_start()) {
    first_link_start_ = new ::com::here::pb::hdmap::external::v1::common::ParametricLocation(*from.first_link_start_);
  } else {
    first_link_start_ = nullptr;
  }
  if (from.has_last_link_end()) {
    last_link_end_ = new ::com::here::pb::hdmap::external::v1::common::ParametricLocation(*from.last_link_end_);
  } else {
    last_link_end_ = nullptr;
  }
  ::memcpy(&first_link_id_, &from.first_link_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&first_link_orientation_in_strand_) -
    reinterpret_cast<char*>(&first_link_id_)) + sizeof(first_link_orientation_in_strand_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
}

void StrandAttribution::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::memset(&strand_attribution_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&first_link_orientation_in_strand_) -
      reinterpret_cast<char*>(&strand_attribution_id_)) + sizeof(first_link_orientation_in_strand_));
}

StrandAttribution::~StrandAttribution() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  SharedDtor();
}

void StrandAttribution::SharedDtor() {
  if (this != internal_default_instance()) delete strand_attribution_id_;
  if (this != internal_default_instance()) delete first_link_start_;
  if (this != internal_default_instance()) delete last_link_end_;
}

void StrandAttribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StrandAttribution& StrandAttribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void StrandAttribution::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  additional_link_refs_.Clear();
  attribution_group_indexes_.Clear();
  strand_attribution_.Clear();
  if (GetArenaNoVirtual() == nullptr && strand_attribution_id_ != nullptr) {
    delete strand_attribution_id_;
  }
  strand_attribution_id_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && first_link_start_ != nullptr) {
    delete first_link_start_;
  }
  first_link_start_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && last_link_end_ != nullptr) {
    delete last_link_end_;
  }
  last_link_end_ = nullptr;
  ::memset(&first_link_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&first_link_orientation_in_strand_) -
      reinterpret_cast<char*>(&first_link_id_)) + sizeof(first_link_orientation_in_strand_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StrandAttribution::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StrandAttribution*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference strand_attribution_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference::_InternalParse;
        object = msg->mutable_strand_attribution_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // uint32 first_link_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_first_link_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .com.here.pb.hdmap.external.v1.common.ParametricLocation first_link_start = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::ParametricLocation::_InternalParse;
        object = msg->mutable_first_link_start();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.external.v1.common.RelativeDirection first_link_orientation_in_strand = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_first_link_orientation_in_strand(static_cast<::com::here::pb::hdmap::external::v1::common::RelativeDirection>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference additional_link_refs = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::routing::StrandAttribution_OrientedTiledLinkReference::_InternalParse;
          object = msg->add_additional_link_refs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // .com.here.pb.hdmap.external.v1.common.ParametricLocation last_link_end = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::ParametricLocation::_InternalParse;
        object = msg->mutable_last_link_end();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated uint32 attribution_group_indexes = 7 [packed = true];
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) == 58) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_attribution_group_indexes();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        do {
          msg->add_attribution_group_indexes(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 56 && (ptr += 1));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution strand_attribution = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::routing::RoutingStrandAttribution::_InternalParse;
          object = msg->add_strand_attribution();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 66 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StrandAttribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference strand_attribution_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_strand_attribution_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 first_link_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &first_link_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.common.ParametricLocation first_link_start = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_first_link_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.common.RelativeDirection first_link_orientation_in_strand = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_first_link_orientation_in_strand(static_cast< ::com::here::pb::hdmap::external::v1::common::RelativeDirection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference additional_link_refs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_additional_link_refs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.common.ParametricLocation last_link_end = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_link_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 attribution_group_indexes = 7 [packed = true];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_attribution_group_indexes())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_attribution_group_indexes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution strand_attribution = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_strand_attribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StrandAttribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference strand_attribution_id = 1;
  if (this->has_strand_attribution_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::strand_attribution_id(this), output);
  }

  // uint32 first_link_id = 2;
  if (this->first_link_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->first_link_id(), output);
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricLocation first_link_start = 3;
  if (this->has_first_link_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::first_link_start(this), output);
  }

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection first_link_orientation_in_strand = 4;
  if (this->first_link_orientation_in_strand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->first_link_orientation_in_strand(), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference additional_link_refs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->additional_link_refs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->additional_link_refs(static_cast<int>(i)),
      output);
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricLocation last_link_end = 6;
  if (this->has_last_link_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::last_link_end(this), output);
  }

  // repeated uint32 attribution_group_indexes = 7 [packed = true];
  if (this->attribution_group_indexes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_attribution_group_indexes_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->attribution_group_indexes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->attribution_group_indexes(i), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution strand_attribution = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->strand_attribution_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->strand_attribution(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
}

::google::protobuf::uint8* StrandAttribution::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference strand_attribution_id = 1;
  if (this->has_strand_attribution_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::strand_attribution_id(this), target);
  }

  // uint32 first_link_id = 2;
  if (this->first_link_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->first_link_id(), target);
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricLocation first_link_start = 3;
  if (this->has_first_link_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::first_link_start(this), target);
  }

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection first_link_orientation_in_strand = 4;
  if (this->first_link_orientation_in_strand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->first_link_orientation_in_strand(), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference additional_link_refs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->additional_link_refs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->additional_link_refs(static_cast<int>(i)), target);
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricLocation last_link_end = 6;
  if (this->has_last_link_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::last_link_end(this), target);
  }

  // repeated uint32 attribution_group_indexes = 7 [packed = true];
  if (this->attribution_group_indexes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _attribution_group_indexes_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->attribution_group_indexes_, target);
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution strand_attribution = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->strand_attribution_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->strand_attribution(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  return target;
}

size_t StrandAttribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.here.pb.hdmap.external.v1.routing.StrandAttribution.OrientedTiledLinkReference additional_link_refs = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->additional_link_refs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->additional_link_refs(static_cast<int>(i)));
    }
  }

  // repeated uint32 attribution_group_indexes = 7 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->attribution_group_indexes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _attribution_group_indexes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution strand_attribution = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->strand_attribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->strand_attribution(static_cast<int>(i)));
    }
  }

  // .com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference strand_attribution_id = 1;
  if (this->has_strand_attribution_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *strand_attribution_id_);
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricLocation first_link_start = 3;
  if (this->has_first_link_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *first_link_start_);
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricLocation last_link_end = 6;
  if (this->has_last_link_end()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_link_end_);
  }

  // uint32 first_link_id = 2;
  if (this->first_link_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->first_link_id());
  }

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection first_link_orientation_in_strand = 4;
  if (this->first_link_orientation_in_strand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->first_link_orientation_in_strand());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StrandAttribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  const StrandAttribution* source =
      ::google::protobuf::DynamicCastToGenerated<StrandAttribution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
    MergeFrom(*source);
  }
}

void StrandAttribution::MergeFrom(const StrandAttribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  additional_link_refs_.MergeFrom(from.additional_link_refs_);
  attribution_group_indexes_.MergeFrom(from.attribution_group_indexes_);
  strand_attribution_.MergeFrom(from.strand_attribution_);
  if (from.has_strand_attribution_id()) {
    mutable_strand_attribution_id()->::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference::MergeFrom(from.strand_attribution_id());
  }
  if (from.has_first_link_start()) {
    mutable_first_link_start()->::com::here::pb::hdmap::external::v1::common::ParametricLocation::MergeFrom(from.first_link_start());
  }
  if (from.has_last_link_end()) {
    mutable_last_link_end()->::com::here::pb::hdmap::external::v1::common::ParametricLocation::MergeFrom(from.last_link_end());
  }
  if (from.first_link_id() != 0) {
    set_first_link_id(from.first_link_id());
  }
  if (from.first_link_orientation_in_strand() != 0) {
    set_first_link_orientation_in_strand(from.first_link_orientation_in_strand());
  }
}

void StrandAttribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StrandAttribution::CopyFrom(const StrandAttribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.StrandAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrandAttribution::IsInitialized() const {
  return true;
}

void StrandAttribution::Swap(StrandAttribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StrandAttribution::InternalSwap(StrandAttribution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&additional_link_refs_)->InternalSwap(CastToBase(&other->additional_link_refs_));
  attribution_group_indexes_.InternalSwap(&other->attribution_group_indexes_);
  CastToBase(&strand_attribution_)->InternalSwap(CastToBase(&other->strand_attribution_));
  swap(strand_attribution_id_, other->strand_attribution_id_);
  swap(first_link_start_, other->first_link_start_);
  swap(last_link_end_, other->last_link_end_);
  swap(first_link_id_, other->first_link_id_);
  swap(first_link_orientation_in_strand_, other->first_link_orientation_in_strand_);
}

::google::protobuf::Metadata StrandAttribution::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RoutingAttributionGroup::InitAsDefaultInstance() {
}
class RoutingAttributionGroup::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoutingAttributionGroup::RoutingAttributionGroup()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
}
RoutingAttributionGroup::RoutingAttributionGroup(const RoutingAttributionGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
}

void RoutingAttributionGroup::SharedCtor() {
}

RoutingAttributionGroup::~RoutingAttributionGroup() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  SharedDtor();
}

void RoutingAttributionGroup::SharedDtor() {
}

void RoutingAttributionGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RoutingAttributionGroup& RoutingAttributionGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RoutingAttributionGroup_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void RoutingAttributionGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RoutingAttributionGroup::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RoutingAttributionGroup*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RoutingAttributionGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RoutingAttributionGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
}

::google::protobuf::uint8* RoutingAttributionGroup::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  return target;
}

size_t RoutingAttributionGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoutingAttributionGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const RoutingAttributionGroup* source =
      ::google::protobuf::DynamicCastToGenerated<RoutingAttributionGroup>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
    MergeFrom(*source);
  }
}

void RoutingAttributionGroup::MergeFrom(const RoutingAttributionGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RoutingAttributionGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoutingAttributionGroup::CopyFrom(const RoutingAttributionGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.RoutingAttributionGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoutingAttributionGroup::IsInitialized() const {
  return true;
}

void RoutingAttributionGroup::Swap(RoutingAttributionGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoutingAttributionGroup::InternalSwap(RoutingAttributionGroup* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoutingAttributionGroup::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RoutingLinkParametricAttribution::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.accessible_by_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::RoadUsers*>(
      ::com::here::pb::hdmap::shared::v1::core::RoadUsers::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.functional_class_ = 0;
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.is_multiply_digitized_ = false;
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.is_bridge_ = false;
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.is_tunnel_ = false;
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.is_controlled_access_ = false;
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.is_limited_access_ = false;
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.is_urban_ = false;
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.is_priority_road_ = false;
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.is_ramp_ = false;
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.built_up_area_road_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::BuiltUpAreaRoad*>(
      ::com::here::pb::hdmap::shared::v1::core::BuiltUpAreaRoad::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.complex_intersection_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::ComplexIntersection*>(
      ::com::here::pb::hdmap::shared::v1::core::ComplexIntersection::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.rds_tmc_code_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::TrafficMessageChannelCode*>(
      ::com::here::pb::hdmap::shared::v1::core::TrafficMessageChannelCode::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.conditional_usage_fee_required_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::ConditionalUsageFeeRequired*>(
      ::com::here::pb::hdmap::shared::v1::core::ConditionalUsageFeeRequired::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.conditional_overtaking_restriction_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::ConditionalOvertakingRestriction*>(
      ::com::here::pb::hdmap::shared::v1::core::ConditionalOvertakingRestriction::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.conditional_access_restriction_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::ConditionalAccessRestriction*>(
      ::com::here::pb::hdmap::shared::v1::core::ConditionalAccessRestriction::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.conditional_access_permission_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::ConditionalAccessPermission*>(
      ::com::here::pb::hdmap::shared::v1::core::ConditionalAccessPermission::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.road_divider_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::RoadDivider*>(
      ::com::here::pb::hdmap::shared::v1::core::RoadDivider::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.administrative_area_relationship_ = const_cast< ::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship*>(
      ::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.road_identifiers_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::RoadIdentifiers*>(
      ::com::here::pb::hdmap::shared::v1::core::RoadIdentifiers::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkParametricAttribution_default_instance_.is_within_interchange_ = false;
}
class RoutingLinkParametricAttribution::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::shared::v1::core::RoadUsers& accessible_by(const RoutingLinkParametricAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::BuiltUpAreaRoad& built_up_area_road(const RoutingLinkParametricAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::ComplexIntersection& complex_intersection(const RoutingLinkParametricAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::TrafficMessageChannelCode& rds_tmc_code(const RoutingLinkParametricAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::ConditionalUsageFeeRequired& conditional_usage_fee_required(const RoutingLinkParametricAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::ConditionalOvertakingRestriction& conditional_overtaking_restriction(const RoutingLinkParametricAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::ConditionalAccessRestriction& conditional_access_restriction(const RoutingLinkParametricAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::ConditionalAccessPermission& conditional_access_permission(const RoutingLinkParametricAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::RoadDivider& road_divider(const RoutingLinkParametricAttribution* msg);
  static const ::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship& administrative_area_relationship(const RoutingLinkParametricAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::RoadIdentifiers& road_identifiers(const RoutingLinkParametricAttribution* msg);
};

const ::com::here::pb::hdmap::shared::v1::core::RoadUsers&
RoutingLinkParametricAttribution::HasBitSetters::accessible_by(const RoutingLinkParametricAttribution* msg) {
  return *msg->attribute_.accessible_by_;
}
const ::com::here::pb::hdmap::shared::v1::core::BuiltUpAreaRoad&
RoutingLinkParametricAttribution::HasBitSetters::built_up_area_road(const RoutingLinkParametricAttribution* msg) {
  return *msg->attribute_.built_up_area_road_;
}
const ::com::here::pb::hdmap::shared::v1::core::ComplexIntersection&
RoutingLinkParametricAttribution::HasBitSetters::complex_intersection(const RoutingLinkParametricAttribution* msg) {
  return *msg->attribute_.complex_intersection_;
}
const ::com::here::pb::hdmap::shared::v1::core::TrafficMessageChannelCode&
RoutingLinkParametricAttribution::HasBitSetters::rds_tmc_code(const RoutingLinkParametricAttribution* msg) {
  return *msg->attribute_.rds_tmc_code_;
}
const ::com::here::pb::hdmap::shared::v1::core::ConditionalUsageFeeRequired&
RoutingLinkParametricAttribution::HasBitSetters::conditional_usage_fee_required(const RoutingLinkParametricAttribution* msg) {
  return *msg->attribute_.conditional_usage_fee_required_;
}
const ::com::here::pb::hdmap::shared::v1::core::ConditionalOvertakingRestriction&
RoutingLinkParametricAttribution::HasBitSetters::conditional_overtaking_restriction(const RoutingLinkParametricAttribution* msg) {
  return *msg->attribute_.conditional_overtaking_restriction_;
}
const ::com::here::pb::hdmap::shared::v1::core::ConditionalAccessRestriction&
RoutingLinkParametricAttribution::HasBitSetters::conditional_access_restriction(const RoutingLinkParametricAttribution* msg) {
  return *msg->attribute_.conditional_access_restriction_;
}
const ::com::here::pb::hdmap::shared::v1::core::ConditionalAccessPermission&
RoutingLinkParametricAttribution::HasBitSetters::conditional_access_permission(const RoutingLinkParametricAttribution* msg) {
  return *msg->attribute_.conditional_access_permission_;
}
const ::com::here::pb::hdmap::shared::v1::core::RoadDivider&
RoutingLinkParametricAttribution::HasBitSetters::road_divider(const RoutingLinkParametricAttribution* msg) {
  return *msg->attribute_.road_divider_;
}
const ::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship&
RoutingLinkParametricAttribution::HasBitSetters::administrative_area_relationship(const RoutingLinkParametricAttribution* msg) {
  return *msg->attribute_.administrative_area_relationship_;
}
const ::com::here::pb::hdmap::shared::v1::core::RoadIdentifiers&
RoutingLinkParametricAttribution::HasBitSetters::road_identifiers(const RoutingLinkParametricAttribution* msg) {
  return *msg->attribute_.road_identifiers_;
}
void RoutingLinkParametricAttribution::set_allocated_accessible_by(::com::here::pb::hdmap::shared::v1::core::RoadUsers* accessible_by) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (accessible_by) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      accessible_by = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, accessible_by, submessage_arena);
    }
    set_has_accessible_by();
    attribute_.accessible_by_ = accessible_by;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution.accessible_by)
}
void RoutingLinkParametricAttribution::clear_accessible_by() {
  if (has_accessible_by()) {
    delete attribute_.accessible_by_;
    clear_has_attribute();
  }
}
void RoutingLinkParametricAttribution::set_allocated_built_up_area_road(::com::here::pb::hdmap::shared::v1::core::BuiltUpAreaRoad* built_up_area_road) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (built_up_area_road) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      built_up_area_road = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, built_up_area_road, submessage_arena);
    }
    set_has_built_up_area_road();
    attribute_.built_up_area_road_ = built_up_area_road;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution.built_up_area_road)
}
void RoutingLinkParametricAttribution::clear_built_up_area_road() {
  if (has_built_up_area_road()) {
    delete attribute_.built_up_area_road_;
    clear_has_attribute();
  }
}
void RoutingLinkParametricAttribution::set_allocated_complex_intersection(::com::here::pb::hdmap::shared::v1::core::ComplexIntersection* complex_intersection) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (complex_intersection) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      complex_intersection = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, complex_intersection, submessage_arena);
    }
    set_has_complex_intersection();
    attribute_.complex_intersection_ = complex_intersection;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution.complex_intersection)
}
void RoutingLinkParametricAttribution::clear_complex_intersection() {
  if (has_complex_intersection()) {
    delete attribute_.complex_intersection_;
    clear_has_attribute();
  }
}
void RoutingLinkParametricAttribution::set_allocated_rds_tmc_code(::com::here::pb::hdmap::shared::v1::core::TrafficMessageChannelCode* rds_tmc_code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (rds_tmc_code) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rds_tmc_code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rds_tmc_code, submessage_arena);
    }
    set_has_rds_tmc_code();
    attribute_.rds_tmc_code_ = rds_tmc_code;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution.rds_tmc_code)
}
void RoutingLinkParametricAttribution::clear_rds_tmc_code() {
  if (has_rds_tmc_code()) {
    delete attribute_.rds_tmc_code_;
    clear_has_attribute();
  }
}
void RoutingLinkParametricAttribution::set_allocated_conditional_usage_fee_required(::com::here::pb::hdmap::shared::v1::core::ConditionalUsageFeeRequired* conditional_usage_fee_required) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (conditional_usage_fee_required) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      conditional_usage_fee_required = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conditional_usage_fee_required, submessage_arena);
    }
    set_has_conditional_usage_fee_required();
    attribute_.conditional_usage_fee_required_ = conditional_usage_fee_required;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution.conditional_usage_fee_required)
}
void RoutingLinkParametricAttribution::clear_conditional_usage_fee_required() {
  if (has_conditional_usage_fee_required()) {
    delete attribute_.conditional_usage_fee_required_;
    clear_has_attribute();
  }
}
void RoutingLinkParametricAttribution::set_allocated_conditional_overtaking_restriction(::com::here::pb::hdmap::shared::v1::core::ConditionalOvertakingRestriction* conditional_overtaking_restriction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (conditional_overtaking_restriction) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      conditional_overtaking_restriction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conditional_overtaking_restriction, submessage_arena);
    }
    set_has_conditional_overtaking_restriction();
    attribute_.conditional_overtaking_restriction_ = conditional_overtaking_restriction;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution.conditional_overtaking_restriction)
}
void RoutingLinkParametricAttribution::clear_conditional_overtaking_restriction() {
  if (has_conditional_overtaking_restriction()) {
    delete attribute_.conditional_overtaking_restriction_;
    clear_has_attribute();
  }
}
void RoutingLinkParametricAttribution::set_allocated_conditional_access_restriction(::com::here::pb::hdmap::shared::v1::core::ConditionalAccessRestriction* conditional_access_restriction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (conditional_access_restriction) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      conditional_access_restriction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conditional_access_restriction, submessage_arena);
    }
    set_has_conditional_access_restriction();
    attribute_.conditional_access_restriction_ = conditional_access_restriction;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution.conditional_access_restriction)
}
void RoutingLinkParametricAttribution::clear_conditional_access_restriction() {
  if (has_conditional_access_restriction()) {
    delete attribute_.conditional_access_restriction_;
    clear_has_attribute();
  }
}
void RoutingLinkParametricAttribution::set_allocated_conditional_access_permission(::com::here::pb::hdmap::shared::v1::core::ConditionalAccessPermission* conditional_access_permission) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (conditional_access_permission) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      conditional_access_permission = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conditional_access_permission, submessage_arena);
    }
    set_has_conditional_access_permission();
    attribute_.conditional_access_permission_ = conditional_access_permission;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution.conditional_access_permission)
}
void RoutingLinkParametricAttribution::clear_conditional_access_permission() {
  if (has_conditional_access_permission()) {
    delete attribute_.conditional_access_permission_;
    clear_has_attribute();
  }
}
void RoutingLinkParametricAttribution::set_allocated_road_divider(::com::here::pb::hdmap::shared::v1::core::RoadDivider* road_divider) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (road_divider) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      road_divider = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, road_divider, submessage_arena);
    }
    set_has_road_divider();
    attribute_.road_divider_ = road_divider;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution.road_divider)
}
void RoutingLinkParametricAttribution::clear_road_divider() {
  if (has_road_divider()) {
    delete attribute_.road_divider_;
    clear_has_attribute();
  }
}
void RoutingLinkParametricAttribution::set_allocated_administrative_area_relationship(::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship* administrative_area_relationship) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (administrative_area_relationship) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      administrative_area_relationship = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, administrative_area_relationship, submessage_arena);
    }
    set_has_administrative_area_relationship();
    attribute_.administrative_area_relationship_ = administrative_area_relationship;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution.administrative_area_relationship)
}
void RoutingLinkParametricAttribution::set_allocated_road_identifiers(::com::here::pb::hdmap::shared::v1::core::RoadIdentifiers* road_identifiers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (road_identifiers) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      road_identifiers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, road_identifiers, submessage_arena);
    }
    set_has_road_identifiers();
    attribute_.road_identifiers_ = road_identifiers;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution.road_identifiers)
}
void RoutingLinkParametricAttribution::clear_road_identifiers() {
  if (has_road_identifiers()) {
    delete attribute_.road_identifiers_;
    clear_has_attribute();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoutingLinkParametricAttribution::kAccessibleByFieldNumber;
const int RoutingLinkParametricAttribution::kFunctionalClassFieldNumber;
const int RoutingLinkParametricAttribution::kIsMultiplyDigitizedFieldNumber;
const int RoutingLinkParametricAttribution::kIsBridgeFieldNumber;
const int RoutingLinkParametricAttribution::kIsTunnelFieldNumber;
const int RoutingLinkParametricAttribution::kIsControlledAccessFieldNumber;
const int RoutingLinkParametricAttribution::kIsLimitedAccessFieldNumber;
const int RoutingLinkParametricAttribution::kIsUrbanFieldNumber;
const int RoutingLinkParametricAttribution::kIsPriorityRoadFieldNumber;
const int RoutingLinkParametricAttribution::kIsRampFieldNumber;
const int RoutingLinkParametricAttribution::kBuiltUpAreaRoadFieldNumber;
const int RoutingLinkParametricAttribution::kComplexIntersectionFieldNumber;
const int RoutingLinkParametricAttribution::kRdsTmcCodeFieldNumber;
const int RoutingLinkParametricAttribution::kConditionalUsageFeeRequiredFieldNumber;
const int RoutingLinkParametricAttribution::kConditionalOvertakingRestrictionFieldNumber;
const int RoutingLinkParametricAttribution::kConditionalAccessRestrictionFieldNumber;
const int RoutingLinkParametricAttribution::kConditionalAccessPermissionFieldNumber;
const int RoutingLinkParametricAttribution::kRoadDividerFieldNumber;
const int RoutingLinkParametricAttribution::kAdministrativeAreaRelationshipFieldNumber;
const int RoutingLinkParametricAttribution::kRoadIdentifiersFieldNumber;
const int RoutingLinkParametricAttribution::kIsWithinInterchangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoutingLinkParametricAttribution::RoutingLinkParametricAttribution()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
}
RoutingLinkParametricAttribution::RoutingLinkParametricAttribution(const RoutingLinkParametricAttribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_attribute();
  switch (from.attribute_case()) {
    case kAccessibleBy: {
      mutable_accessible_by()->::com::here::pb::hdmap::shared::v1::core::RoadUsers::MergeFrom(from.accessible_by());
      break;
    }
    case kFunctionalClass: {
      set_functional_class(from.functional_class());
      break;
    }
    case kIsMultiplyDigitized: {
      set_is_multiply_digitized(from.is_multiply_digitized());
      break;
    }
    case kIsBridge: {
      set_is_bridge(from.is_bridge());
      break;
    }
    case kIsTunnel: {
      set_is_tunnel(from.is_tunnel());
      break;
    }
    case kIsControlledAccess: {
      set_is_controlled_access(from.is_controlled_access());
      break;
    }
    case kIsLimitedAccess: {
      set_is_limited_access(from.is_limited_access());
      break;
    }
    case kIsUrban: {
      set_is_urban(from.is_urban());
      break;
    }
    case kIsPriorityRoad: {
      set_is_priority_road(from.is_priority_road());
      break;
    }
    case kIsRamp: {
      set_is_ramp(from.is_ramp());
      break;
    }
    case kBuiltUpAreaRoad: {
      mutable_built_up_area_road()->::com::here::pb::hdmap::shared::v1::core::BuiltUpAreaRoad::MergeFrom(from.built_up_area_road());
      break;
    }
    case kComplexIntersection: {
      mutable_complex_intersection()->::com::here::pb::hdmap::shared::v1::core::ComplexIntersection::MergeFrom(from.complex_intersection());
      break;
    }
    case kRdsTmcCode: {
      mutable_rds_tmc_code()->::com::here::pb::hdmap::shared::v1::core::TrafficMessageChannelCode::MergeFrom(from.rds_tmc_code());
      break;
    }
    case kConditionalUsageFeeRequired: {
      mutable_conditional_usage_fee_required()->::com::here::pb::hdmap::shared::v1::core::ConditionalUsageFeeRequired::MergeFrom(from.conditional_usage_fee_required());
      break;
    }
    case kConditionalOvertakingRestriction: {
      mutable_conditional_overtaking_restriction()->::com::here::pb::hdmap::shared::v1::core::ConditionalOvertakingRestriction::MergeFrom(from.conditional_overtaking_restriction());
      break;
    }
    case kConditionalAccessRestriction: {
      mutable_conditional_access_restriction()->::com::here::pb::hdmap::shared::v1::core::ConditionalAccessRestriction::MergeFrom(from.conditional_access_restriction());
      break;
    }
    case kConditionalAccessPermission: {
      mutable_conditional_access_permission()->::com::here::pb::hdmap::shared::v1::core::ConditionalAccessPermission::MergeFrom(from.conditional_access_permission());
      break;
    }
    case kRoadDivider: {
      mutable_road_divider()->::com::here::pb::hdmap::shared::v1::core::RoadDivider::MergeFrom(from.road_divider());
      break;
    }
    case kAdministrativeAreaRelationship: {
      mutable_administrative_area_relationship()->::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship::MergeFrom(from.administrative_area_relationship());
      break;
    }
    case kRoadIdentifiers: {
      mutable_road_identifiers()->::com::here::pb::hdmap::shared::v1::core::RoadIdentifiers::MergeFrom(from.road_identifiers());
      break;
    }
    case kIsWithinInterchange: {
      set_is_within_interchange(from.is_within_interchange());
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
}

void RoutingLinkParametricAttribution::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RoutingLinkParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  clear_has_attribute();
}

RoutingLinkParametricAttribution::~RoutingLinkParametricAttribution() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  SharedDtor();
}

void RoutingLinkParametricAttribution::SharedDtor() {
  if (has_attribute()) {
    clear_attribute();
  }
}

void RoutingLinkParametricAttribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RoutingLinkParametricAttribution& RoutingLinkParametricAttribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RoutingLinkParametricAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void RoutingLinkParametricAttribution::clear_attribute() {
// @@protoc_insertion_point(one_of_clear_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  switch (attribute_case()) {
    case kAccessibleBy: {
      delete attribute_.accessible_by_;
      break;
    }
    case kFunctionalClass: {
      // No need to clear
      break;
    }
    case kIsMultiplyDigitized: {
      // No need to clear
      break;
    }
    case kIsBridge: {
      // No need to clear
      break;
    }
    case kIsTunnel: {
      // No need to clear
      break;
    }
    case kIsControlledAccess: {
      // No need to clear
      break;
    }
    case kIsLimitedAccess: {
      // No need to clear
      break;
    }
    case kIsUrban: {
      // No need to clear
      break;
    }
    case kIsPriorityRoad: {
      // No need to clear
      break;
    }
    case kIsRamp: {
      // No need to clear
      break;
    }
    case kBuiltUpAreaRoad: {
      delete attribute_.built_up_area_road_;
      break;
    }
    case kComplexIntersection: {
      delete attribute_.complex_intersection_;
      break;
    }
    case kRdsTmcCode: {
      delete attribute_.rds_tmc_code_;
      break;
    }
    case kConditionalUsageFeeRequired: {
      delete attribute_.conditional_usage_fee_required_;
      break;
    }
    case kConditionalOvertakingRestriction: {
      delete attribute_.conditional_overtaking_restriction_;
      break;
    }
    case kConditionalAccessRestriction: {
      delete attribute_.conditional_access_restriction_;
      break;
    }
    case kConditionalAccessPermission: {
      delete attribute_.conditional_access_permission_;
      break;
    }
    case kRoadDivider: {
      delete attribute_.road_divider_;
      break;
    }
    case kAdministrativeAreaRelationship: {
      delete attribute_.administrative_area_relationship_;
      break;
    }
    case kRoadIdentifiers: {
      delete attribute_.road_identifiers_;
      break;
    }
    case kIsWithinInterchange: {
      // No need to clear
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ATTRIBUTE_NOT_SET;
}


void RoutingLinkParametricAttribution::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_attribute();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RoutingLinkParametricAttribution::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RoutingLinkParametricAttribution*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.shared.v1.core.RoadUsers accessible_by = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::RoadUsers::_InternalParse;
        object = msg->mutable_accessible_by();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.FunctionalClass functional_class = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_functional_class(static_cast<::com::here::pb::hdmap::shared::v1::core::FunctionalClass>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_multiply_digitized = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_is_multiply_digitized(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_bridge = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_is_bridge(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_tunnel = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_is_tunnel(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_controlled_access = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_is_controlled_access(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_limited_access = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_is_limited_access(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_urban = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_is_urban(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_priority_road = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_is_priority_road(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_ramp = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_is_ramp(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.BuiltUpAreaRoad built_up_area_road = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::BuiltUpAreaRoad::_InternalParse;
        object = msg->mutable_built_up_area_road();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.ComplexIntersection complex_intersection = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::ComplexIntersection::_InternalParse;
        object = msg->mutable_complex_intersection();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.TrafficMessageChannelCode rds_tmc_code = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::TrafficMessageChannelCode::_InternalParse;
        object = msg->mutable_rds_tmc_code();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.ConditionalUsageFeeRequired conditional_usage_fee_required = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::ConditionalUsageFeeRequired::_InternalParse;
        object = msg->mutable_conditional_usage_fee_required();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.ConditionalOvertakingRestriction conditional_overtaking_restriction = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::ConditionalOvertakingRestriction::_InternalParse;
        object = msg->mutable_conditional_overtaking_restriction();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.ConditionalAccessRestriction conditional_access_restriction = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::ConditionalAccessRestriction::_InternalParse;
        object = msg->mutable_conditional_access_restriction();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.ConditionalAccessPermission conditional_access_permission = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::ConditionalAccessPermission::_InternalParse;
        object = msg->mutable_conditional_access_permission();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.RoadDivider road_divider = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::RoadDivider::_InternalParse;
        object = msg->mutable_road_divider();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship administrative_area_relationship = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship::_InternalParse;
        object = msg->mutable_administrative_area_relationship();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.RoadIdentifiers road_identifiers = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::RoadIdentifiers::_InternalParse;
        object = msg->mutable_road_identifiers();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool is_within_interchange = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 176) goto handle_unusual;
        msg->set_is_within_interchange(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RoutingLinkParametricAttribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.shared.v1.core.RoadUsers accessible_by = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_accessible_by()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.FunctionalClass functional_class = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_functional_class(static_cast< ::com::here::pb::hdmap::shared::v1::core::FunctionalClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_multiply_digitized = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          clear_attribute();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attribute_.is_multiply_digitized_)));
          set_has_is_multiply_digitized();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_bridge = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          clear_attribute();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attribute_.is_bridge_)));
          set_has_is_bridge();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_tunnel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          clear_attribute();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attribute_.is_tunnel_)));
          set_has_is_tunnel();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_controlled_access = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          clear_attribute();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attribute_.is_controlled_access_)));
          set_has_is_controlled_access();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_limited_access = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          clear_attribute();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attribute_.is_limited_access_)));
          set_has_is_limited_access();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_urban = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          clear_attribute();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attribute_.is_urban_)));
          set_has_is_urban();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_priority_road = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          clear_attribute();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attribute_.is_priority_road_)));
          set_has_is_priority_road();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_ramp = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {
          clear_attribute();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attribute_.is_ramp_)));
          set_has_is_ramp();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.BuiltUpAreaRoad built_up_area_road = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_built_up_area_road()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.ComplexIntersection complex_intersection = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_complex_intersection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.TrafficMessageChannelCode rds_tmc_code = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rds_tmc_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.ConditionalUsageFeeRequired conditional_usage_fee_required = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conditional_usage_fee_required()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.ConditionalOvertakingRestriction conditional_overtaking_restriction = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conditional_overtaking_restriction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.ConditionalAccessRestriction conditional_access_restriction = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conditional_access_restriction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.ConditionalAccessPermission conditional_access_permission = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conditional_access_permission()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.RoadDivider road_divider = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (154 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_road_divider()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship administrative_area_relationship = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_administrative_area_relationship()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.RoadIdentifiers road_identifiers = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (170 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_road_identifiers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_within_interchange = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (176 & 0xFF)) {
          clear_attribute();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attribute_.is_within_interchange_)));
          set_has_is_within_interchange();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RoutingLinkParametricAttribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.shared.v1.core.RoadUsers accessible_by = 2;
  if (has_accessible_by()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::accessible_by(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.FunctionalClass functional_class = 3;
  if (has_functional_class()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->functional_class(), output);
  }

  // bool is_multiply_digitized = 4;
  if (has_is_multiply_digitized()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_multiply_digitized(), output);
  }

  // bool is_bridge = 5;
  if (has_is_bridge()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_bridge(), output);
  }

  // bool is_tunnel = 6;
  if (has_is_tunnel()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_tunnel(), output);
  }

  // bool is_controlled_access = 7;
  if (has_is_controlled_access()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_controlled_access(), output);
  }

  // bool is_limited_access = 8;
  if (has_is_limited_access()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_limited_access(), output);
  }

  // bool is_urban = 9;
  if (has_is_urban()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_urban(), output);
  }

  // bool is_priority_road = 10;
  if (has_is_priority_road()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_priority_road(), output);
  }

  // bool is_ramp = 11;
  if (has_is_ramp()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_ramp(), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.BuiltUpAreaRoad built_up_area_road = 12;
  if (has_built_up_area_road()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::built_up_area_road(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.ComplexIntersection complex_intersection = 13;
  if (has_complex_intersection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, HasBitSetters::complex_intersection(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.TrafficMessageChannelCode rds_tmc_code = 14;
  if (has_rds_tmc_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, HasBitSetters::rds_tmc_code(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalUsageFeeRequired conditional_usage_fee_required = 15;
  if (has_conditional_usage_fee_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, HasBitSetters::conditional_usage_fee_required(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalOvertakingRestriction conditional_overtaking_restriction = 16;
  if (has_conditional_overtaking_restriction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, HasBitSetters::conditional_overtaking_restriction(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalAccessRestriction conditional_access_restriction = 17;
  if (has_conditional_access_restriction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, HasBitSetters::conditional_access_restriction(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalAccessPermission conditional_access_permission = 18;
  if (has_conditional_access_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, HasBitSetters::conditional_access_permission(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.RoadDivider road_divider = 19;
  if (has_road_divider()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, HasBitSetters::road_divider(this), output);
  }

  // .com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship administrative_area_relationship = 20;
  if (has_administrative_area_relationship()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, HasBitSetters::administrative_area_relationship(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.RoadIdentifiers road_identifiers = 21;
  if (has_road_identifiers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, HasBitSetters::road_identifiers(this), output);
  }

  // bool is_within_interchange = 22;
  if (has_is_within_interchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->is_within_interchange(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
}

::google::protobuf::uint8* RoutingLinkParametricAttribution::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.shared.v1.core.RoadUsers accessible_by = 2;
  if (has_accessible_by()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::accessible_by(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.FunctionalClass functional_class = 3;
  if (has_functional_class()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->functional_class(), target);
  }

  // bool is_multiply_digitized = 4;
  if (has_is_multiply_digitized()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_multiply_digitized(), target);
  }

  // bool is_bridge = 5;
  if (has_is_bridge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_bridge(), target);
  }

  // bool is_tunnel = 6;
  if (has_is_tunnel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_tunnel(), target);
  }

  // bool is_controlled_access = 7;
  if (has_is_controlled_access()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_controlled_access(), target);
  }

  // bool is_limited_access = 8;
  if (has_is_limited_access()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_limited_access(), target);
  }

  // bool is_urban = 9;
  if (has_is_urban()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_urban(), target);
  }

  // bool is_priority_road = 10;
  if (has_is_priority_road()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_priority_road(), target);
  }

  // bool is_ramp = 11;
  if (has_is_ramp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_ramp(), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.BuiltUpAreaRoad built_up_area_road = 12;
  if (has_built_up_area_road()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::built_up_area_road(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.ComplexIntersection complex_intersection = 13;
  if (has_complex_intersection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, HasBitSetters::complex_intersection(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.TrafficMessageChannelCode rds_tmc_code = 14;
  if (has_rds_tmc_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, HasBitSetters::rds_tmc_code(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalUsageFeeRequired conditional_usage_fee_required = 15;
  if (has_conditional_usage_fee_required()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, HasBitSetters::conditional_usage_fee_required(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalOvertakingRestriction conditional_overtaking_restriction = 16;
  if (has_conditional_overtaking_restriction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, HasBitSetters::conditional_overtaking_restriction(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalAccessRestriction conditional_access_restriction = 17;
  if (has_conditional_access_restriction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, HasBitSetters::conditional_access_restriction(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalAccessPermission conditional_access_permission = 18;
  if (has_conditional_access_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, HasBitSetters::conditional_access_permission(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.RoadDivider road_divider = 19;
  if (has_road_divider()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, HasBitSetters::road_divider(this), target);
  }

  // .com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship administrative_area_relationship = 20;
  if (has_administrative_area_relationship()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, HasBitSetters::administrative_area_relationship(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.RoadIdentifiers road_identifiers = 21;
  if (has_road_identifiers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, HasBitSetters::road_identifiers(this), target);
  }

  // bool is_within_interchange = 22;
  if (has_is_within_interchange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->is_within_interchange(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  return target;
}

size_t RoutingLinkParametricAttribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (attribute_case()) {
    // .com.here.pb.hdmap.shared.v1.core.RoadUsers accessible_by = 2;
    case kAccessibleBy: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.accessible_by_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.FunctionalClass functional_class = 3;
    case kFunctionalClass: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->functional_class());
      break;
    }
    // bool is_multiply_digitized = 4;
    case kIsMultiplyDigitized: {
      total_size += 1 + 1;
      break;
    }
    // bool is_bridge = 5;
    case kIsBridge: {
      total_size += 1 + 1;
      break;
    }
    // bool is_tunnel = 6;
    case kIsTunnel: {
      total_size += 1 + 1;
      break;
    }
    // bool is_controlled_access = 7;
    case kIsControlledAccess: {
      total_size += 1 + 1;
      break;
    }
    // bool is_limited_access = 8;
    case kIsLimitedAccess: {
      total_size += 1 + 1;
      break;
    }
    // bool is_urban = 9;
    case kIsUrban: {
      total_size += 1 + 1;
      break;
    }
    // bool is_priority_road = 10;
    case kIsPriorityRoad: {
      total_size += 1 + 1;
      break;
    }
    // bool is_ramp = 11;
    case kIsRamp: {
      total_size += 1 + 1;
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.BuiltUpAreaRoad built_up_area_road = 12;
    case kBuiltUpAreaRoad: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.built_up_area_road_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.ComplexIntersection complex_intersection = 13;
    case kComplexIntersection: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.complex_intersection_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.TrafficMessageChannelCode rds_tmc_code = 14;
    case kRdsTmcCode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.rds_tmc_code_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.ConditionalUsageFeeRequired conditional_usage_fee_required = 15;
    case kConditionalUsageFeeRequired: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.conditional_usage_fee_required_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.ConditionalOvertakingRestriction conditional_overtaking_restriction = 16;
    case kConditionalOvertakingRestriction: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.conditional_overtaking_restriction_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.ConditionalAccessRestriction conditional_access_restriction = 17;
    case kConditionalAccessRestriction: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.conditional_access_restriction_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.ConditionalAccessPermission conditional_access_permission = 18;
    case kConditionalAccessPermission: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.conditional_access_permission_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.RoadDivider road_divider = 19;
    case kRoadDivider: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.road_divider_);
      break;
    }
    // .com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship administrative_area_relationship = 20;
    case kAdministrativeAreaRelationship: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.administrative_area_relationship_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.RoadIdentifiers road_identifiers = 21;
    case kRoadIdentifiers: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.road_identifiers_);
      break;
    }
    // bool is_within_interchange = 22;
    case kIsWithinInterchange: {
      total_size += 2 + 1;
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoutingLinkParametricAttribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  const RoutingLinkParametricAttribution* source =
      ::google::protobuf::DynamicCastToGenerated<RoutingLinkParametricAttribution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
    MergeFrom(*source);
  }
}

void RoutingLinkParametricAttribution::MergeFrom(const RoutingLinkParametricAttribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.attribute_case()) {
    case kAccessibleBy: {
      mutable_accessible_by()->::com::here::pb::hdmap::shared::v1::core::RoadUsers::MergeFrom(from.accessible_by());
      break;
    }
    case kFunctionalClass: {
      set_functional_class(from.functional_class());
      break;
    }
    case kIsMultiplyDigitized: {
      set_is_multiply_digitized(from.is_multiply_digitized());
      break;
    }
    case kIsBridge: {
      set_is_bridge(from.is_bridge());
      break;
    }
    case kIsTunnel: {
      set_is_tunnel(from.is_tunnel());
      break;
    }
    case kIsControlledAccess: {
      set_is_controlled_access(from.is_controlled_access());
      break;
    }
    case kIsLimitedAccess: {
      set_is_limited_access(from.is_limited_access());
      break;
    }
    case kIsUrban: {
      set_is_urban(from.is_urban());
      break;
    }
    case kIsPriorityRoad: {
      set_is_priority_road(from.is_priority_road());
      break;
    }
    case kIsRamp: {
      set_is_ramp(from.is_ramp());
      break;
    }
    case kBuiltUpAreaRoad: {
      mutable_built_up_area_road()->::com::here::pb::hdmap::shared::v1::core::BuiltUpAreaRoad::MergeFrom(from.built_up_area_road());
      break;
    }
    case kComplexIntersection: {
      mutable_complex_intersection()->::com::here::pb::hdmap::shared::v1::core::ComplexIntersection::MergeFrom(from.complex_intersection());
      break;
    }
    case kRdsTmcCode: {
      mutable_rds_tmc_code()->::com::here::pb::hdmap::shared::v1::core::TrafficMessageChannelCode::MergeFrom(from.rds_tmc_code());
      break;
    }
    case kConditionalUsageFeeRequired: {
      mutable_conditional_usage_fee_required()->::com::here::pb::hdmap::shared::v1::core::ConditionalUsageFeeRequired::MergeFrom(from.conditional_usage_fee_required());
      break;
    }
    case kConditionalOvertakingRestriction: {
      mutable_conditional_overtaking_restriction()->::com::here::pb::hdmap::shared::v1::core::ConditionalOvertakingRestriction::MergeFrom(from.conditional_overtaking_restriction());
      break;
    }
    case kConditionalAccessRestriction: {
      mutable_conditional_access_restriction()->::com::here::pb::hdmap::shared::v1::core::ConditionalAccessRestriction::MergeFrom(from.conditional_access_restriction());
      break;
    }
    case kConditionalAccessPermission: {
      mutable_conditional_access_permission()->::com::here::pb::hdmap::shared::v1::core::ConditionalAccessPermission::MergeFrom(from.conditional_access_permission());
      break;
    }
    case kRoadDivider: {
      mutable_road_divider()->::com::here::pb::hdmap::shared::v1::core::RoadDivider::MergeFrom(from.road_divider());
      break;
    }
    case kAdministrativeAreaRelationship: {
      mutable_administrative_area_relationship()->::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship::MergeFrom(from.administrative_area_relationship());
      break;
    }
    case kRoadIdentifiers: {
      mutable_road_identifiers()->::com::here::pb::hdmap::shared::v1::core::RoadIdentifiers::MergeFrom(from.road_identifiers());
      break;
    }
    case kIsWithinInterchange: {
      set_is_within_interchange(from.is_within_interchange());
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
}

void RoutingLinkParametricAttribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoutingLinkParametricAttribution::CopyFrom(const RoutingLinkParametricAttribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkParametricAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoutingLinkParametricAttribution::IsInitialized() const {
  return true;
}

void RoutingLinkParametricAttribution::Swap(RoutingLinkParametricAttribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoutingLinkParametricAttribution::InternalSwap(RoutingLinkParametricAttribution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(attribute_, other->attribute_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata RoutingLinkParametricAttribution::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RoutingLinkPointAttribution::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkPointAttribution_default_instance_.conditional_restricted_driving_manoeuvre_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre*>(
      ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkPointAttribution_default_instance_.conditional_uturn_restricted_driving_manoeuvre_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre*>(
      ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkPointAttribution_default_instance_.conditional_uturn_permitted_driving_manoeuvre_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre*>(
      ::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingLinkPointAttribution_default_instance_.conditional_toll_structure_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::ConditionalTollStructure*>(
      ::com::here::pb::hdmap::shared::v1::core::ConditionalTollStructure::internal_default_instance());
}
class RoutingLinkPointAttribution::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre& conditional_restricted_driving_manoeuvre(const RoutingLinkPointAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre& conditional_uturn_restricted_driving_manoeuvre(const RoutingLinkPointAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre& conditional_uturn_permitted_driving_manoeuvre(const RoutingLinkPointAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::ConditionalTollStructure& conditional_toll_structure(const RoutingLinkPointAttribution* msg);
};

const ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre&
RoutingLinkPointAttribution::HasBitSetters::conditional_restricted_driving_manoeuvre(const RoutingLinkPointAttribution* msg) {
  return *msg->attribute_.conditional_restricted_driving_manoeuvre_;
}
const ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre&
RoutingLinkPointAttribution::HasBitSetters::conditional_uturn_restricted_driving_manoeuvre(const RoutingLinkPointAttribution* msg) {
  return *msg->attribute_.conditional_uturn_restricted_driving_manoeuvre_;
}
const ::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre&
RoutingLinkPointAttribution::HasBitSetters::conditional_uturn_permitted_driving_manoeuvre(const RoutingLinkPointAttribution* msg) {
  return *msg->attribute_.conditional_uturn_permitted_driving_manoeuvre_;
}
const ::com::here::pb::hdmap::shared::v1::core::ConditionalTollStructure&
RoutingLinkPointAttribution::HasBitSetters::conditional_toll_structure(const RoutingLinkPointAttribution* msg) {
  return *msg->attribute_.conditional_toll_structure_;
}
void RoutingLinkPointAttribution::set_allocated_conditional_restricted_driving_manoeuvre(::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre* conditional_restricted_driving_manoeuvre) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (conditional_restricted_driving_manoeuvre) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      conditional_restricted_driving_manoeuvre = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conditional_restricted_driving_manoeuvre, submessage_arena);
    }
    set_has_conditional_restricted_driving_manoeuvre();
    attribute_.conditional_restricted_driving_manoeuvre_ = conditional_restricted_driving_manoeuvre;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution.conditional_restricted_driving_manoeuvre)
}
void RoutingLinkPointAttribution::clear_conditional_restricted_driving_manoeuvre() {
  if (has_conditional_restricted_driving_manoeuvre()) {
    delete attribute_.conditional_restricted_driving_manoeuvre_;
    clear_has_attribute();
  }
}
void RoutingLinkPointAttribution::set_allocated_conditional_uturn_restricted_driving_manoeuvre(::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre* conditional_uturn_restricted_driving_manoeuvre) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (conditional_uturn_restricted_driving_manoeuvre) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      conditional_uturn_restricted_driving_manoeuvre = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conditional_uturn_restricted_driving_manoeuvre, submessage_arena);
    }
    set_has_conditional_uturn_restricted_driving_manoeuvre();
    attribute_.conditional_uturn_restricted_driving_manoeuvre_ = conditional_uturn_restricted_driving_manoeuvre;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution.conditional_uturn_restricted_driving_manoeuvre)
}
void RoutingLinkPointAttribution::clear_conditional_uturn_restricted_driving_manoeuvre() {
  if (has_conditional_uturn_restricted_driving_manoeuvre()) {
    delete attribute_.conditional_uturn_restricted_driving_manoeuvre_;
    clear_has_attribute();
  }
}
void RoutingLinkPointAttribution::set_allocated_conditional_uturn_permitted_driving_manoeuvre(::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre* conditional_uturn_permitted_driving_manoeuvre) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (conditional_uturn_permitted_driving_manoeuvre) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      conditional_uturn_permitted_driving_manoeuvre = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conditional_uturn_permitted_driving_manoeuvre, submessage_arena);
    }
    set_has_conditional_uturn_permitted_driving_manoeuvre();
    attribute_.conditional_uturn_permitted_driving_manoeuvre_ = conditional_uturn_permitted_driving_manoeuvre;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution.conditional_uturn_permitted_driving_manoeuvre)
}
void RoutingLinkPointAttribution::clear_conditional_uturn_permitted_driving_manoeuvre() {
  if (has_conditional_uturn_permitted_driving_manoeuvre()) {
    delete attribute_.conditional_uturn_permitted_driving_manoeuvre_;
    clear_has_attribute();
  }
}
void RoutingLinkPointAttribution::set_allocated_conditional_toll_structure(::com::here::pb::hdmap::shared::v1::core::ConditionalTollStructure* conditional_toll_structure) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (conditional_toll_structure) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      conditional_toll_structure = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conditional_toll_structure, submessage_arena);
    }
    set_has_conditional_toll_structure();
    attribute_.conditional_toll_structure_ = conditional_toll_structure;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution.conditional_toll_structure)
}
void RoutingLinkPointAttribution::clear_conditional_toll_structure() {
  if (has_conditional_toll_structure()) {
    delete attribute_.conditional_toll_structure_;
    clear_has_attribute();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoutingLinkPointAttribution::kConditionalRestrictedDrivingManoeuvreFieldNumber;
const int RoutingLinkPointAttribution::kConditionalUturnRestrictedDrivingManoeuvreFieldNumber;
const int RoutingLinkPointAttribution::kConditionalUturnPermittedDrivingManoeuvreFieldNumber;
const int RoutingLinkPointAttribution::kConditionalTollStructureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoutingLinkPointAttribution::RoutingLinkPointAttribution()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
}
RoutingLinkPointAttribution::RoutingLinkPointAttribution(const RoutingLinkPointAttribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_attribute();
  switch (from.attribute_case()) {
    case kConditionalRestrictedDrivingManoeuvre: {
      mutable_conditional_restricted_driving_manoeuvre()->::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::MergeFrom(from.conditional_restricted_driving_manoeuvre());
      break;
    }
    case kConditionalUturnRestrictedDrivingManoeuvre: {
      mutable_conditional_uturn_restricted_driving_manoeuvre()->::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::MergeFrom(from.conditional_uturn_restricted_driving_manoeuvre());
      break;
    }
    case kConditionalUturnPermittedDrivingManoeuvre: {
      mutable_conditional_uturn_permitted_driving_manoeuvre()->::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre::MergeFrom(from.conditional_uturn_permitted_driving_manoeuvre());
      break;
    }
    case kConditionalTollStructure: {
      mutable_conditional_toll_structure()->::com::here::pb::hdmap::shared::v1::core::ConditionalTollStructure::MergeFrom(from.conditional_toll_structure());
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
}

void RoutingLinkPointAttribution::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RoutingLinkPointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  clear_has_attribute();
}

RoutingLinkPointAttribution::~RoutingLinkPointAttribution() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  SharedDtor();
}

void RoutingLinkPointAttribution::SharedDtor() {
  if (has_attribute()) {
    clear_attribute();
  }
}

void RoutingLinkPointAttribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RoutingLinkPointAttribution& RoutingLinkPointAttribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RoutingLinkPointAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void RoutingLinkPointAttribution::clear_attribute() {
// @@protoc_insertion_point(one_of_clear_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  switch (attribute_case()) {
    case kConditionalRestrictedDrivingManoeuvre: {
      delete attribute_.conditional_restricted_driving_manoeuvre_;
      break;
    }
    case kConditionalUturnRestrictedDrivingManoeuvre: {
      delete attribute_.conditional_uturn_restricted_driving_manoeuvre_;
      break;
    }
    case kConditionalUturnPermittedDrivingManoeuvre: {
      delete attribute_.conditional_uturn_permitted_driving_manoeuvre_;
      break;
    }
    case kConditionalTollStructure: {
      delete attribute_.conditional_toll_structure_;
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ATTRIBUTE_NOT_SET;
}


void RoutingLinkPointAttribution::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_attribute();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RoutingLinkPointAttribution::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RoutingLinkPointAttribution*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::_InternalParse;
        object = msg->mutable_conditional_restricted_driving_manoeuvre();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_uturn_restricted_driving_manoeuvre = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::_InternalParse;
        object = msg->mutable_conditional_uturn_restricted_driving_manoeuvre();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.ConditionalPermittedDrivingManoeuvre conditional_uturn_permitted_driving_manoeuvre = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre::_InternalParse;
        object = msg->mutable_conditional_uturn_permitted_driving_manoeuvre();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.ConditionalTollStructure conditional_toll_structure = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::ConditionalTollStructure::_InternalParse;
        object = msg->mutable_conditional_toll_structure();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RoutingLinkPointAttribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conditional_restricted_driving_manoeuvre()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_uturn_restricted_driving_manoeuvre = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conditional_uturn_restricted_driving_manoeuvre()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.ConditionalPermittedDrivingManoeuvre conditional_uturn_permitted_driving_manoeuvre = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conditional_uturn_permitted_driving_manoeuvre()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.ConditionalTollStructure conditional_toll_structure = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conditional_toll_structure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RoutingLinkPointAttribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
  if (has_conditional_restricted_driving_manoeuvre()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::conditional_restricted_driving_manoeuvre(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_uturn_restricted_driving_manoeuvre = 2;
  if (has_conditional_uturn_restricted_driving_manoeuvre()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::conditional_uturn_restricted_driving_manoeuvre(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalPermittedDrivingManoeuvre conditional_uturn_permitted_driving_manoeuvre = 3;
  if (has_conditional_uturn_permitted_driving_manoeuvre()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::conditional_uturn_permitted_driving_manoeuvre(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalTollStructure conditional_toll_structure = 4;
  if (has_conditional_toll_structure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::conditional_toll_structure(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
}

::google::protobuf::uint8* RoutingLinkPointAttribution::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
  if (has_conditional_restricted_driving_manoeuvre()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::conditional_restricted_driving_manoeuvre(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_uturn_restricted_driving_manoeuvre = 2;
  if (has_conditional_uturn_restricted_driving_manoeuvre()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::conditional_uturn_restricted_driving_manoeuvre(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalPermittedDrivingManoeuvre conditional_uturn_permitted_driving_manoeuvre = 3;
  if (has_conditional_uturn_permitted_driving_manoeuvre()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::conditional_uturn_permitted_driving_manoeuvre(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalTollStructure conditional_toll_structure = 4;
  if (has_conditional_toll_structure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::conditional_toll_structure(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  return target;
}

size_t RoutingLinkPointAttribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (attribute_case()) {
    // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
    case kConditionalRestrictedDrivingManoeuvre: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.conditional_restricted_driving_manoeuvre_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_uturn_restricted_driving_manoeuvre = 2;
    case kConditionalUturnRestrictedDrivingManoeuvre: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.conditional_uturn_restricted_driving_manoeuvre_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.ConditionalPermittedDrivingManoeuvre conditional_uturn_permitted_driving_manoeuvre = 3;
    case kConditionalUturnPermittedDrivingManoeuvre: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.conditional_uturn_permitted_driving_manoeuvre_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.ConditionalTollStructure conditional_toll_structure = 4;
    case kConditionalTollStructure: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.conditional_toll_structure_);
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoutingLinkPointAttribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  const RoutingLinkPointAttribution* source =
      ::google::protobuf::DynamicCastToGenerated<RoutingLinkPointAttribution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
    MergeFrom(*source);
  }
}

void RoutingLinkPointAttribution::MergeFrom(const RoutingLinkPointAttribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.attribute_case()) {
    case kConditionalRestrictedDrivingManoeuvre: {
      mutable_conditional_restricted_driving_manoeuvre()->::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::MergeFrom(from.conditional_restricted_driving_manoeuvre());
      break;
    }
    case kConditionalUturnRestrictedDrivingManoeuvre: {
      mutable_conditional_uturn_restricted_driving_manoeuvre()->::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::MergeFrom(from.conditional_uturn_restricted_driving_manoeuvre());
      break;
    }
    case kConditionalUturnPermittedDrivingManoeuvre: {
      mutable_conditional_uturn_permitted_driving_manoeuvre()->::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre::MergeFrom(from.conditional_uturn_permitted_driving_manoeuvre());
      break;
    }
    case kConditionalTollStructure: {
      mutable_conditional_toll_structure()->::com::here::pb::hdmap::shared::v1::core::ConditionalTollStructure::MergeFrom(from.conditional_toll_structure());
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
}

void RoutingLinkPointAttribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoutingLinkPointAttribution::CopyFrom(const RoutingLinkPointAttribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.RoutingLinkPointAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoutingLinkPointAttribution::IsInitialized() const {
  return true;
}

void RoutingLinkPointAttribution::Swap(RoutingLinkPointAttribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoutingLinkPointAttribution::InternalSwap(RoutingLinkPointAttribution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(attribute_, other->attribute_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata RoutingLinkPointAttribution::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RoutingNodeAttribution::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::routing::_RoutingNodeAttribution_default_instance_.conditional_restricted_driving_manoeuvre_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre*>(
      ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::internal_default_instance());
}
class RoutingNodeAttribution::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre& conditional_restricted_driving_manoeuvre(const RoutingNodeAttribution* msg);
};

const ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre&
RoutingNodeAttribution::HasBitSetters::conditional_restricted_driving_manoeuvre(const RoutingNodeAttribution* msg) {
  return *msg->attribute_.conditional_restricted_driving_manoeuvre_;
}
void RoutingNodeAttribution::set_allocated_conditional_restricted_driving_manoeuvre(::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre* conditional_restricted_driving_manoeuvre) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_attribute();
  if (conditional_restricted_driving_manoeuvre) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      conditional_restricted_driving_manoeuvre = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conditional_restricted_driving_manoeuvre, submessage_arena);
    }
    set_has_conditional_restricted_driving_manoeuvre();
    attribute_.conditional_restricted_driving_manoeuvre_ = conditional_restricted_driving_manoeuvre;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution.conditional_restricted_driving_manoeuvre)
}
void RoutingNodeAttribution::clear_conditional_restricted_driving_manoeuvre() {
  if (has_conditional_restricted_driving_manoeuvre()) {
    delete attribute_.conditional_restricted_driving_manoeuvre_;
    clear_has_attribute();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoutingNodeAttribution::kConditionalRestrictedDrivingManoeuvreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoutingNodeAttribution::RoutingNodeAttribution()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
}
RoutingNodeAttribution::RoutingNodeAttribution(const RoutingNodeAttribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_attribute();
  switch (from.attribute_case()) {
    case kConditionalRestrictedDrivingManoeuvre: {
      mutable_conditional_restricted_driving_manoeuvre()->::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::MergeFrom(from.conditional_restricted_driving_manoeuvre());
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
}

void RoutingNodeAttribution::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RoutingNodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  clear_has_attribute();
}

RoutingNodeAttribution::~RoutingNodeAttribution() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  SharedDtor();
}

void RoutingNodeAttribution::SharedDtor() {
  if (has_attribute()) {
    clear_attribute();
  }
}

void RoutingNodeAttribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RoutingNodeAttribution& RoutingNodeAttribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RoutingNodeAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void RoutingNodeAttribution::clear_attribute() {
// @@protoc_insertion_point(one_of_clear_start:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  switch (attribute_case()) {
    case kConditionalRestrictedDrivingManoeuvre: {
      delete attribute_.conditional_restricted_driving_manoeuvre_;
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ATTRIBUTE_NOT_SET;
}


void RoutingNodeAttribution::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_attribute();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RoutingNodeAttribution::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RoutingNodeAttribution*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::_InternalParse;
        object = msg->mutable_conditional_restricted_driving_manoeuvre();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RoutingNodeAttribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conditional_restricted_driving_manoeuvre()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RoutingNodeAttribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
  if (has_conditional_restricted_driving_manoeuvre()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::conditional_restricted_driving_manoeuvre(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
}

::google::protobuf::uint8* RoutingNodeAttribution::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
  if (has_conditional_restricted_driving_manoeuvre()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::conditional_restricted_driving_manoeuvre(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  return target;
}

size_t RoutingNodeAttribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (attribute_case()) {
    // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
    case kConditionalRestrictedDrivingManoeuvre: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *attribute_.conditional_restricted_driving_manoeuvre_);
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoutingNodeAttribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  const RoutingNodeAttribution* source =
      ::google::protobuf::DynamicCastToGenerated<RoutingNodeAttribution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
    MergeFrom(*source);
  }
}

void RoutingNodeAttribution::MergeFrom(const RoutingNodeAttribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.attribute_case()) {
    case kConditionalRestrictedDrivingManoeuvre: {
      mutable_conditional_restricted_driving_manoeuvre()->::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::MergeFrom(from.conditional_restricted_driving_manoeuvre());
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
}

void RoutingNodeAttribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoutingNodeAttribution::CopyFrom(const RoutingNodeAttribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.RoutingNodeAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoutingNodeAttribution::IsInitialized() const {
  return true;
}

void RoutingNodeAttribution::Swap(RoutingNodeAttribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoutingNodeAttribution::InternalSwap(RoutingNodeAttribution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(attribute_, other->attribute_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata RoutingNodeAttribution::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RoutingStrandAttribution::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::routing::_RoutingStrandAttribution_default_instance_.conditional_restricted_driving_manoeuvre_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre*>(
      ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_RoutingStrandAttribution_default_instance_.conditional_permitted_driving_manoeuvre_ = const_cast< ::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre*>(
      ::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre::internal_default_instance());
}
class RoutingStrandAttribution::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre& conditional_restricted_driving_manoeuvre(const RoutingStrandAttribution* msg);
  static const ::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre& conditional_permitted_driving_manoeuvre(const RoutingStrandAttribution* msg);
};

const ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre&
RoutingStrandAttribution::HasBitSetters::conditional_restricted_driving_manoeuvre(const RoutingStrandAttribution* msg) {
  return *msg->type_.conditional_restricted_driving_manoeuvre_;
}
const ::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre&
RoutingStrandAttribution::HasBitSetters::conditional_permitted_driving_manoeuvre(const RoutingStrandAttribution* msg) {
  return *msg->type_.conditional_permitted_driving_manoeuvre_;
}
void RoutingStrandAttribution::set_allocated_conditional_restricted_driving_manoeuvre(::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre* conditional_restricted_driving_manoeuvre) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (conditional_restricted_driving_manoeuvre) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      conditional_restricted_driving_manoeuvre = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conditional_restricted_driving_manoeuvre, submessage_arena);
    }
    set_has_conditional_restricted_driving_manoeuvre();
    type_.conditional_restricted_driving_manoeuvre_ = conditional_restricted_driving_manoeuvre;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution.conditional_restricted_driving_manoeuvre)
}
void RoutingStrandAttribution::clear_conditional_restricted_driving_manoeuvre() {
  if (has_conditional_restricted_driving_manoeuvre()) {
    delete type_.conditional_restricted_driving_manoeuvre_;
    clear_has_type();
  }
}
void RoutingStrandAttribution::set_allocated_conditional_permitted_driving_manoeuvre(::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre* conditional_permitted_driving_manoeuvre) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (conditional_permitted_driving_manoeuvre) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      conditional_permitted_driving_manoeuvre = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conditional_permitted_driving_manoeuvre, submessage_arena);
    }
    set_has_conditional_permitted_driving_manoeuvre();
    type_.conditional_permitted_driving_manoeuvre_ = conditional_permitted_driving_manoeuvre;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution.conditional_permitted_driving_manoeuvre)
}
void RoutingStrandAttribution::clear_conditional_permitted_driving_manoeuvre() {
  if (has_conditional_permitted_driving_manoeuvre()) {
    delete type_.conditional_permitted_driving_manoeuvre_;
    clear_has_type();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoutingStrandAttribution::kConditionalRestrictedDrivingManoeuvreFieldNumber;
const int RoutingStrandAttribution::kConditionalPermittedDrivingManoeuvreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoutingStrandAttribution::RoutingStrandAttribution()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
}
RoutingStrandAttribution::RoutingStrandAttribution(const RoutingStrandAttribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kConditionalRestrictedDrivingManoeuvre: {
      mutable_conditional_restricted_driving_manoeuvre()->::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::MergeFrom(from.conditional_restricted_driving_manoeuvre());
      break;
    }
    case kConditionalPermittedDrivingManoeuvre: {
      mutable_conditional_permitted_driving_manoeuvre()->::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre::MergeFrom(from.conditional_permitted_driving_manoeuvre());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
}

void RoutingStrandAttribution::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RoutingStrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  clear_has_type();
}

RoutingStrandAttribution::~RoutingStrandAttribution() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  SharedDtor();
}

void RoutingStrandAttribution::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void RoutingStrandAttribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RoutingStrandAttribution& RoutingStrandAttribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RoutingStrandAttribution_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void RoutingStrandAttribution::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  switch (type_case()) {
    case kConditionalRestrictedDrivingManoeuvre: {
      delete type_.conditional_restricted_driving_manoeuvre_;
      break;
    }
    case kConditionalPermittedDrivingManoeuvre: {
      delete type_.conditional_permitted_driving_manoeuvre_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void RoutingStrandAttribution::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RoutingStrandAttribution::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RoutingStrandAttribution*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::_InternalParse;
        object = msg->mutable_conditional_restricted_driving_manoeuvre();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.shared.v1.core.ConditionalPermittedDrivingManoeuvre conditional_permitted_driving_manoeuvre = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre::_InternalParse;
        object = msg->mutable_conditional_permitted_driving_manoeuvre();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RoutingStrandAttribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conditional_restricted_driving_manoeuvre()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.shared.v1.core.ConditionalPermittedDrivingManoeuvre conditional_permitted_driving_manoeuvre = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conditional_permitted_driving_manoeuvre()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RoutingStrandAttribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
  if (has_conditional_restricted_driving_manoeuvre()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::conditional_restricted_driving_manoeuvre(this), output);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalPermittedDrivingManoeuvre conditional_permitted_driving_manoeuvre = 2;
  if (has_conditional_permitted_driving_manoeuvre()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::conditional_permitted_driving_manoeuvre(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
}

::google::protobuf::uint8* RoutingStrandAttribution::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
  if (has_conditional_restricted_driving_manoeuvre()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::conditional_restricted_driving_manoeuvre(this), target);
  }

  // .com.here.pb.hdmap.shared.v1.core.ConditionalPermittedDrivingManoeuvre conditional_permitted_driving_manoeuvre = 2;
  if (has_conditional_permitted_driving_manoeuvre()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::conditional_permitted_driving_manoeuvre(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  return target;
}

size_t RoutingStrandAttribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // .com.here.pb.hdmap.shared.v1.core.ConditionalRestrictedDrivingManoeuvre conditional_restricted_driving_manoeuvre = 1;
    case kConditionalRestrictedDrivingManoeuvre: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.conditional_restricted_driving_manoeuvre_);
      break;
    }
    // .com.here.pb.hdmap.shared.v1.core.ConditionalPermittedDrivingManoeuvre conditional_permitted_driving_manoeuvre = 2;
    case kConditionalPermittedDrivingManoeuvre: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.conditional_permitted_driving_manoeuvre_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoutingStrandAttribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  const RoutingStrandAttribution* source =
      ::google::protobuf::DynamicCastToGenerated<RoutingStrandAttribution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
    MergeFrom(*source);
  }
}

void RoutingStrandAttribution::MergeFrom(const RoutingStrandAttribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kConditionalRestrictedDrivingManoeuvre: {
      mutable_conditional_restricted_driving_manoeuvre()->::com::here::pb::hdmap::shared::v1::core::ConditionalRestrictedDrivingManoeuvre::MergeFrom(from.conditional_restricted_driving_manoeuvre());
      break;
    }
    case kConditionalPermittedDrivingManoeuvre: {
      mutable_conditional_permitted_driving_manoeuvre()->::com::here::pb::hdmap::shared::v1::core::ConditionalPermittedDrivingManoeuvre::MergeFrom(from.conditional_permitted_driving_manoeuvre());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void RoutingStrandAttribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoutingStrandAttribution::CopyFrom(const RoutingStrandAttribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.RoutingStrandAttribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoutingStrandAttribution::IsInitialized() const {
  return true;
}

void RoutingStrandAttribution::Swap(RoutingStrandAttribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoutingStrandAttribution::InternalSwap(RoutingStrandAttribution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata RoutingStrandAttribution::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AdministrativeAreaRelationship::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::routing::_AdministrativeAreaRelationship_default_instance_.administrative_area_boundary_ = const_cast< ::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary*>(
      ::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_AdministrativeAreaRelationship_default_instance_.within_administrative_area_ = const_cast< ::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea*>(
      ::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea::internal_default_instance());
}
class AdministrativeAreaRelationship::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary& administrative_area_boundary(const AdministrativeAreaRelationship* msg);
  static const ::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea& within_administrative_area(const AdministrativeAreaRelationship* msg);
};

const ::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary&
AdministrativeAreaRelationship::HasBitSetters::administrative_area_boundary(const AdministrativeAreaRelationship* msg) {
  return *msg->relation_.administrative_area_boundary_;
}
const ::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea&
AdministrativeAreaRelationship::HasBitSetters::within_administrative_area(const AdministrativeAreaRelationship* msg) {
  return *msg->relation_.within_administrative_area_;
}
void AdministrativeAreaRelationship::set_allocated_administrative_area_boundary(::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary* administrative_area_boundary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_relation();
  if (administrative_area_boundary) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      administrative_area_boundary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, administrative_area_boundary, submessage_arena);
    }
    set_has_administrative_area_boundary();
    relation_.administrative_area_boundary_ = administrative_area_boundary;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship.administrative_area_boundary)
}
void AdministrativeAreaRelationship::set_allocated_within_administrative_area(::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea* within_administrative_area) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_relation();
  if (within_administrative_area) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      within_administrative_area = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, within_administrative_area, submessage_arena);
    }
    set_has_within_administrative_area();
    relation_.within_administrative_area_ = within_administrative_area;
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship.within_administrative_area)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdministrativeAreaRelationship::kAdministrativeAreaBoundaryFieldNumber;
const int AdministrativeAreaRelationship::kWithinAdministrativeAreaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdministrativeAreaRelationship::AdministrativeAreaRelationship()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
}
AdministrativeAreaRelationship::AdministrativeAreaRelationship(const AdministrativeAreaRelationship& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_relation();
  switch (from.relation_case()) {
    case kAdministrativeAreaBoundary: {
      mutable_administrative_area_boundary()->::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary::MergeFrom(from.administrative_area_boundary());
      break;
    }
    case kWithinAdministrativeArea: {
      mutable_within_administrative_area()->::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea::MergeFrom(from.within_administrative_area());
      break;
    }
    case RELATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
}

void AdministrativeAreaRelationship::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AdministrativeAreaRelationship_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  clear_has_relation();
}

AdministrativeAreaRelationship::~AdministrativeAreaRelationship() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  SharedDtor();
}

void AdministrativeAreaRelationship::SharedDtor() {
  if (has_relation()) {
    clear_relation();
  }
}

void AdministrativeAreaRelationship::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AdministrativeAreaRelationship& AdministrativeAreaRelationship::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AdministrativeAreaRelationship_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void AdministrativeAreaRelationship::clear_relation() {
// @@protoc_insertion_point(one_of_clear_start:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  switch (relation_case()) {
    case kAdministrativeAreaBoundary: {
      delete relation_.administrative_area_boundary_;
      break;
    }
    case kWithinAdministrativeArea: {
      delete relation_.within_administrative_area_;
      break;
    }
    case RELATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RELATION_NOT_SET;
}


void AdministrativeAreaRelationship::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_relation();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AdministrativeAreaRelationship::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AdministrativeAreaRelationship*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary administrative_area_boundary = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary::_InternalParse;
        object = msg->mutable_administrative_area_boundary();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea within_administrative_area = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea::_InternalParse;
        object = msg->mutable_within_administrative_area();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AdministrativeAreaRelationship::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary administrative_area_boundary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_administrative_area_boundary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea within_administrative_area = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_within_administrative_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AdministrativeAreaRelationship::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary administrative_area_boundary = 1;
  if (has_administrative_area_boundary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::administrative_area_boundary(this), output);
  }

  // .com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea within_administrative_area = 2;
  if (has_within_administrative_area()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::within_administrative_area(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
}

::google::protobuf::uint8* AdministrativeAreaRelationship::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary administrative_area_boundary = 1;
  if (has_administrative_area_boundary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::administrative_area_boundary(this), target);
  }

  // .com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea within_administrative_area = 2;
  if (has_within_administrative_area()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::within_administrative_area(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  return target;
}

size_t AdministrativeAreaRelationship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (relation_case()) {
    // .com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary administrative_area_boundary = 1;
    case kAdministrativeAreaBoundary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *relation_.administrative_area_boundary_);
      break;
    }
    // .com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea within_administrative_area = 2;
    case kWithinAdministrativeArea: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *relation_.within_administrative_area_);
      break;
    }
    case RELATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdministrativeAreaRelationship::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  GOOGLE_DCHECK_NE(&from, this);
  const AdministrativeAreaRelationship* source =
      ::google::protobuf::DynamicCastToGenerated<AdministrativeAreaRelationship>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
    MergeFrom(*source);
  }
}

void AdministrativeAreaRelationship::MergeFrom(const AdministrativeAreaRelationship& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.relation_case()) {
    case kAdministrativeAreaBoundary: {
      mutable_administrative_area_boundary()->::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary::MergeFrom(from.administrative_area_boundary());
      break;
    }
    case kWithinAdministrativeArea: {
      mutable_within_administrative_area()->::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea::MergeFrom(from.within_administrative_area());
      break;
    }
    case RELATION_NOT_SET: {
      break;
    }
  }
}

void AdministrativeAreaRelationship::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdministrativeAreaRelationship::CopyFrom(const AdministrativeAreaRelationship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.AdministrativeAreaRelationship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdministrativeAreaRelationship::IsInitialized() const {
  return true;
}

void AdministrativeAreaRelationship::Swap(AdministrativeAreaRelationship* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdministrativeAreaRelationship::InternalSwap(AdministrativeAreaRelationship* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(relation_, other->relation_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata AdministrativeAreaRelationship::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DefinesAdministrativeAreaBoundary::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::routing::_DefinesAdministrativeAreaBoundary_default_instance_._instance.get_mutable()->left_administrative_area_ref_ = const_cast< ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference*>(
      ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::routing::_DefinesAdministrativeAreaBoundary_default_instance_._instance.get_mutable()->right_administrative_area_ref_ = const_cast< ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference*>(
      ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference::internal_default_instance());
}
class DefinesAdministrativeAreaBoundary::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference& left_administrative_area_ref(const DefinesAdministrativeAreaBoundary* msg);
  static const ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference& right_administrative_area_ref(const DefinesAdministrativeAreaBoundary* msg);
};

const ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference&
DefinesAdministrativeAreaBoundary::HasBitSetters::left_administrative_area_ref(const DefinesAdministrativeAreaBoundary* msg) {
  return *msg->left_administrative_area_ref_;
}
const ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference&
DefinesAdministrativeAreaBoundary::HasBitSetters::right_administrative_area_ref(const DefinesAdministrativeAreaBoundary* msg) {
  return *msg->right_administrative_area_ref_;
}
void DefinesAdministrativeAreaBoundary::clear_left_administrative_area_ref() {
  if (GetArenaNoVirtual() == nullptr && left_administrative_area_ref_ != nullptr) {
    delete left_administrative_area_ref_;
  }
  left_administrative_area_ref_ = nullptr;
}
void DefinesAdministrativeAreaBoundary::clear_right_administrative_area_ref() {
  if (GetArenaNoVirtual() == nullptr && right_administrative_area_ref_ != nullptr) {
    delete right_administrative_area_ref_;
  }
  right_administrative_area_ref_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DefinesAdministrativeAreaBoundary::kLeftAdministrativeAreaRefFieldNumber;
const int DefinesAdministrativeAreaBoundary::kRightAdministrativeAreaRefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DefinesAdministrativeAreaBoundary::DefinesAdministrativeAreaBoundary()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
}
DefinesAdministrativeAreaBoundary::DefinesAdministrativeAreaBoundary(const DefinesAdministrativeAreaBoundary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_left_administrative_area_ref()) {
    left_administrative_area_ref_ = new ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference(*from.left_administrative_area_ref_);
  } else {
    left_administrative_area_ref_ = nullptr;
  }
  if (from.has_right_administrative_area_ref()) {
    right_administrative_area_ref_ = new ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference(*from.right_administrative_area_ref_);
  } else {
    right_administrative_area_ref_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
}

void DefinesAdministrativeAreaBoundary::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DefinesAdministrativeAreaBoundary_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  ::memset(&left_administrative_area_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_administrative_area_ref_) -
      reinterpret_cast<char*>(&left_administrative_area_ref_)) + sizeof(right_administrative_area_ref_));
}

DefinesAdministrativeAreaBoundary::~DefinesAdministrativeAreaBoundary() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  SharedDtor();
}

void DefinesAdministrativeAreaBoundary::SharedDtor() {
  if (this != internal_default_instance()) delete left_administrative_area_ref_;
  if (this != internal_default_instance()) delete right_administrative_area_ref_;
}

void DefinesAdministrativeAreaBoundary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DefinesAdministrativeAreaBoundary& DefinesAdministrativeAreaBoundary::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DefinesAdministrativeAreaBoundary_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void DefinesAdministrativeAreaBoundary::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && left_administrative_area_ref_ != nullptr) {
    delete left_administrative_area_ref_;
  }
  left_administrative_area_ref_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && right_administrative_area_ref_ != nullptr) {
    delete right_administrative_area_ref_;
  }
  right_administrative_area_ref_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DefinesAdministrativeAreaBoundary::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DefinesAdministrativeAreaBoundary*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference left_administrative_area_ref = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference::_InternalParse;
        object = msg->mutable_left_administrative_area_ref();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference right_administrative_area_ref = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference::_InternalParse;
        object = msg->mutable_right_administrative_area_ref();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DefinesAdministrativeAreaBoundary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference left_administrative_area_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left_administrative_area_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference right_administrative_area_ref = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right_administrative_area_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DefinesAdministrativeAreaBoundary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference left_administrative_area_ref = 1;
  if (this->has_left_administrative_area_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::left_administrative_area_ref(this), output);
  }

  // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference right_administrative_area_ref = 2;
  if (this->has_right_administrative_area_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::right_administrative_area_ref(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
}

::google::protobuf::uint8* DefinesAdministrativeAreaBoundary::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference left_administrative_area_ref = 1;
  if (this->has_left_administrative_area_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::left_administrative_area_ref(this), target);
  }

  // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference right_administrative_area_ref = 2;
  if (this->has_right_administrative_area_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::right_administrative_area_ref(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  return target;
}

size_t DefinesAdministrativeAreaBoundary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference left_administrative_area_ref = 1;
  if (this->has_left_administrative_area_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *left_administrative_area_ref_);
  }

  // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference right_administrative_area_ref = 2;
  if (this->has_right_administrative_area_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *right_administrative_area_ref_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DefinesAdministrativeAreaBoundary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  const DefinesAdministrativeAreaBoundary* source =
      ::google::protobuf::DynamicCastToGenerated<DefinesAdministrativeAreaBoundary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
    MergeFrom(*source);
  }
}

void DefinesAdministrativeAreaBoundary::MergeFrom(const DefinesAdministrativeAreaBoundary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_left_administrative_area_ref()) {
    mutable_left_administrative_area_ref()->::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference::MergeFrom(from.left_administrative_area_ref());
  }
  if (from.has_right_administrative_area_ref()) {
    mutable_right_administrative_area_ref()->::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference::MergeFrom(from.right_administrative_area_ref());
  }
}

void DefinesAdministrativeAreaBoundary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefinesAdministrativeAreaBoundary::CopyFrom(const DefinesAdministrativeAreaBoundary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.DefinesAdministrativeAreaBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefinesAdministrativeAreaBoundary::IsInitialized() const {
  return true;
}

void DefinesAdministrativeAreaBoundary::Swap(DefinesAdministrativeAreaBoundary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DefinesAdministrativeAreaBoundary::InternalSwap(DefinesAdministrativeAreaBoundary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(left_administrative_area_ref_, other->left_administrative_area_ref_);
  swap(right_administrative_area_ref_, other->right_administrative_area_ref_);
}

::google::protobuf::Metadata DefinesAdministrativeAreaBoundary::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WithinAdministrativeArea::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::routing::_WithinAdministrativeArea_default_instance_._instance.get_mutable()->administrative_area_ref_ = const_cast< ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference*>(
      ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference::internal_default_instance());
}
class WithinAdministrativeArea::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference& administrative_area_ref(const WithinAdministrativeArea* msg);
};

const ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference&
WithinAdministrativeArea::HasBitSetters::administrative_area_ref(const WithinAdministrativeArea* msg) {
  return *msg->administrative_area_ref_;
}
void WithinAdministrativeArea::clear_administrative_area_ref() {
  if (GetArenaNoVirtual() == nullptr && administrative_area_ref_ != nullptr) {
    delete administrative_area_ref_;
  }
  administrative_area_ref_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WithinAdministrativeArea::kAdministrativeAreaRefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WithinAdministrativeArea::WithinAdministrativeArea()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
}
WithinAdministrativeArea::WithinAdministrativeArea(const WithinAdministrativeArea& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_administrative_area_ref()) {
    administrative_area_ref_ = new ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference(*from.administrative_area_ref_);
  } else {
    administrative_area_ref_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
}

void WithinAdministrativeArea::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WithinAdministrativeArea_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  administrative_area_ref_ = nullptr;
}

WithinAdministrativeArea::~WithinAdministrativeArea() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  SharedDtor();
}

void WithinAdministrativeArea::SharedDtor() {
  if (this != internal_default_instance()) delete administrative_area_ref_;
}

void WithinAdministrativeArea::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WithinAdministrativeArea& WithinAdministrativeArea::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WithinAdministrativeArea_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto.base);
  return *internal_default_instance();
}


void WithinAdministrativeArea::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && administrative_area_ref_ != nullptr) {
    delete administrative_area_ref_;
  }
  administrative_area_ref_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WithinAdministrativeArea::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WithinAdministrativeArea*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference administrative_area_ref = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference::_InternalParse;
        object = msg->mutable_administrative_area_ref();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WithinAdministrativeArea::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference administrative_area_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_administrative_area_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WithinAdministrativeArea::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference administrative_area_ref = 1;
  if (this->has_administrative_area_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::administrative_area_ref(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
}

::google::protobuf::uint8* WithinAdministrativeArea::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference administrative_area_ref = 1;
  if (this->has_administrative_area_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::administrative_area_ref(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  return target;
}

size_t WithinAdministrativeArea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference administrative_area_ref = 1;
  if (this->has_administrative_area_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *administrative_area_ref_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WithinAdministrativeArea::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  GOOGLE_DCHECK_NE(&from, this);
  const WithinAdministrativeArea* source =
      ::google::protobuf::DynamicCastToGenerated<WithinAdministrativeArea>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
    MergeFrom(*source);
  }
}

void WithinAdministrativeArea::MergeFrom(const WithinAdministrativeArea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_administrative_area_ref()) {
    mutable_administrative_area_ref()->::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference::MergeFrom(from.administrative_area_ref());
  }
}

void WithinAdministrativeArea::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WithinAdministrativeArea::CopyFrom(const WithinAdministrativeArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.routing.WithinAdministrativeArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WithinAdministrativeArea::IsInitialized() const {
  return true;
}

void WithinAdministrativeArea::Swap(WithinAdministrativeArea* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WithinAdministrativeArea::InternalSwap(WithinAdministrativeArea* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(administrative_area_ref_, other->administrative_area_ref_);
}

::google::protobuf::Metadata WithinAdministrativeArea::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2frouting_2flayer_2drouting_2dattributes_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace routing
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::RoutingAttributesLayerTile* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::RoutingAttributesLayerTile >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::RoutingAttributesLayerTile >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::LinkAttribution_ParametricAttribution* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::LinkAttribution_ParametricAttribution >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::LinkAttribution_ParametricAttribution >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::LinkAttribution_PointAttribution* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::LinkAttribution_PointAttribution >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::LinkAttribution_PointAttribution >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::LinkAttribution* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::LinkAttribution >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::LinkAttribution >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::NodeAttribution_IntersectionTraversalAttribution* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::NodeAttribution_IntersectionTraversalAttribution >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::NodeAttribution_IntersectionTraversalAttribution >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::NodeAttribution* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::NodeAttribution >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::NodeAttribution >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::StrandAttribution_OrientedTiledLinkReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::StrandAttribution_OrientedTiledLinkReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::StrandAttribution_OrientedTiledLinkReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::StrandAttribution* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::StrandAttribution >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::StrandAttribution >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::RoutingAttributionGroup* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::RoutingAttributionGroup >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::RoutingAttributionGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttribution* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttribution >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::RoutingLinkParametricAttribution >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttribution* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttribution >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::RoutingLinkPointAttribution >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::RoutingNodeAttribution* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::RoutingNodeAttribution >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::RoutingNodeAttribution >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::RoutingStrandAttribution* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::RoutingStrandAttribution >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::RoutingStrandAttribution >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::AdministrativeAreaRelationship >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::DefinesAdministrativeAreaBoundary >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::routing::WithinAdministrativeArea >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
