// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/adas/layer-adas-attributes.proto

#ifndef PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto
#define PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "com/here/pb/hdmap/external/v1/common/common.pb.h"
#include "com/here/pb/hdmap/shared/v1/adas/common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto();
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace adas {
class AdasAttributesLayerTile;
class AdasAttributesLayerTileDefaultTypeInternal;
extern AdasAttributesLayerTileDefaultTypeInternal _AdasAttributesLayerTile_default_instance_;
class AdasElevationSample;
class AdasElevationSampleDefaultTypeInternal;
extern AdasElevationSampleDefaultTypeInternal _AdasElevationSample_default_instance_;
class AdasIntersectionTraversalAttribution;
class AdasIntersectionTraversalAttributionDefaultTypeInternal;
extern AdasIntersectionTraversalAttributionDefaultTypeInternal _AdasIntersectionTraversalAttribution_default_instance_;
class AdasIntersectionTraversalValues;
class AdasIntersectionTraversalValuesDefaultTypeInternal;
extern AdasIntersectionTraversalValuesDefaultTypeInternal _AdasIntersectionTraversalValues_default_instance_;
class AdasLinkParametricAttribution;
class AdasLinkParametricAttributionDefaultTypeInternal;
extern AdasLinkParametricAttributionDefaultTypeInternal _AdasLinkParametricAttribution_default_instance_;
class AdasLinkPointAttribution;
class AdasLinkPointAttributionDefaultTypeInternal;
extern AdasLinkPointAttributionDefaultTypeInternal _AdasLinkPointAttribution_default_instance_;
class AdasSlopeSample;
class AdasSlopeSampleDefaultTypeInternal;
extern AdasSlopeSampleDefaultTypeInternal _AdasSlopeSample_default_instance_;
class LinkAttribution;
class LinkAttributionDefaultTypeInternal;
extern LinkAttributionDefaultTypeInternal _LinkAttribution_default_instance_;
class LinkAttribution_ParametricAttribution;
class LinkAttribution_ParametricAttributionDefaultTypeInternal;
extern LinkAttribution_ParametricAttributionDefaultTypeInternal _LinkAttribution_ParametricAttribution_default_instance_;
class LinkAttribution_PointAttribution;
class LinkAttribution_PointAttributionDefaultTypeInternal;
extern LinkAttribution_PointAttributionDefaultTypeInternal _LinkAttribution_PointAttribution_default_instance_;
class NodeAttribution;
class NodeAttributionDefaultTypeInternal;
extern NodeAttributionDefaultTypeInternal _NodeAttribution_default_instance_;
class NodeAttribution_IntersectionTraversalAttribution;
class NodeAttribution_IntersectionTraversalAttributionDefaultTypeInternal;
extern NodeAttribution_IntersectionTraversalAttributionDefaultTypeInternal _NodeAttribution_IntersectionTraversalAttribution_default_instance_;
}  // namespace adas
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::here::pb::hdmap::external::v1::adas::AdasAttributesLayerTile* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::adas::AdasAttributesLayerTile>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::adas::AdasElevationSample>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::adas::LinkAttribution* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::adas::LinkAttribution>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::adas::NodeAttribution* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::adas::NodeAttribution>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace adas {

enum SlopeElevationAccuracy {
  SlopeElevationAccuracy_UNKNOWN = 0,
  BASIC = 1,
  HIGH = 2,
  SlopeElevationAccuracy_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  SlopeElevationAccuracy_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool SlopeElevationAccuracy_IsValid(int value);
const SlopeElevationAccuracy SlopeElevationAccuracy_MIN = SlopeElevationAccuracy_UNKNOWN;
const SlopeElevationAccuracy SlopeElevationAccuracy_MAX = HIGH;
const int SlopeElevationAccuracy_ARRAYSIZE = SlopeElevationAccuracy_MAX + 1;

const ::google::protobuf::EnumDescriptor* SlopeElevationAccuracy_descriptor();
inline const ::std::string& SlopeElevationAccuracy_Name(SlopeElevationAccuracy value) {
  return ::google::protobuf::internal::NameOfEnum(
    SlopeElevationAccuracy_descriptor(), value);
}
inline bool SlopeElevationAccuracy_Parse(
    const ::std::string& name, SlopeElevationAccuracy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SlopeElevationAccuracy>(
    SlopeElevationAccuracy_descriptor(), name, value);
}
enum LinkGeometryAccuracy {
  LinkGeometryAccuracy_UNKNOWN = 0,
  BASIC_GEOMETRY = 1,
  HIGH_ACCURACY_GEOMETRY = 2,
  LinkGeometryAccuracy_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  LinkGeometryAccuracy_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool LinkGeometryAccuracy_IsValid(int value);
const LinkGeometryAccuracy LinkGeometryAccuracy_MIN = LinkGeometryAccuracy_UNKNOWN;
const LinkGeometryAccuracy LinkGeometryAccuracy_MAX = HIGH_ACCURACY_GEOMETRY;
const int LinkGeometryAccuracy_ARRAYSIZE = LinkGeometryAccuracy_MAX + 1;

const ::google::protobuf::EnumDescriptor* LinkGeometryAccuracy_descriptor();
inline const ::std::string& LinkGeometryAccuracy_Name(LinkGeometryAccuracy value) {
  return ::google::protobuf::internal::NameOfEnum(
    LinkGeometryAccuracy_descriptor(), value);
}
inline bool LinkGeometryAccuracy_Parse(
    const ::std::string& name, LinkGeometryAccuracy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LinkGeometryAccuracy>(
    LinkGeometryAccuracy_descriptor(), name, value);
}
// ===================================================================

class AdasAttributesLayerTile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile) */ {
 public:
  AdasAttributesLayerTile();
  virtual ~AdasAttributesLayerTile();

  AdasAttributesLayerTile(const AdasAttributesLayerTile& from);

  inline AdasAttributesLayerTile& operator=(const AdasAttributesLayerTile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdasAttributesLayerTile(AdasAttributesLayerTile&& from) noexcept
    : AdasAttributesLayerTile() {
    *this = ::std::move(from);
  }

  inline AdasAttributesLayerTile& operator=(AdasAttributesLayerTile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AdasAttributesLayerTile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdasAttributesLayerTile* internal_default_instance() {
    return reinterpret_cast<const AdasAttributesLayerTile*>(
               &_AdasAttributesLayerTile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AdasAttributesLayerTile* other);
  friend void swap(AdasAttributesLayerTile& a, AdasAttributesLayerTile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdasAttributesLayerTile* New() const final {
    return CreateMaybeMessage<AdasAttributesLayerTile>(nullptr);
  }

  AdasAttributesLayerTile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdasAttributesLayerTile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdasAttributesLayerTile& from);
  void MergeFrom(const AdasAttributesLayerTile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdasAttributesLayerTile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.here.pb.hdmap.external.v1.adas.LinkAttribution link_attribution = 2;
  int link_attribution_size() const;
  void clear_link_attribution();
  static const int kLinkAttributionFieldNumber = 2;
  ::com::here::pb::hdmap::external::v1::adas::LinkAttribution* mutable_link_attribution(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution >*
      mutable_link_attribution();
  const ::com::here::pb::hdmap::external::v1::adas::LinkAttribution& link_attribution(int index) const;
  ::com::here::pb::hdmap::external::v1::adas::LinkAttribution* add_link_attribution();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution >&
      link_attribution() const;

  // repeated .com.here.pb.hdmap.external.v1.adas.NodeAttribution node_attribution = 3;
  int node_attribution_size() const;
  void clear_node_attribution();
  static const int kNodeAttributionFieldNumber = 3;
  ::com::here::pb::hdmap::external::v1::adas::NodeAttribution* mutable_node_attribution(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::NodeAttribution >*
      mutable_node_attribution();
  const ::com::here::pb::hdmap::external::v1::adas::NodeAttribution& node_attribution(int index) const;
  ::com::here::pb::hdmap::external::v1::adas::NodeAttribution* add_node_attribution();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::NodeAttribution >&
      node_attribution() const;

  // uint32 here_tile_id = 1;
  void clear_here_tile_id();
  static const int kHereTileIdFieldNumber = 1;
  ::google::protobuf::uint32 here_tile_id() const;
  void set_here_tile_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution > link_attribution_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::NodeAttribution > node_attribution_;
  ::google::protobuf::uint32 here_tile_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto;
};
// -------------------------------------------------------------------

class LinkAttribution_ParametricAttribution final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution) */ {
 public:
  LinkAttribution_ParametricAttribution();
  virtual ~LinkAttribution_ParametricAttribution();

  LinkAttribution_ParametricAttribution(const LinkAttribution_ParametricAttribution& from);

  inline LinkAttribution_ParametricAttribution& operator=(const LinkAttribution_ParametricAttribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkAttribution_ParametricAttribution(LinkAttribution_ParametricAttribution&& from) noexcept
    : LinkAttribution_ParametricAttribution() {
    *this = ::std::move(from);
  }

  inline LinkAttribution_ParametricAttribution& operator=(LinkAttribution_ParametricAttribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LinkAttribution_ParametricAttribution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkAttribution_ParametricAttribution* internal_default_instance() {
    return reinterpret_cast<const LinkAttribution_ParametricAttribution*>(
               &_LinkAttribution_ParametricAttribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LinkAttribution_ParametricAttribution* other);
  friend void swap(LinkAttribution_ParametricAttribution& a, LinkAttribution_ParametricAttribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkAttribution_ParametricAttribution* New() const final {
    return CreateMaybeMessage<LinkAttribution_ParametricAttribution>(nullptr);
  }

  LinkAttribution_ParametricAttribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkAttribution_ParametricAttribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkAttribution_ParametricAttribution& from);
  void MergeFrom(const LinkAttribution_ParametricAttribution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkAttribution_ParametricAttribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.here.pb.hdmap.external.v1.adas.AdasLinkParametricAttribution link_parametric_attribution = 3;
  int link_parametric_attribution_size() const;
  void clear_link_parametric_attribution();
  static const int kLinkParametricAttributionFieldNumber = 3;
  ::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution* mutable_link_parametric_attribution(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution >*
      mutable_link_parametric_attribution();
  const ::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution& link_parametric_attribution(int index) const;
  ::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution* add_link_parametric_attribution();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution >&
      link_parametric_attribution() const;

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_range = 1;
  bool has_applies_to_range() const;
  void clear_applies_to_range();
  static const int kAppliesToRangeFieldNumber = 1;
  const ::com::here::pb::hdmap::external::v1::common::ParametricRange& applies_to_range() const;
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* release_applies_to_range();
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* mutable_applies_to_range();
  void set_allocated_applies_to_range(::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_range);

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
  void clear_applies_to_direction();
  static const int kAppliesToDirectionFieldNumber = 2;
  ::com::here::pb::hdmap::external::v1::common::RelativeDirection applies_to_direction() const;
  void set_applies_to_direction(::com::here::pb::hdmap::external::v1::common::RelativeDirection value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution > link_parametric_attribution_;
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_range_;
  int applies_to_direction_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto;
};
// -------------------------------------------------------------------

class LinkAttribution_PointAttribution final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution) */ {
 public:
  LinkAttribution_PointAttribution();
  virtual ~LinkAttribution_PointAttribution();

  LinkAttribution_PointAttribution(const LinkAttribution_PointAttribution& from);

  inline LinkAttribution_PointAttribution& operator=(const LinkAttribution_PointAttribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkAttribution_PointAttribution(LinkAttribution_PointAttribution&& from) noexcept
    : LinkAttribution_PointAttribution() {
    *this = ::std::move(from);
  }

  inline LinkAttribution_PointAttribution& operator=(LinkAttribution_PointAttribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LinkAttribution_PointAttribution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkAttribution_PointAttribution* internal_default_instance() {
    return reinterpret_cast<const LinkAttribution_PointAttribution*>(
               &_LinkAttribution_PointAttribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(LinkAttribution_PointAttribution* other);
  friend void swap(LinkAttribution_PointAttribution& a, LinkAttribution_PointAttribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkAttribution_PointAttribution* New() const final {
    return CreateMaybeMessage<LinkAttribution_PointAttribution>(nullptr);
  }

  LinkAttribution_PointAttribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkAttribution_PointAttribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkAttribution_PointAttribution& from);
  void MergeFrom(const LinkAttribution_PointAttribution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkAttribution_PointAttribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution link_point_attribution = 3;
  int link_point_attribution_size() const;
  void clear_link_point_attribution();
  static const int kLinkPointAttributionFieldNumber = 3;
  ::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution* mutable_link_point_attribution(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution >*
      mutable_link_point_attribution();
  const ::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution& link_point_attribution(int index) const;
  ::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution* add_link_point_attribution();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution >&
      link_point_attribution() const;

  // double applies_to_location = 1;
  void clear_applies_to_location();
  static const int kAppliesToLocationFieldNumber = 1;
  double applies_to_location() const;
  void set_applies_to_location(double value);

  // .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
  void clear_applies_to_direction();
  static const int kAppliesToDirectionFieldNumber = 2;
  ::com::here::pb::hdmap::external::v1::common::RelativeDirection applies_to_direction() const;
  void set_applies_to_direction(::com::here::pb::hdmap::external::v1::common::RelativeDirection value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution > link_point_attribution_;
  double applies_to_location_;
  int applies_to_direction_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto;
};
// -------------------------------------------------------------------

class LinkAttribution final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.adas.LinkAttribution) */ {
 public:
  LinkAttribution();
  virtual ~LinkAttribution();

  LinkAttribution(const LinkAttribution& from);

  inline LinkAttribution& operator=(const LinkAttribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkAttribution(LinkAttribution&& from) noexcept
    : LinkAttribution() {
    *this = ::std::move(from);
  }

  inline LinkAttribution& operator=(LinkAttribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LinkAttribution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkAttribution* internal_default_instance() {
    return reinterpret_cast<const LinkAttribution*>(
               &_LinkAttribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(LinkAttribution* other);
  friend void swap(LinkAttribution& a, LinkAttribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkAttribution* New() const final {
    return CreateMaybeMessage<LinkAttribution>(nullptr);
  }

  LinkAttribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkAttribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkAttribution& from);
  void MergeFrom(const LinkAttribution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkAttribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LinkAttribution_ParametricAttribution ParametricAttribution;
  typedef LinkAttribution_PointAttribution PointAttribution;

  // accessors -------------------------------------------------------

  // repeated .com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution parametric_attribution = 2;
  int parametric_attribution_size() const;
  void clear_parametric_attribution();
  static const int kParametricAttributionFieldNumber = 2;
  ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution* mutable_parametric_attribution(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution >*
      mutable_parametric_attribution();
  const ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution& parametric_attribution(int index) const;
  ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution* add_parametric_attribution();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution >&
      parametric_attribution() const;

  // repeated .com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution point_attribution = 3;
  int point_attribution_size() const;
  void clear_point_attribution();
  static const int kPointAttributionFieldNumber = 3;
  ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution* mutable_point_attribution(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution >*
      mutable_point_attribution();
  const ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution& point_attribution(int index) const;
  ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution* add_point_attribution();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution >&
      point_attribution() const;

  // uint32 link_id = 1;
  void clear_link_id();
  static const int kLinkIdFieldNumber = 1;
  ::google::protobuf::uint32 link_id() const;
  void set_link_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.adas.LinkAttribution)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution > parametric_attribution_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution > point_attribution_;
  ::google::protobuf::uint32 link_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto;
};
// -------------------------------------------------------------------

class NodeAttribution_IntersectionTraversalAttribution final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution) */ {
 public:
  NodeAttribution_IntersectionTraversalAttribution();
  virtual ~NodeAttribution_IntersectionTraversalAttribution();

  NodeAttribution_IntersectionTraversalAttribution(const NodeAttribution_IntersectionTraversalAttribution& from);

  inline NodeAttribution_IntersectionTraversalAttribution& operator=(const NodeAttribution_IntersectionTraversalAttribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NodeAttribution_IntersectionTraversalAttribution(NodeAttribution_IntersectionTraversalAttribution&& from) noexcept
    : NodeAttribution_IntersectionTraversalAttribution() {
    *this = ::std::move(from);
  }

  inline NodeAttribution_IntersectionTraversalAttribution& operator=(NodeAttribution_IntersectionTraversalAttribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NodeAttribution_IntersectionTraversalAttribution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NodeAttribution_IntersectionTraversalAttribution* internal_default_instance() {
    return reinterpret_cast<const NodeAttribution_IntersectionTraversalAttribution*>(
               &_NodeAttribution_IntersectionTraversalAttribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(NodeAttribution_IntersectionTraversalAttribution* other);
  friend void swap(NodeAttribution_IntersectionTraversalAttribution& a, NodeAttribution_IntersectionTraversalAttribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NodeAttribution_IntersectionTraversalAttribution* New() const final {
    return CreateMaybeMessage<NodeAttribution_IntersectionTraversalAttribution>(nullptr);
  }

  NodeAttribution_IntersectionTraversalAttribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NodeAttribution_IntersectionTraversalAttribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NodeAttribution_IntersectionTraversalAttribution& from);
  void MergeFrom(const NodeAttribution_IntersectionTraversalAttribution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NodeAttribution_IntersectionTraversalAttribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference from_link_refs = 1;
  int from_link_refs_size() const;
  void clear_from_link_refs();
  static const int kFromLinkRefsFieldNumber = 1;
  ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* mutable_from_link_refs(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference >*
      mutable_from_link_refs();
  const ::com::here::pb::hdmap::external::v1::common::TiledLinkReference& from_link_refs(int index) const;
  ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* add_from_link_refs();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference >&
      from_link_refs() const;

  // repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference to_link_refs = 2;
  int to_link_refs_size() const;
  void clear_to_link_refs();
  static const int kToLinkRefsFieldNumber = 2;
  ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* mutable_to_link_refs(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference >*
      mutable_to_link_refs();
  const ::com::here::pb::hdmap::external::v1::common::TiledLinkReference& to_link_refs(int index) const;
  ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* add_to_link_refs();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference >&
      to_link_refs() const;

  // repeated .com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution node_attribution = 3;
  int node_attribution_size() const;
  void clear_node_attribution();
  static const int kNodeAttributionFieldNumber = 3;
  ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution* mutable_node_attribution(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution >*
      mutable_node_attribution();
  const ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution& node_attribution(int index) const;
  ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution* add_node_attribution();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution >&
      node_attribution() const;

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference > from_link_refs_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference > to_link_refs_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution > node_attribution_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto;
};
// -------------------------------------------------------------------

class NodeAttribution final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.adas.NodeAttribution) */ {
 public:
  NodeAttribution();
  virtual ~NodeAttribution();

  NodeAttribution(const NodeAttribution& from);

  inline NodeAttribution& operator=(const NodeAttribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NodeAttribution(NodeAttribution&& from) noexcept
    : NodeAttribution() {
    *this = ::std::move(from);
  }

  inline NodeAttribution& operator=(NodeAttribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NodeAttribution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NodeAttribution* internal_default_instance() {
    return reinterpret_cast<const NodeAttribution*>(
               &_NodeAttribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(NodeAttribution* other);
  friend void swap(NodeAttribution& a, NodeAttribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NodeAttribution* New() const final {
    return CreateMaybeMessage<NodeAttribution>(nullptr);
  }

  NodeAttribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NodeAttribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NodeAttribution& from);
  void MergeFrom(const NodeAttribution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NodeAttribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NodeAttribution_IntersectionTraversalAttribution IntersectionTraversalAttribution;

  // accessors -------------------------------------------------------

  // repeated .com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution intersection_traversal_attribution = 2;
  int intersection_traversal_attribution_size() const;
  void clear_intersection_traversal_attribution();
  static const int kIntersectionTraversalAttributionFieldNumber = 2;
  ::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution* mutable_intersection_traversal_attribution(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution >*
      mutable_intersection_traversal_attribution();
  const ::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution& intersection_traversal_attribution(int index) const;
  ::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution* add_intersection_traversal_attribution();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution >&
      intersection_traversal_attribution() const;

  // uint32 node_id = 1;
  void clear_node_id();
  static const int kNodeIdFieldNumber = 1;
  ::google::protobuf::uint32 node_id() const;
  void set_node_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.adas.NodeAttribution)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution > intersection_traversal_attribution_;
  ::google::protobuf::uint32 node_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto;
};
// -------------------------------------------------------------------

class AdasLinkParametricAttribution final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.adas.AdasLinkParametricAttribution) */ {
 public:
  AdasLinkParametricAttribution();
  virtual ~AdasLinkParametricAttribution();

  AdasLinkParametricAttribution(const AdasLinkParametricAttribution& from);

  inline AdasLinkParametricAttribution& operator=(const AdasLinkParametricAttribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdasLinkParametricAttribution(AdasLinkParametricAttribution&& from) noexcept
    : AdasLinkParametricAttribution() {
    *this = ::std::move(from);
  }

  inline AdasLinkParametricAttribution& operator=(AdasLinkParametricAttribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AdasLinkParametricAttribution& default_instance();

  enum AttributeCase {
    kLinkGeometryAccuracy = 1,
    ATTRIBUTE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdasLinkParametricAttribution* internal_default_instance() {
    return reinterpret_cast<const AdasLinkParametricAttribution*>(
               &_AdasLinkParametricAttribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(AdasLinkParametricAttribution* other);
  friend void swap(AdasLinkParametricAttribution& a, AdasLinkParametricAttribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdasLinkParametricAttribution* New() const final {
    return CreateMaybeMessage<AdasLinkParametricAttribution>(nullptr);
  }

  AdasLinkParametricAttribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdasLinkParametricAttribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdasLinkParametricAttribution& from);
  void MergeFrom(const AdasLinkParametricAttribution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdasLinkParametricAttribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.here.pb.hdmap.external.v1.adas.LinkGeometryAccuracy link_geometry_accuracy = 1;
  private:
  bool has_link_geometry_accuracy() const;
  public:
  void clear_link_geometry_accuracy();
  static const int kLinkGeometryAccuracyFieldNumber = 1;
  ::com::here::pb::hdmap::external::v1::adas::LinkGeometryAccuracy link_geometry_accuracy() const;
  void set_link_geometry_accuracy(::com::here::pb::hdmap::external::v1::adas::LinkGeometryAccuracy value);

  void clear_attribute();
  AttributeCase attribute_case() const;
  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.adas.AdasLinkParametricAttribution)
 private:
  class HasBitSetters;
  void set_has_link_geometry_accuracy();

  inline bool has_attribute() const;
  inline void clear_has_attribute();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union AttributeUnion {
    AttributeUnion() {}
    int link_geometry_accuracy_;
  } attribute_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto;
};
// -------------------------------------------------------------------

class AdasLinkPointAttribution final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution) */ {
 public:
  AdasLinkPointAttribution();
  virtual ~AdasLinkPointAttribution();

  AdasLinkPointAttribution(const AdasLinkPointAttribution& from);

  inline AdasLinkPointAttribution& operator=(const AdasLinkPointAttribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdasLinkPointAttribution(AdasLinkPointAttribution&& from) noexcept
    : AdasLinkPointAttribution() {
    *this = ::std::move(from);
  }

  inline AdasLinkPointAttribution& operator=(AdasLinkPointAttribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AdasLinkPointAttribution& default_instance();

  enum AttributeCase {
    kLinkPointCurvature = 1,
    kLinkPointHeading = 2,
    kLinkPointSlope = 3,
    kLinkPointElevation = 4,
    ATTRIBUTE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdasLinkPointAttribution* internal_default_instance() {
    return reinterpret_cast<const AdasLinkPointAttribution*>(
               &_AdasLinkPointAttribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(AdasLinkPointAttribution* other);
  friend void swap(AdasLinkPointAttribution& a, AdasLinkPointAttribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdasLinkPointAttribution* New() const final {
    return CreateMaybeMessage<AdasLinkPointAttribution>(nullptr);
  }

  AdasLinkPointAttribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdasLinkPointAttribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdasLinkPointAttribution& from);
  void MergeFrom(const AdasLinkPointAttribution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdasLinkPointAttribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.here.pb.hdmap.shared.v1.adas.CurvatureMeasure link_point_curvature = 1;
  bool has_link_point_curvature() const;
  void clear_link_point_curvature();
  static const int kLinkPointCurvatureFieldNumber = 1;
  const ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure& link_point_curvature() const;
  ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* release_link_point_curvature();
  ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* mutable_link_point_curvature();
  void set_allocated_link_point_curvature(::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* link_point_curvature);

  // .com.here.pb.hdmap.shared.v1.adas.HeadingMeasure link_point_heading = 2;
  bool has_link_point_heading() const;
  void clear_link_point_heading();
  static const int kLinkPointHeadingFieldNumber = 2;
  const ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure& link_point_heading() const;
  ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* release_link_point_heading();
  ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* mutable_link_point_heading();
  void set_allocated_link_point_heading(::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* link_point_heading);

  // .com.here.pb.hdmap.external.v1.adas.AdasSlopeSample link_point_slope = 3;
  bool has_link_point_slope() const;
  void clear_link_point_slope();
  static const int kLinkPointSlopeFieldNumber = 3;
  const ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample& link_point_slope() const;
  ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* release_link_point_slope();
  ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* mutable_link_point_slope();
  void set_allocated_link_point_slope(::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* link_point_slope);

  // .com.here.pb.hdmap.external.v1.adas.AdasElevationSample link_point_elevation = 4;
  bool has_link_point_elevation() const;
  void clear_link_point_elevation();
  static const int kLinkPointElevationFieldNumber = 4;
  const ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample& link_point_elevation() const;
  ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* release_link_point_elevation();
  ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* mutable_link_point_elevation();
  void set_allocated_link_point_elevation(::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* link_point_elevation);

  void clear_attribute();
  AttributeCase attribute_case() const;
  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution)
 private:
  class HasBitSetters;
  void set_has_link_point_curvature();
  void set_has_link_point_heading();
  void set_has_link_point_slope();
  void set_has_link_point_elevation();

  inline bool has_attribute() const;
  inline void clear_has_attribute();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union AttributeUnion {
    AttributeUnion() {}
    ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* link_point_curvature_;
    ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* link_point_heading_;
    ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* link_point_slope_;
    ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* link_point_elevation_;
  } attribute_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto;
};
// -------------------------------------------------------------------

class AdasIntersectionTraversalAttribution final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution) */ {
 public:
  AdasIntersectionTraversalAttribution();
  virtual ~AdasIntersectionTraversalAttribution();

  AdasIntersectionTraversalAttribution(const AdasIntersectionTraversalAttribution& from);

  inline AdasIntersectionTraversalAttribution& operator=(const AdasIntersectionTraversalAttribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdasIntersectionTraversalAttribution(AdasIntersectionTraversalAttribution&& from) noexcept
    : AdasIntersectionTraversalAttribution() {
    *this = ::std::move(from);
  }

  inline AdasIntersectionTraversalAttribution& operator=(AdasIntersectionTraversalAttribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AdasIntersectionTraversalAttribution& default_instance();

  enum AttributeCase {
    kIntersectionTraversalValues = 1,
    kIntersectionExitSlope = 2,
    kIntersectionElevation = 3,
    ATTRIBUTE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdasIntersectionTraversalAttribution* internal_default_instance() {
    return reinterpret_cast<const AdasIntersectionTraversalAttribution*>(
               &_AdasIntersectionTraversalAttribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(AdasIntersectionTraversalAttribution* other);
  friend void swap(AdasIntersectionTraversalAttribution& a, AdasIntersectionTraversalAttribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdasIntersectionTraversalAttribution* New() const final {
    return CreateMaybeMessage<AdasIntersectionTraversalAttribution>(nullptr);
  }

  AdasIntersectionTraversalAttribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdasIntersectionTraversalAttribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdasIntersectionTraversalAttribution& from);
  void MergeFrom(const AdasIntersectionTraversalAttribution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdasIntersectionTraversalAttribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalValues intersection_traversal_values = 1;
  bool has_intersection_traversal_values() const;
  void clear_intersection_traversal_values();
  static const int kIntersectionTraversalValuesFieldNumber = 1;
  const ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues& intersection_traversal_values() const;
  ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues* release_intersection_traversal_values();
  ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues* mutable_intersection_traversal_values();
  void set_allocated_intersection_traversal_values(::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues* intersection_traversal_values);

  // .com.here.pb.hdmap.external.v1.adas.AdasSlopeSample intersection_exit_slope = 2;
  bool has_intersection_exit_slope() const;
  void clear_intersection_exit_slope();
  static const int kIntersectionExitSlopeFieldNumber = 2;
  const ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample& intersection_exit_slope() const;
  ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* release_intersection_exit_slope();
  ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* mutable_intersection_exit_slope();
  void set_allocated_intersection_exit_slope(::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* intersection_exit_slope);

  // .com.here.pb.hdmap.external.v1.adas.AdasElevationSample intersection_elevation = 3;
  bool has_intersection_elevation() const;
  void clear_intersection_elevation();
  static const int kIntersectionElevationFieldNumber = 3;
  const ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample& intersection_elevation() const;
  ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* release_intersection_elevation();
  ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* mutable_intersection_elevation();
  void set_allocated_intersection_elevation(::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* intersection_elevation);

  void clear_attribute();
  AttributeCase attribute_case() const;
  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution)
 private:
  class HasBitSetters;
  void set_has_intersection_traversal_values();
  void set_has_intersection_exit_slope();
  void set_has_intersection_elevation();

  inline bool has_attribute() const;
  inline void clear_has_attribute();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union AttributeUnion {
    AttributeUnion() {}
    ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues* intersection_traversal_values_;
    ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* intersection_exit_slope_;
    ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* intersection_elevation_;
  } attribute_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto;
};
// -------------------------------------------------------------------

class AdasIntersectionTraversalValues final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalValues) */ {
 public:
  AdasIntersectionTraversalValues();
  virtual ~AdasIntersectionTraversalValues();

  AdasIntersectionTraversalValues(const AdasIntersectionTraversalValues& from);

  inline AdasIntersectionTraversalValues& operator=(const AdasIntersectionTraversalValues& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdasIntersectionTraversalValues(AdasIntersectionTraversalValues&& from) noexcept
    : AdasIntersectionTraversalValues() {
    *this = ::std::move(from);
  }

  inline AdasIntersectionTraversalValues& operator=(AdasIntersectionTraversalValues&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AdasIntersectionTraversalValues& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdasIntersectionTraversalValues* internal_default_instance() {
    return reinterpret_cast<const AdasIntersectionTraversalValues*>(
               &_AdasIntersectionTraversalValues_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(AdasIntersectionTraversalValues* other);
  friend void swap(AdasIntersectionTraversalValues& a, AdasIntersectionTraversalValues& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdasIntersectionTraversalValues* New() const final {
    return CreateMaybeMessage<AdasIntersectionTraversalValues>(nullptr);
  }

  AdasIntersectionTraversalValues* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdasIntersectionTraversalValues>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdasIntersectionTraversalValues& from);
  void MergeFrom(const AdasIntersectionTraversalValues& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdasIntersectionTraversalValues* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.here.pb.hdmap.shared.v1.adas.CurvatureMeasure curvature = 1;
  bool has_curvature() const;
  void clear_curvature();
  static const int kCurvatureFieldNumber = 1;
  const ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure& curvature() const;
  ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* release_curvature();
  ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* mutable_curvature();
  void set_allocated_curvature(::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* curvature);

  // .com.here.pb.hdmap.shared.v1.adas.HeadingMeasure heading = 2;
  bool has_heading() const;
  void clear_heading();
  static const int kHeadingFieldNumber = 2;
  const ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure& heading() const;
  ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* release_heading();
  ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* mutable_heading();
  void set_allocated_heading(::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* heading);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalValues)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* curvature_;
  ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* heading_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto;
};
// -------------------------------------------------------------------

class AdasSlopeSample final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.adas.AdasSlopeSample) */ {
 public:
  AdasSlopeSample();
  virtual ~AdasSlopeSample();

  AdasSlopeSample(const AdasSlopeSample& from);

  inline AdasSlopeSample& operator=(const AdasSlopeSample& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdasSlopeSample(AdasSlopeSample&& from) noexcept
    : AdasSlopeSample() {
    *this = ::std::move(from);
  }

  inline AdasSlopeSample& operator=(AdasSlopeSample&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AdasSlopeSample& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdasSlopeSample* internal_default_instance() {
    return reinterpret_cast<const AdasSlopeSample*>(
               &_AdasSlopeSample_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(AdasSlopeSample* other);
  friend void swap(AdasSlopeSample& a, AdasSlopeSample& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdasSlopeSample* New() const final {
    return CreateMaybeMessage<AdasSlopeSample>(nullptr);
  }

  AdasSlopeSample* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdasSlopeSample>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdasSlopeSample& from);
  void MergeFrom(const AdasSlopeSample& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdasSlopeSample* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.here.pb.hdmap.shared.v1.adas.SlopeMeasure slope = 1;
  bool has_slope() const;
  void clear_slope();
  static const int kSlopeFieldNumber = 1;
  const ::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure& slope() const;
  ::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure* release_slope();
  ::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure* mutable_slope();
  void set_allocated_slope(::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure* slope);

  // .com.here.pb.hdmap.external.v1.adas.SlopeElevationAccuracy accuracy = 2;
  void clear_accuracy();
  static const int kAccuracyFieldNumber = 2;
  ::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy accuracy() const;
  void set_accuracy(::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.adas.AdasSlopeSample)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure* slope_;
  int accuracy_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto;
};
// -------------------------------------------------------------------

class AdasElevationSample final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.adas.AdasElevationSample) */ {
 public:
  AdasElevationSample();
  virtual ~AdasElevationSample();

  AdasElevationSample(const AdasElevationSample& from);

  inline AdasElevationSample& operator=(const AdasElevationSample& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdasElevationSample(AdasElevationSample&& from) noexcept
    : AdasElevationSample() {
    *this = ::std::move(from);
  }

  inline AdasElevationSample& operator=(AdasElevationSample&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AdasElevationSample& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdasElevationSample* internal_default_instance() {
    return reinterpret_cast<const AdasElevationSample*>(
               &_AdasElevationSample_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(AdasElevationSample* other);
  friend void swap(AdasElevationSample& a, AdasElevationSample& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdasElevationSample* New() const final {
    return CreateMaybeMessage<AdasElevationSample>(nullptr);
  }

  AdasElevationSample* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdasElevationSample>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdasElevationSample& from);
  void MergeFrom(const AdasElevationSample& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdasElevationSample* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.here.pb.hdmap.shared.v1.adas.ElevationMeasure elevation = 1;
  bool has_elevation() const;
  void clear_elevation();
  static const int kElevationFieldNumber = 1;
  const ::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure& elevation() const;
  ::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure* release_elevation();
  ::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure* mutable_elevation();
  void set_allocated_elevation(::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure* elevation);

  // .com.here.pb.hdmap.external.v1.adas.SlopeElevationAccuracy accuracy = 2;
  void clear_accuracy();
  static const int kAccuracyFieldNumber = 2;
  ::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy accuracy() const;
  void set_accuracy(::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.adas.AdasElevationSample)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure* elevation_;
  int accuracy_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AdasAttributesLayerTile

// uint32 here_tile_id = 1;
inline void AdasAttributesLayerTile::clear_here_tile_id() {
  here_tile_id_ = 0u;
}
inline ::google::protobuf::uint32 AdasAttributesLayerTile::here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile.here_tile_id)
  return here_tile_id_;
}
inline void AdasAttributesLayerTile::set_here_tile_id(::google::protobuf::uint32 value) {
  
  here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile.here_tile_id)
}

// repeated .com.here.pb.hdmap.external.v1.adas.LinkAttribution link_attribution = 2;
inline int AdasAttributesLayerTile::link_attribution_size() const {
  return link_attribution_.size();
}
inline void AdasAttributesLayerTile::clear_link_attribution() {
  link_attribution_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::adas::LinkAttribution* AdasAttributesLayerTile::mutable_link_attribution(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile.link_attribution)
  return link_attribution_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution >*
AdasAttributesLayerTile::mutable_link_attribution() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile.link_attribution)
  return &link_attribution_;
}
inline const ::com::here::pb::hdmap::external::v1::adas::LinkAttribution& AdasAttributesLayerTile::link_attribution(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile.link_attribution)
  return link_attribution_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::adas::LinkAttribution* AdasAttributesLayerTile::add_link_attribution() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile.link_attribution)
  return link_attribution_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution >&
AdasAttributesLayerTile::link_attribution() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile.link_attribution)
  return link_attribution_;
}

// repeated .com.here.pb.hdmap.external.v1.adas.NodeAttribution node_attribution = 3;
inline int AdasAttributesLayerTile::node_attribution_size() const {
  return node_attribution_.size();
}
inline void AdasAttributesLayerTile::clear_node_attribution() {
  node_attribution_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::adas::NodeAttribution* AdasAttributesLayerTile::mutable_node_attribution(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile.node_attribution)
  return node_attribution_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::NodeAttribution >*
AdasAttributesLayerTile::mutable_node_attribution() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile.node_attribution)
  return &node_attribution_;
}
inline const ::com::here::pb::hdmap::external::v1::adas::NodeAttribution& AdasAttributesLayerTile::node_attribution(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile.node_attribution)
  return node_attribution_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::adas::NodeAttribution* AdasAttributesLayerTile::add_node_attribution() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile.node_attribution)
  return node_attribution_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::NodeAttribution >&
AdasAttributesLayerTile::node_attribution() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.adas.AdasAttributesLayerTile.node_attribution)
  return node_attribution_;
}

// -------------------------------------------------------------------

// LinkAttribution_ParametricAttribution

// .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_range = 1;
inline bool LinkAttribution_ParametricAttribution::has_applies_to_range() const {
  return this != internal_default_instance() && applies_to_range_ != nullptr;
}
inline const ::com::here::pb::hdmap::external::v1::common::ParametricRange& LinkAttribution_ParametricAttribution::applies_to_range() const {
  const ::com::here::pb::hdmap::external::v1::common::ParametricRange* p = applies_to_range_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution.applies_to_range)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::common::ParametricRange*>(
      &::com::here::pb::hdmap::external::v1::common::_ParametricRange_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::common::ParametricRange* LinkAttribution_ParametricAttribution::release_applies_to_range() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution.applies_to_range)
  
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* temp = applies_to_range_;
  applies_to_range_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::external::v1::common::ParametricRange* LinkAttribution_ParametricAttribution::mutable_applies_to_range() {
  
  if (applies_to_range_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::ParametricRange>(GetArenaNoVirtual());
    applies_to_range_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution.applies_to_range)
  return applies_to_range_;
}
inline void LinkAttribution_ParametricAttribution::set_allocated_applies_to_range(::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(applies_to_range_);
  }
  if (applies_to_range) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      applies_to_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, applies_to_range, submessage_arena);
    }
    
  } else {
    
  }
  applies_to_range_ = applies_to_range;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution.applies_to_range)
}

// .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
inline void LinkAttribution_ParametricAttribution::clear_applies_to_direction() {
  applies_to_direction_ = 0;
}
inline ::com::here::pb::hdmap::external::v1::common::RelativeDirection LinkAttribution_ParametricAttribution::applies_to_direction() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution.applies_to_direction)
  return static_cast< ::com::here::pb::hdmap::external::v1::common::RelativeDirection >(applies_to_direction_);
}
inline void LinkAttribution_ParametricAttribution::set_applies_to_direction(::com::here::pb::hdmap::external::v1::common::RelativeDirection value) {
  
  applies_to_direction_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution.applies_to_direction)
}

// repeated .com.here.pb.hdmap.external.v1.adas.AdasLinkParametricAttribution link_parametric_attribution = 3;
inline int LinkAttribution_ParametricAttribution::link_parametric_attribution_size() const {
  return link_parametric_attribution_.size();
}
inline void LinkAttribution_ParametricAttribution::clear_link_parametric_attribution() {
  link_parametric_attribution_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution* LinkAttribution_ParametricAttribution::mutable_link_parametric_attribution(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution.link_parametric_attribution)
  return link_parametric_attribution_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution >*
LinkAttribution_ParametricAttribution::mutable_link_parametric_attribution() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution.link_parametric_attribution)
  return &link_parametric_attribution_;
}
inline const ::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution& LinkAttribution_ParametricAttribution::link_parametric_attribution(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution.link_parametric_attribution)
  return link_parametric_attribution_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution* LinkAttribution_ParametricAttribution::add_link_parametric_attribution() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution.link_parametric_attribution)
  return link_parametric_attribution_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasLinkParametricAttribution >&
LinkAttribution_ParametricAttribution::link_parametric_attribution() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution.link_parametric_attribution)
  return link_parametric_attribution_;
}

// -------------------------------------------------------------------

// LinkAttribution_PointAttribution

// double applies_to_location = 1;
inline void LinkAttribution_PointAttribution::clear_applies_to_location() {
  applies_to_location_ = 0;
}
inline double LinkAttribution_PointAttribution::applies_to_location() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution.applies_to_location)
  return applies_to_location_;
}
inline void LinkAttribution_PointAttribution::set_applies_to_location(double value) {
  
  applies_to_location_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution.applies_to_location)
}

// .com.here.pb.hdmap.external.v1.common.RelativeDirection applies_to_direction = 2;
inline void LinkAttribution_PointAttribution::clear_applies_to_direction() {
  applies_to_direction_ = 0;
}
inline ::com::here::pb::hdmap::external::v1::common::RelativeDirection LinkAttribution_PointAttribution::applies_to_direction() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution.applies_to_direction)
  return static_cast< ::com::here::pb::hdmap::external::v1::common::RelativeDirection >(applies_to_direction_);
}
inline void LinkAttribution_PointAttribution::set_applies_to_direction(::com::here::pb::hdmap::external::v1::common::RelativeDirection value) {
  
  applies_to_direction_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution.applies_to_direction)
}

// repeated .com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution link_point_attribution = 3;
inline int LinkAttribution_PointAttribution::link_point_attribution_size() const {
  return link_point_attribution_.size();
}
inline void LinkAttribution_PointAttribution::clear_link_point_attribution() {
  link_point_attribution_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution* LinkAttribution_PointAttribution::mutable_link_point_attribution(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution.link_point_attribution)
  return link_point_attribution_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution >*
LinkAttribution_PointAttribution::mutable_link_point_attribution() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution.link_point_attribution)
  return &link_point_attribution_;
}
inline const ::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution& LinkAttribution_PointAttribution::link_point_attribution(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution.link_point_attribution)
  return link_point_attribution_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution* LinkAttribution_PointAttribution::add_link_point_attribution() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution.link_point_attribution)
  return link_point_attribution_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasLinkPointAttribution >&
LinkAttribution_PointAttribution::link_point_attribution() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution.link_point_attribution)
  return link_point_attribution_;
}

// -------------------------------------------------------------------

// LinkAttribution

// uint32 link_id = 1;
inline void LinkAttribution::clear_link_id() {
  link_id_ = 0u;
}
inline ::google::protobuf::uint32 LinkAttribution::link_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.LinkAttribution.link_id)
  return link_id_;
}
inline void LinkAttribution::set_link_id(::google::protobuf::uint32 value) {
  
  link_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.adas.LinkAttribution.link_id)
}

// repeated .com.here.pb.hdmap.external.v1.adas.LinkAttribution.ParametricAttribution parametric_attribution = 2;
inline int LinkAttribution::parametric_attribution_size() const {
  return parametric_attribution_.size();
}
inline void LinkAttribution::clear_parametric_attribution() {
  parametric_attribution_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution* LinkAttribution::mutable_parametric_attribution(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.LinkAttribution.parametric_attribution)
  return parametric_attribution_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution >*
LinkAttribution::mutable_parametric_attribution() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.adas.LinkAttribution.parametric_attribution)
  return &parametric_attribution_;
}
inline const ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution& LinkAttribution::parametric_attribution(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.LinkAttribution.parametric_attribution)
  return parametric_attribution_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution* LinkAttribution::add_parametric_attribution() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.adas.LinkAttribution.parametric_attribution)
  return parametric_attribution_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_ParametricAttribution >&
LinkAttribution::parametric_attribution() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.adas.LinkAttribution.parametric_attribution)
  return parametric_attribution_;
}

// repeated .com.here.pb.hdmap.external.v1.adas.LinkAttribution.PointAttribution point_attribution = 3;
inline int LinkAttribution::point_attribution_size() const {
  return point_attribution_.size();
}
inline void LinkAttribution::clear_point_attribution() {
  point_attribution_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution* LinkAttribution::mutable_point_attribution(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.LinkAttribution.point_attribution)
  return point_attribution_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution >*
LinkAttribution::mutable_point_attribution() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.adas.LinkAttribution.point_attribution)
  return &point_attribution_;
}
inline const ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution& LinkAttribution::point_attribution(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.LinkAttribution.point_attribution)
  return point_attribution_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution* LinkAttribution::add_point_attribution() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.adas.LinkAttribution.point_attribution)
  return point_attribution_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::LinkAttribution_PointAttribution >&
LinkAttribution::point_attribution() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.adas.LinkAttribution.point_attribution)
  return point_attribution_;
}

// -------------------------------------------------------------------

// NodeAttribution_IntersectionTraversalAttribution

// repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference from_link_refs = 1;
inline int NodeAttribution_IntersectionTraversalAttribution::from_link_refs_size() const {
  return from_link_refs_.size();
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* NodeAttribution_IntersectionTraversalAttribution::mutable_from_link_refs(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.from_link_refs)
  return from_link_refs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference >*
NodeAttribution_IntersectionTraversalAttribution::mutable_from_link_refs() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.from_link_refs)
  return &from_link_refs_;
}
inline const ::com::here::pb::hdmap::external::v1::common::TiledLinkReference& NodeAttribution_IntersectionTraversalAttribution::from_link_refs(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.from_link_refs)
  return from_link_refs_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* NodeAttribution_IntersectionTraversalAttribution::add_from_link_refs() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.from_link_refs)
  return from_link_refs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference >&
NodeAttribution_IntersectionTraversalAttribution::from_link_refs() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.from_link_refs)
  return from_link_refs_;
}

// repeated .com.here.pb.hdmap.external.v1.common.TiledLinkReference to_link_refs = 2;
inline int NodeAttribution_IntersectionTraversalAttribution::to_link_refs_size() const {
  return to_link_refs_.size();
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* NodeAttribution_IntersectionTraversalAttribution::mutable_to_link_refs(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.to_link_refs)
  return to_link_refs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference >*
NodeAttribution_IntersectionTraversalAttribution::mutable_to_link_refs() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.to_link_refs)
  return &to_link_refs_;
}
inline const ::com::here::pb::hdmap::external::v1::common::TiledLinkReference& NodeAttribution_IntersectionTraversalAttribution::to_link_refs(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.to_link_refs)
  return to_link_refs_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* NodeAttribution_IntersectionTraversalAttribution::add_to_link_refs() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.to_link_refs)
  return to_link_refs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference >&
NodeAttribution_IntersectionTraversalAttribution::to_link_refs() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.to_link_refs)
  return to_link_refs_;
}

// repeated .com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution node_attribution = 3;
inline int NodeAttribution_IntersectionTraversalAttribution::node_attribution_size() const {
  return node_attribution_.size();
}
inline void NodeAttribution_IntersectionTraversalAttribution::clear_node_attribution() {
  node_attribution_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution* NodeAttribution_IntersectionTraversalAttribution::mutable_node_attribution(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.node_attribution)
  return node_attribution_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution >*
NodeAttribution_IntersectionTraversalAttribution::mutable_node_attribution() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.node_attribution)
  return &node_attribution_;
}
inline const ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution& NodeAttribution_IntersectionTraversalAttribution::node_attribution(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.node_attribution)
  return node_attribution_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution* NodeAttribution_IntersectionTraversalAttribution::add_node_attribution() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.node_attribution)
  return node_attribution_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalAttribution >&
NodeAttribution_IntersectionTraversalAttribution::node_attribution() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution.node_attribution)
  return node_attribution_;
}

// -------------------------------------------------------------------

// NodeAttribution

// uint32 node_id = 1;
inline void NodeAttribution::clear_node_id() {
  node_id_ = 0u;
}
inline ::google::protobuf::uint32 NodeAttribution::node_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.NodeAttribution.node_id)
  return node_id_;
}
inline void NodeAttribution::set_node_id(::google::protobuf::uint32 value) {
  
  node_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.adas.NodeAttribution.node_id)
}

// repeated .com.here.pb.hdmap.external.v1.adas.NodeAttribution.IntersectionTraversalAttribution intersection_traversal_attribution = 2;
inline int NodeAttribution::intersection_traversal_attribution_size() const {
  return intersection_traversal_attribution_.size();
}
inline void NodeAttribution::clear_intersection_traversal_attribution() {
  intersection_traversal_attribution_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution* NodeAttribution::mutable_intersection_traversal_attribution(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.NodeAttribution.intersection_traversal_attribution)
  return intersection_traversal_attribution_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution >*
NodeAttribution::mutable_intersection_traversal_attribution() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.adas.NodeAttribution.intersection_traversal_attribution)
  return &intersection_traversal_attribution_;
}
inline const ::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution& NodeAttribution::intersection_traversal_attribution(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.NodeAttribution.intersection_traversal_attribution)
  return intersection_traversal_attribution_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution* NodeAttribution::add_intersection_traversal_attribution() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.adas.NodeAttribution.intersection_traversal_attribution)
  return intersection_traversal_attribution_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::adas::NodeAttribution_IntersectionTraversalAttribution >&
NodeAttribution::intersection_traversal_attribution() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.adas.NodeAttribution.intersection_traversal_attribution)
  return intersection_traversal_attribution_;
}

// -------------------------------------------------------------------

// AdasLinkParametricAttribution

// .com.here.pb.hdmap.external.v1.adas.LinkGeometryAccuracy link_geometry_accuracy = 1;
inline bool AdasLinkParametricAttribution::has_link_geometry_accuracy() const {
  return attribute_case() == kLinkGeometryAccuracy;
}
inline void AdasLinkParametricAttribution::set_has_link_geometry_accuracy() {
  _oneof_case_[0] = kLinkGeometryAccuracy;
}
inline void AdasLinkParametricAttribution::clear_link_geometry_accuracy() {
  if (has_link_geometry_accuracy()) {
    attribute_.link_geometry_accuracy_ = 0;
    clear_has_attribute();
  }
}
inline ::com::here::pb::hdmap::external::v1::adas::LinkGeometryAccuracy AdasLinkParametricAttribution::link_geometry_accuracy() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasLinkParametricAttribution.link_geometry_accuracy)
  if (has_link_geometry_accuracy()) {
    return static_cast< ::com::here::pb::hdmap::external::v1::adas::LinkGeometryAccuracy >(attribute_.link_geometry_accuracy_);
  }
  return static_cast< ::com::here::pb::hdmap::external::v1::adas::LinkGeometryAccuracy >(0);
}
inline void AdasLinkParametricAttribution::set_link_geometry_accuracy(::com::here::pb::hdmap::external::v1::adas::LinkGeometryAccuracy value) {
  if (!has_link_geometry_accuracy()) {
    clear_attribute();
    set_has_link_geometry_accuracy();
  }
  attribute_.link_geometry_accuracy_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.adas.AdasLinkParametricAttribution.link_geometry_accuracy)
}

inline bool AdasLinkParametricAttribution::has_attribute() const {
  return attribute_case() != ATTRIBUTE_NOT_SET;
}
inline void AdasLinkParametricAttribution::clear_has_attribute() {
  _oneof_case_[0] = ATTRIBUTE_NOT_SET;
}
inline AdasLinkParametricAttribution::AttributeCase AdasLinkParametricAttribution::attribute_case() const {
  return AdasLinkParametricAttribution::AttributeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AdasLinkPointAttribution

// .com.here.pb.hdmap.shared.v1.adas.CurvatureMeasure link_point_curvature = 1;
inline bool AdasLinkPointAttribution::has_link_point_curvature() const {
  return attribute_case() == kLinkPointCurvature;
}
inline void AdasLinkPointAttribution::set_has_link_point_curvature() {
  _oneof_case_[0] = kLinkPointCurvature;
}
inline ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* AdasLinkPointAttribution::release_link_point_curvature() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution.link_point_curvature)
  if (has_link_point_curvature()) {
    clear_has_attribute();
      ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* temp = attribute_.link_point_curvature_;
    attribute_.link_point_curvature_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure& AdasLinkPointAttribution::link_point_curvature() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution.link_point_curvature)
  return has_link_point_curvature()
      ? *attribute_.link_point_curvature_
      : *reinterpret_cast< ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure*>(&::com::here::pb::hdmap::shared::v1::adas::_CurvatureMeasure_default_instance_);
}
inline ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* AdasLinkPointAttribution::mutable_link_point_curvature() {
  if (!has_link_point_curvature()) {
    clear_attribute();
    set_has_link_point_curvature();
    attribute_.link_point_curvature_ = CreateMaybeMessage< ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution.link_point_curvature)
  return attribute_.link_point_curvature_;
}

// .com.here.pb.hdmap.shared.v1.adas.HeadingMeasure link_point_heading = 2;
inline bool AdasLinkPointAttribution::has_link_point_heading() const {
  return attribute_case() == kLinkPointHeading;
}
inline void AdasLinkPointAttribution::set_has_link_point_heading() {
  _oneof_case_[0] = kLinkPointHeading;
}
inline ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* AdasLinkPointAttribution::release_link_point_heading() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution.link_point_heading)
  if (has_link_point_heading()) {
    clear_has_attribute();
      ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* temp = attribute_.link_point_heading_;
    attribute_.link_point_heading_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure& AdasLinkPointAttribution::link_point_heading() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution.link_point_heading)
  return has_link_point_heading()
      ? *attribute_.link_point_heading_
      : *reinterpret_cast< ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure*>(&::com::here::pb::hdmap::shared::v1::adas::_HeadingMeasure_default_instance_);
}
inline ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* AdasLinkPointAttribution::mutable_link_point_heading() {
  if (!has_link_point_heading()) {
    clear_attribute();
    set_has_link_point_heading();
    attribute_.link_point_heading_ = CreateMaybeMessage< ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution.link_point_heading)
  return attribute_.link_point_heading_;
}

// .com.here.pb.hdmap.external.v1.adas.AdasSlopeSample link_point_slope = 3;
inline bool AdasLinkPointAttribution::has_link_point_slope() const {
  return attribute_case() == kLinkPointSlope;
}
inline void AdasLinkPointAttribution::set_has_link_point_slope() {
  _oneof_case_[0] = kLinkPointSlope;
}
inline void AdasLinkPointAttribution::clear_link_point_slope() {
  if (has_link_point_slope()) {
    delete attribute_.link_point_slope_;
    clear_has_attribute();
  }
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* AdasLinkPointAttribution::release_link_point_slope() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution.link_point_slope)
  if (has_link_point_slope()) {
    clear_has_attribute();
      ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* temp = attribute_.link_point_slope_;
    attribute_.link_point_slope_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample& AdasLinkPointAttribution::link_point_slope() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution.link_point_slope)
  return has_link_point_slope()
      ? *attribute_.link_point_slope_
      : *reinterpret_cast< ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample*>(&::com::here::pb::hdmap::external::v1::adas::_AdasSlopeSample_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* AdasLinkPointAttribution::mutable_link_point_slope() {
  if (!has_link_point_slope()) {
    clear_attribute();
    set_has_link_point_slope();
    attribute_.link_point_slope_ = CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution.link_point_slope)
  return attribute_.link_point_slope_;
}

// .com.here.pb.hdmap.external.v1.adas.AdasElevationSample link_point_elevation = 4;
inline bool AdasLinkPointAttribution::has_link_point_elevation() const {
  return attribute_case() == kLinkPointElevation;
}
inline void AdasLinkPointAttribution::set_has_link_point_elevation() {
  _oneof_case_[0] = kLinkPointElevation;
}
inline void AdasLinkPointAttribution::clear_link_point_elevation() {
  if (has_link_point_elevation()) {
    delete attribute_.link_point_elevation_;
    clear_has_attribute();
  }
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* AdasLinkPointAttribution::release_link_point_elevation() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution.link_point_elevation)
  if (has_link_point_elevation()) {
    clear_has_attribute();
      ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* temp = attribute_.link_point_elevation_;
    attribute_.link_point_elevation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample& AdasLinkPointAttribution::link_point_elevation() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution.link_point_elevation)
  return has_link_point_elevation()
      ? *attribute_.link_point_elevation_
      : *reinterpret_cast< ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample*>(&::com::here::pb::hdmap::external::v1::adas::_AdasElevationSample_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* AdasLinkPointAttribution::mutable_link_point_elevation() {
  if (!has_link_point_elevation()) {
    clear_attribute();
    set_has_link_point_elevation();
    attribute_.link_point_elevation_ = CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasLinkPointAttribution.link_point_elevation)
  return attribute_.link_point_elevation_;
}

inline bool AdasLinkPointAttribution::has_attribute() const {
  return attribute_case() != ATTRIBUTE_NOT_SET;
}
inline void AdasLinkPointAttribution::clear_has_attribute() {
  _oneof_case_[0] = ATTRIBUTE_NOT_SET;
}
inline AdasLinkPointAttribution::AttributeCase AdasLinkPointAttribution::attribute_case() const {
  return AdasLinkPointAttribution::AttributeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AdasIntersectionTraversalAttribution

// .com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalValues intersection_traversal_values = 1;
inline bool AdasIntersectionTraversalAttribution::has_intersection_traversal_values() const {
  return attribute_case() == kIntersectionTraversalValues;
}
inline void AdasIntersectionTraversalAttribution::set_has_intersection_traversal_values() {
  _oneof_case_[0] = kIntersectionTraversalValues;
}
inline void AdasIntersectionTraversalAttribution::clear_intersection_traversal_values() {
  if (has_intersection_traversal_values()) {
    delete attribute_.intersection_traversal_values_;
    clear_has_attribute();
  }
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues* AdasIntersectionTraversalAttribution::release_intersection_traversal_values() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution.intersection_traversal_values)
  if (has_intersection_traversal_values()) {
    clear_has_attribute();
      ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues* temp = attribute_.intersection_traversal_values_;
    attribute_.intersection_traversal_values_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues& AdasIntersectionTraversalAttribution::intersection_traversal_values() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution.intersection_traversal_values)
  return has_intersection_traversal_values()
      ? *attribute_.intersection_traversal_values_
      : *reinterpret_cast< ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues*>(&::com::here::pb::hdmap::external::v1::adas::_AdasIntersectionTraversalValues_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues* AdasIntersectionTraversalAttribution::mutable_intersection_traversal_values() {
  if (!has_intersection_traversal_values()) {
    clear_attribute();
    set_has_intersection_traversal_values();
    attribute_.intersection_traversal_values_ = CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::adas::AdasIntersectionTraversalValues >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution.intersection_traversal_values)
  return attribute_.intersection_traversal_values_;
}

// .com.here.pb.hdmap.external.v1.adas.AdasSlopeSample intersection_exit_slope = 2;
inline bool AdasIntersectionTraversalAttribution::has_intersection_exit_slope() const {
  return attribute_case() == kIntersectionExitSlope;
}
inline void AdasIntersectionTraversalAttribution::set_has_intersection_exit_slope() {
  _oneof_case_[0] = kIntersectionExitSlope;
}
inline void AdasIntersectionTraversalAttribution::clear_intersection_exit_slope() {
  if (has_intersection_exit_slope()) {
    delete attribute_.intersection_exit_slope_;
    clear_has_attribute();
  }
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* AdasIntersectionTraversalAttribution::release_intersection_exit_slope() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution.intersection_exit_slope)
  if (has_intersection_exit_slope()) {
    clear_has_attribute();
      ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* temp = attribute_.intersection_exit_slope_;
    attribute_.intersection_exit_slope_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample& AdasIntersectionTraversalAttribution::intersection_exit_slope() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution.intersection_exit_slope)
  return has_intersection_exit_slope()
      ? *attribute_.intersection_exit_slope_
      : *reinterpret_cast< ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample*>(&::com::here::pb::hdmap::external::v1::adas::_AdasSlopeSample_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample* AdasIntersectionTraversalAttribution::mutable_intersection_exit_slope() {
  if (!has_intersection_exit_slope()) {
    clear_attribute();
    set_has_intersection_exit_slope();
    attribute_.intersection_exit_slope_ = CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::adas::AdasSlopeSample >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution.intersection_exit_slope)
  return attribute_.intersection_exit_slope_;
}

// .com.here.pb.hdmap.external.v1.adas.AdasElevationSample intersection_elevation = 3;
inline bool AdasIntersectionTraversalAttribution::has_intersection_elevation() const {
  return attribute_case() == kIntersectionElevation;
}
inline void AdasIntersectionTraversalAttribution::set_has_intersection_elevation() {
  _oneof_case_[0] = kIntersectionElevation;
}
inline void AdasIntersectionTraversalAttribution::clear_intersection_elevation() {
  if (has_intersection_elevation()) {
    delete attribute_.intersection_elevation_;
    clear_has_attribute();
  }
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* AdasIntersectionTraversalAttribution::release_intersection_elevation() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution.intersection_elevation)
  if (has_intersection_elevation()) {
    clear_has_attribute();
      ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* temp = attribute_.intersection_elevation_;
    attribute_.intersection_elevation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample& AdasIntersectionTraversalAttribution::intersection_elevation() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution.intersection_elevation)
  return has_intersection_elevation()
      ? *attribute_.intersection_elevation_
      : *reinterpret_cast< ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample*>(&::com::here::pb::hdmap::external::v1::adas::_AdasElevationSample_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample* AdasIntersectionTraversalAttribution::mutable_intersection_elevation() {
  if (!has_intersection_elevation()) {
    clear_attribute();
    set_has_intersection_elevation();
    attribute_.intersection_elevation_ = CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::adas::AdasElevationSample >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalAttribution.intersection_elevation)
  return attribute_.intersection_elevation_;
}

inline bool AdasIntersectionTraversalAttribution::has_attribute() const {
  return attribute_case() != ATTRIBUTE_NOT_SET;
}
inline void AdasIntersectionTraversalAttribution::clear_has_attribute() {
  _oneof_case_[0] = ATTRIBUTE_NOT_SET;
}
inline AdasIntersectionTraversalAttribution::AttributeCase AdasIntersectionTraversalAttribution::attribute_case() const {
  return AdasIntersectionTraversalAttribution::AttributeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AdasIntersectionTraversalValues

// .com.here.pb.hdmap.shared.v1.adas.CurvatureMeasure curvature = 1;
inline bool AdasIntersectionTraversalValues::has_curvature() const {
  return this != internal_default_instance() && curvature_ != nullptr;
}
inline const ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure& AdasIntersectionTraversalValues::curvature() const {
  const ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* p = curvature_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalValues.curvature)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure*>(
      &::com::here::pb::hdmap::shared::v1::adas::_CurvatureMeasure_default_instance_);
}
inline ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* AdasIntersectionTraversalValues::release_curvature() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalValues.curvature)
  
  ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* temp = curvature_;
  curvature_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* AdasIntersectionTraversalValues::mutable_curvature() {
  
  if (curvature_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure>(GetArenaNoVirtual());
    curvature_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalValues.curvature)
  return curvature_;
}
inline void AdasIntersectionTraversalValues::set_allocated_curvature(::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* curvature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(curvature_);
  }
  if (curvature) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      curvature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, curvature, submessage_arena);
    }
    
  } else {
    
  }
  curvature_ = curvature;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalValues.curvature)
}

// .com.here.pb.hdmap.shared.v1.adas.HeadingMeasure heading = 2;
inline bool AdasIntersectionTraversalValues::has_heading() const {
  return this != internal_default_instance() && heading_ != nullptr;
}
inline const ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure& AdasIntersectionTraversalValues::heading() const {
  const ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* p = heading_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalValues.heading)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure*>(
      &::com::here::pb::hdmap::shared::v1::adas::_HeadingMeasure_default_instance_);
}
inline ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* AdasIntersectionTraversalValues::release_heading() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalValues.heading)
  
  ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* temp = heading_;
  heading_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* AdasIntersectionTraversalValues::mutable_heading() {
  
  if (heading_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure>(GetArenaNoVirtual());
    heading_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalValues.heading)
  return heading_;
}
inline void AdasIntersectionTraversalValues::set_allocated_heading(::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* heading) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(heading_);
  }
  if (heading) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      heading = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, heading, submessage_arena);
    }
    
  } else {
    
  }
  heading_ = heading;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.adas.AdasIntersectionTraversalValues.heading)
}

// -------------------------------------------------------------------

// AdasSlopeSample

// .com.here.pb.hdmap.shared.v1.adas.SlopeMeasure slope = 1;
inline bool AdasSlopeSample::has_slope() const {
  return this != internal_default_instance() && slope_ != nullptr;
}
inline const ::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure& AdasSlopeSample::slope() const {
  const ::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure* p = slope_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasSlopeSample.slope)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure*>(
      &::com::here::pb::hdmap::shared::v1::adas::_SlopeMeasure_default_instance_);
}
inline ::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure* AdasSlopeSample::release_slope() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.adas.AdasSlopeSample.slope)
  
  ::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure* temp = slope_;
  slope_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure* AdasSlopeSample::mutable_slope() {
  
  if (slope_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure>(GetArenaNoVirtual());
    slope_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasSlopeSample.slope)
  return slope_;
}
inline void AdasSlopeSample::set_allocated_slope(::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure* slope) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(slope_);
  }
  if (slope) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      slope = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, slope, submessage_arena);
    }
    
  } else {
    
  }
  slope_ = slope;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.adas.AdasSlopeSample.slope)
}

// .com.here.pb.hdmap.external.v1.adas.SlopeElevationAccuracy accuracy = 2;
inline void AdasSlopeSample::clear_accuracy() {
  accuracy_ = 0;
}
inline ::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy AdasSlopeSample::accuracy() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasSlopeSample.accuracy)
  return static_cast< ::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy >(accuracy_);
}
inline void AdasSlopeSample::set_accuracy(::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy value) {
  
  accuracy_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.adas.AdasSlopeSample.accuracy)
}

// -------------------------------------------------------------------

// AdasElevationSample

// .com.here.pb.hdmap.shared.v1.adas.ElevationMeasure elevation = 1;
inline bool AdasElevationSample::has_elevation() const {
  return this != internal_default_instance() && elevation_ != nullptr;
}
inline const ::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure& AdasElevationSample::elevation() const {
  const ::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure* p = elevation_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasElevationSample.elevation)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure*>(
      &::com::here::pb::hdmap::shared::v1::adas::_ElevationMeasure_default_instance_);
}
inline ::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure* AdasElevationSample::release_elevation() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.adas.AdasElevationSample.elevation)
  
  ::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure* temp = elevation_;
  elevation_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure* AdasElevationSample::mutable_elevation() {
  
  if (elevation_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure>(GetArenaNoVirtual());
    elevation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.adas.AdasElevationSample.elevation)
  return elevation_;
}
inline void AdasElevationSample::set_allocated_elevation(::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure* elevation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(elevation_);
  }
  if (elevation) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      elevation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, elevation, submessage_arena);
    }
    
  } else {
    
  }
  elevation_ = elevation;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.adas.AdasElevationSample.elevation)
}

// .com.here.pb.hdmap.external.v1.adas.SlopeElevationAccuracy accuracy = 2;
inline void AdasElevationSample::clear_accuracy() {
  accuracy_ = 0;
}
inline ::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy AdasElevationSample::accuracy() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.adas.AdasElevationSample.accuracy)
  return static_cast< ::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy >(accuracy_);
}
inline void AdasElevationSample::set_accuracy(::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy value) {
  
  accuracy_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.adas.AdasElevationSample.accuracy)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace adas
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy>() {
  return ::com::here::pb::hdmap::external::v1::adas::SlopeElevationAccuracy_descriptor();
}
template <> struct is_proto_enum< ::com::here::pb::hdmap::external::v1::adas::LinkGeometryAccuracy> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::here::pb::hdmap::external::v1::adas::LinkGeometryAccuracy>() {
  return ::com::here::pb::hdmap::external::v1::adas::LinkGeometryAccuracy_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fadas_2flayer_2dadas_2dattributes_2eproto
