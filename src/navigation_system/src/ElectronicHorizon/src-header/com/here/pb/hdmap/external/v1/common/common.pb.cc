// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/common/common.proto

#include "com/here/pb/hdmap/external/v1/common/common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace common {
class PartitionReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PartitionReference> _instance;
} _PartitionReference_default_instance_;
class GenericPartitionReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericPartitionReference> _instance;
} _GenericPartitionReference_default_instance_;
class LocalLinkReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalLinkReference> _instance;
} _LocalLinkReference_default_instance_;
class LocalNodeReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalNodeReference> _instance;
} _LocalNodeReference_default_instance_;
class TiledLinkReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TiledLinkReference> _instance;
} _TiledLinkReference_default_instance_;
class TiledNodeReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TiledNodeReference> _instance;
} _TiledNodeReference_default_instance_;
class TiledLaneGroupReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TiledLaneGroupReference> _instance;
} _TiledLaneGroupReference_default_instance_;
class TiledLaneGroupConnectorReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TiledLaneGroupConnectorReference> _instance;
} _TiledLaneGroupConnectorReference_default_instance_;
class ParametricRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParametricRange> _instance;
} _ParametricRange_default_instance_;
class ParametricLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParametricLocation> _instance;
} _ParametricLocation_default_instance_;
class StrandAttributionLocalReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StrandAttributionLocalReference> _instance;
  ::google::protobuf::uint32 strand_attribution_id_;
  ::google::protobuf::internal::ArenaStringPtr strand_attribution_ref_;
} _StrandAttributionLocalReference_default_instance_;
class TiledStrandAttributionReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TiledStrandAttributionReference> _instance;
  ::google::protobuf::uint32 strand_attribution_id_;
  ::google::protobuf::internal::ArenaStringPtr strand_attribution_ref_;
} _TiledStrandAttributionReference_default_instance_;
class SpecificationComplianceAssertionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SpecificationComplianceAssertion> _instance;
} _SpecificationComplianceAssertion_default_instance_;
class LocalAdministrativeAreaReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalAdministrativeAreaReference> _instance;
} _LocalAdministrativeAreaReference_default_instance_;
class PartitionedAdministrativeAreaReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PartitionedAdministrativeAreaReference> _instance;
} _PartitionedAdministrativeAreaReference_default_instance_;
}  // namespace common
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
static void InitDefaultsPartitionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_PartitionReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::PartitionReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::PartitionReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PartitionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPartitionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsGenericPartitionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_GenericPartitionReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::GenericPartitionReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::GenericPartitionReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenericPartitionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenericPartitionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsLocalLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_LocalLinkReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::LocalLinkReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::LocalLinkReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LocalLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocalLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsLocalNodeReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_LocalNodeReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::LocalNodeReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::LocalNodeReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LocalNodeReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocalNodeReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsTiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_TiledLinkReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::TiledLinkReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::TiledLinkReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsTiledNodeReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_TiledNodeReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::TiledNodeReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::TiledNodeReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TiledNodeReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTiledNodeReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsTiledLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_TiledLaneGroupReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TiledLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTiledLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsTiledLaneGroupConnectorReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_TiledLaneGroupConnectorReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TiledLaneGroupConnectorReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTiledLaneGroupConnectorReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsParametricRange_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_ParametricRange_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::ParametricRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::ParametricRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParametricRange_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParametricRange_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsParametricLocation_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_ParametricLocation_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::ParametricLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::ParametricLocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParametricLocation_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParametricLocation_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsStrandAttributionLocalReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_StrandAttributionLocalReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StrandAttributionLocalReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStrandAttributionLocalReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsTiledStrandAttributionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_TiledStrandAttributionReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TiledStrandAttributionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTiledStrandAttributionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsSpecificationComplianceAssertion_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_SpecificationComplianceAssertion_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::SpecificationComplianceAssertion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::SpecificationComplianceAssertion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SpecificationComplianceAssertion_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSpecificationComplianceAssertion_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsLocalAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_LocalAdministrativeAreaReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::LocalAdministrativeAreaReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::LocalAdministrativeAreaReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LocalAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocalAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

static void InitDefaultsPartitionedAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::common::_PartitionedAdministrativeAreaReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PartitionedAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPartitionedAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto}, {}};

void InitDefaults_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_PartitionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenericPartitionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocalLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocalNodeReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TiledNodeReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TiledLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TiledLaneGroupConnectorReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParametricRange_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParametricLocation_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StrandAttributionLocalReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TiledStrandAttributionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SpecificationComplianceAssertion_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocalAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PartitionedAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::PartitionReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::PartitionReference, here_tile_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::GenericPartitionReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::GenericPartitionReference, generic_partition_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::LocalLinkReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::LocalLinkReference, link_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::LocalNodeReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::LocalNodeReference, node_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledLinkReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledLinkReference, link_id_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledLinkReference, link_here_tile_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledNodeReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledNodeReference, node_id_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledNodeReference, node_here_tile_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference, lane_group_id_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference, lane_group_here_tile_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference, lane_group_connector_id_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference, lane_group_connector_here_tile_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::ParametricRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::ParametricRange, range_offset_from_start_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::ParametricRange, range_offset_from_end_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::ParametricLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::ParametricLocation, location_offset_from_start_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReferenceDefaultTypeInternal, strand_attribution_id_),
  offsetof(::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReferenceDefaultTypeInternal, strand_attribution_ref_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReferenceDefaultTypeInternal, strand_attribution_id_),
  offsetof(::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReferenceDefaultTypeInternal, strand_attribution_ref_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference, strand_attribution_here_tile_id_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::SpecificationComplianceAssertion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::SpecificationComplianceAssertion, compliant_with_specification_ref_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::LocalAdministrativeAreaReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::LocalAdministrativeAreaReference, administrative_area_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference, administrative_area_id_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference, administrative_area_partition_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::here::pb::hdmap::external::v1::common::PartitionReference)},
  { 6, -1, sizeof(::com::here::pb::hdmap::external::v1::common::GenericPartitionReference)},
  { 12, -1, sizeof(::com::here::pb::hdmap::external::v1::common::LocalLinkReference)},
  { 18, -1, sizeof(::com::here::pb::hdmap::external::v1::common::LocalNodeReference)},
  { 24, -1, sizeof(::com::here::pb::hdmap::external::v1::common::TiledLinkReference)},
  { 31, -1, sizeof(::com::here::pb::hdmap::external::v1::common::TiledNodeReference)},
  { 38, -1, sizeof(::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference)},
  { 45, -1, sizeof(::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference)},
  { 52, -1, sizeof(::com::here::pb::hdmap::external::v1::common::ParametricRange)},
  { 59, -1, sizeof(::com::here::pb::hdmap::external::v1::common::ParametricLocation)},
  { 65, -1, sizeof(::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference)},
  { 73, -1, sizeof(::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference)},
  { 82, -1, sizeof(::com::here::pb::hdmap::external::v1::common::SpecificationComplianceAssertion)},
  { 88, -1, sizeof(::com::here::pb::hdmap::external::v1::common::LocalAdministrativeAreaReference)},
  { 94, -1, sizeof(::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_PartitionReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_GenericPartitionReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_LocalLinkReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_LocalNodeReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_TiledLinkReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_TiledNodeReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_TiledLaneGroupReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_TiledLaneGroupConnectorReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_ParametricRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_ParametricLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_StrandAttributionLocalReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_TiledStrandAttributionReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_SpecificationComplianceAssertion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_LocalAdministrativeAreaReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::common::_PartitionedAdministrativeAreaReference_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto = {
  {}, AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto, "com/here/pb/hdmap/external/v1/common/common.proto", schemas,
  file_default_instances, TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::offsets,
  file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto, 15, file_level_enum_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto, file_level_service_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto,
};

const char descriptor_table_protodef_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[] =
  "\n1com/here/pb/hdmap/external/v1/common/c"
  "ommon.proto\022$com.here.pb.hdmap.external."
  "v1.common\"*\n\022PartitionReference\022\024\n\014here_"
  "tile_id\030\001 \001(\r\"9\n\031GenericPartitionReferen"
  "ce\022\034\n\024generic_partition_id\030\001 \001(\t\"%\n\022Loca"
  "lLinkReference\022\017\n\007link_id\030\001 \001(\r\"%\n\022Local"
  "NodeReference\022\017\n\007node_id\030\001 \001(\r\"@\n\022TiledL"
  "inkReference\022\017\n\007link_id\030\001 \001(\r\022\031\n\021link_he"
  "re_tile_id\030\002 \001(\r\"@\n\022TiledNodeReference\022\017"
  "\n\007node_id\030\001 \001(\r\022\031\n\021node_here_tile_id\030\002 \001"
  "(\r\"Q\n\027TiledLaneGroupReference\022\025\n\rlane_gr"
  "oup_id\030\001 \001(\004\022\037\n\027lane_group_here_tile_id\030"
  "\002 \001(\r\"n\n TiledLaneGroupConnectorReferenc"
  "e\022\037\n\027lane_group_connector_id\030\001 \001(\004\022)\n!la"
  "ne_group_connector_here_tile_id\030\002 \001(\r\"Q\n"
  "\017ParametricRange\022\037\n\027range_offset_from_st"
  "art\030\001 \001(\001\022\035\n\025range_offset_from_end\030\002 \001(\001"
  "\"8\n\022ParametricLocation\022\"\n\032location_offse"
  "t_from_start\030\001 \001(\001\"j\n\037StrandAttributionL"
  "ocalReference\022\037\n\025strand_attribution_id\030\001"
  " \001(\rH\000\022 \n\026strand_attribution_ref\030\002 \001(\tH\000"
  "B\004\n\002id\"\223\001\n\037TiledStrandAttributionReferen"
  "ce\022\037\n\025strand_attribution_id\030\001 \001(\rH\000\022 \n\026s"
  "trand_attribution_ref\030\002 \001(\tH\000\022\'\n\037strand_"
  "attribution_here_tile_id\030\003 \001(\rB\004\n\002id\"L\n "
  "SpecificationComplianceAssertion\022(\n comp"
  "liant_with_specification_ref\030\001 \001(\r\"B\n Lo"
  "calAdministrativeAreaReference\022\036\n\026admini"
  "strative_area_id\030\001 \001(\021\"r\n&PartitionedAdm"
  "inistrativeAreaReference\022\036\n\026administrati"
  "ve_area_id\030\001 \001(\021\022(\n administrative_area_"
  "partition_id\030\002 \001(\t*a\n\021RelativeDirection\022"
  "\035\n\031RelativeDirection_UNKNOWN\020\000\022\010\n\004BOTH\020\001"
  "\022\013\n\007FORWARD\020\002\022\014\n\010BACKWARD\020\003\022\010\n\004NONE\020\004b\006p"
  "roto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto = {
  false, InitDefaults_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto, 
  descriptor_table_protodef_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto,
  "com/here/pb/hdmap/external/v1/common/common.proto", &assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto, 1365,
};

void AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto = []() { AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto(); return true; }();
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace common {
const ::google::protobuf::EnumDescriptor* RelativeDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return file_level_enum_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[0];
}
bool RelativeDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PartitionReference::InitAsDefaultInstance() {
}
class PartitionReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartitionReference::kHereTileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartitionReference::PartitionReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.PartitionReference)
}
PartitionReference::PartitionReference(const PartitionReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  here_tile_id_ = from.here_tile_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.PartitionReference)
}

void PartitionReference::SharedCtor() {
  here_tile_id_ = 0u;
}

PartitionReference::~PartitionReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.PartitionReference)
  SharedDtor();
}

void PartitionReference::SharedDtor() {
}

void PartitionReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PartitionReference& PartitionReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PartitionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void PartitionReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  here_tile_id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PartitionReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PartitionReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 here_tile_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_here_tile_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PartitionReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 here_tile_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.PartitionReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.PartitionReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PartitionReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->here_tile_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.PartitionReference)
}

::google::protobuf::uint8* PartitionReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->here_tile_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.PartitionReference)
  return target;
}

size_t PartitionReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PartitionReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  GOOGLE_DCHECK_NE(&from, this);
  const PartitionReference* source =
      ::google::protobuf::DynamicCastToGenerated<PartitionReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.PartitionReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.PartitionReference)
    MergeFrom(*source);
  }
}

void PartitionReference::MergeFrom(const PartitionReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.here_tile_id() != 0) {
    set_here_tile_id(from.here_tile_id());
  }
}

void PartitionReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartitionReference::CopyFrom(const PartitionReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartitionReference::IsInitialized() const {
  return true;
}

void PartitionReference::Swap(PartitionReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartitionReference::InternalSwap(PartitionReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(here_tile_id_, other->here_tile_id_);
}

::google::protobuf::Metadata PartitionReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GenericPartitionReference::InitAsDefaultInstance() {
}
class GenericPartitionReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericPartitionReference::kGenericPartitionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericPartitionReference::GenericPartitionReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
}
GenericPartitionReference::GenericPartitionReference(const GenericPartitionReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  generic_partition_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.generic_partition_id().size() > 0) {
    generic_partition_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.generic_partition_id_);
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
}

void GenericPartitionReference::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GenericPartitionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  generic_partition_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GenericPartitionReference::~GenericPartitionReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  SharedDtor();
}

void GenericPartitionReference::SharedDtor() {
  generic_partition_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenericPartitionReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenericPartitionReference& GenericPartitionReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GenericPartitionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void GenericPartitionReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  generic_partition_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GenericPartitionReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GenericPartitionReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string generic_partition_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id");
        object = msg->mutable_generic_partition_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GenericPartitionReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string generic_partition_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_generic_partition_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->generic_partition_id().data(), static_cast<int>(this->generic_partition_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GenericPartitionReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string generic_partition_id = 1;
  if (this->generic_partition_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->generic_partition_id().data(), static_cast<int>(this->generic_partition_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->generic_partition_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
}

::google::protobuf::uint8* GenericPartitionReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string generic_partition_id = 1;
  if (this->generic_partition_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->generic_partition_id().data(), static_cast<int>(this->generic_partition_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->generic_partition_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  return target;
}

size_t GenericPartitionReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string generic_partition_id = 1;
  if (this->generic_partition_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->generic_partition_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenericPartitionReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericPartitionReference* source =
      ::google::protobuf::DynamicCastToGenerated<GenericPartitionReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
    MergeFrom(*source);
  }
}

void GenericPartitionReference::MergeFrom(const GenericPartitionReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.generic_partition_id().size() > 0) {

    generic_partition_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.generic_partition_id_);
  }
}

void GenericPartitionReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericPartitionReference::CopyFrom(const GenericPartitionReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericPartitionReference::IsInitialized() const {
  return true;
}

void GenericPartitionReference::Swap(GenericPartitionReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericPartitionReference::InternalSwap(GenericPartitionReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  generic_partition_id_.Swap(&other->generic_partition_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GenericPartitionReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LocalLinkReference::InitAsDefaultInstance() {
}
class LocalLinkReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalLinkReference::kLinkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalLinkReference::LocalLinkReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
}
LocalLinkReference::LocalLinkReference(const LocalLinkReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  link_id_ = from.link_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
}

void LocalLinkReference::SharedCtor() {
  link_id_ = 0u;
}

LocalLinkReference::~LocalLinkReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  SharedDtor();
}

void LocalLinkReference::SharedDtor() {
}

void LocalLinkReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocalLinkReference& LocalLinkReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LocalLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void LocalLinkReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  link_id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LocalLinkReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LocalLinkReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 link_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_link_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LocalLinkReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 link_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &link_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LocalLinkReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 link_id = 1;
  if (this->link_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->link_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
}

::google::protobuf::uint8* LocalLinkReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 link_id = 1;
  if (this->link_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->link_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  return target;
}

size_t LocalLinkReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 link_id = 1;
  if (this->link_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->link_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalLinkReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalLinkReference* source =
      ::google::protobuf::DynamicCastToGenerated<LocalLinkReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
    MergeFrom(*source);
  }
}

void LocalLinkReference::MergeFrom(const LocalLinkReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.link_id() != 0) {
    set_link_id(from.link_id());
  }
}

void LocalLinkReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalLinkReference::CopyFrom(const LocalLinkReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalLinkReference::IsInitialized() const {
  return true;
}

void LocalLinkReference::Swap(LocalLinkReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalLinkReference::InternalSwap(LocalLinkReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(link_id_, other->link_id_);
}

::google::protobuf::Metadata LocalLinkReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LocalNodeReference::InitAsDefaultInstance() {
}
class LocalNodeReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalNodeReference::kNodeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalNodeReference::LocalNodeReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
}
LocalNodeReference::LocalNodeReference(const LocalNodeReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  node_id_ = from.node_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
}

void LocalNodeReference::SharedCtor() {
  node_id_ = 0u;
}

LocalNodeReference::~LocalNodeReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  SharedDtor();
}

void LocalNodeReference::SharedDtor() {
}

void LocalNodeReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocalNodeReference& LocalNodeReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LocalNodeReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void LocalNodeReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LocalNodeReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LocalNodeReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 node_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_node_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LocalNodeReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 node_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LocalNodeReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->node_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
}

::google::protobuf::uint8* LocalNodeReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->node_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  return target;
}

size_t LocalNodeReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalNodeReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalNodeReference* source =
      ::google::protobuf::DynamicCastToGenerated<LocalNodeReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
    MergeFrom(*source);
  }
}

void LocalNodeReference::MergeFrom(const LocalNodeReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
}

void LocalNodeReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalNodeReference::CopyFrom(const LocalNodeReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalNodeReference::IsInitialized() const {
  return true;
}

void LocalNodeReference::Swap(LocalNodeReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalNodeReference::InternalSwap(LocalNodeReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(node_id_, other->node_id_);
}

::google::protobuf::Metadata LocalNodeReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TiledLinkReference::InitAsDefaultInstance() {
}
class TiledLinkReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TiledLinkReference::kLinkIdFieldNumber;
const int TiledLinkReference::kLinkHereTileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TiledLinkReference::TiledLinkReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
}
TiledLinkReference::TiledLinkReference(const TiledLinkReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&link_id_, &from.link_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&link_here_tile_id_) -
    reinterpret_cast<char*>(&link_id_)) + sizeof(link_here_tile_id_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
}

void TiledLinkReference::SharedCtor() {
  ::memset(&link_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&link_here_tile_id_) -
      reinterpret_cast<char*>(&link_id_)) + sizeof(link_here_tile_id_));
}

TiledLinkReference::~TiledLinkReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  SharedDtor();
}

void TiledLinkReference::SharedDtor() {
}

void TiledLinkReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TiledLinkReference& TiledLinkReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void TiledLinkReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&link_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&link_here_tile_id_) -
      reinterpret_cast<char*>(&link_id_)) + sizeof(link_here_tile_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TiledLinkReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TiledLinkReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 link_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_link_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 link_here_tile_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_link_here_tile_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TiledLinkReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 link_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &link_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 link_here_tile_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &link_here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TiledLinkReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 link_id = 1;
  if (this->link_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->link_id(), output);
  }

  // uint32 link_here_tile_id = 2;
  if (this->link_here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->link_here_tile_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
}

::google::protobuf::uint8* TiledLinkReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 link_id = 1;
  if (this->link_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->link_id(), target);
  }

  // uint32 link_here_tile_id = 2;
  if (this->link_here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->link_here_tile_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  return target;
}

size_t TiledLinkReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 link_id = 1;
  if (this->link_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->link_id());
  }

  // uint32 link_here_tile_id = 2;
  if (this->link_here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->link_here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiledLinkReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  GOOGLE_DCHECK_NE(&from, this);
  const TiledLinkReference* source =
      ::google::protobuf::DynamicCastToGenerated<TiledLinkReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
    MergeFrom(*source);
  }
}

void TiledLinkReference::MergeFrom(const TiledLinkReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.link_id() != 0) {
    set_link_id(from.link_id());
  }
  if (from.link_here_tile_id() != 0) {
    set_link_here_tile_id(from.link_here_tile_id());
  }
}

void TiledLinkReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiledLinkReference::CopyFrom(const TiledLinkReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiledLinkReference::IsInitialized() const {
  return true;
}

void TiledLinkReference::Swap(TiledLinkReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TiledLinkReference::InternalSwap(TiledLinkReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(link_id_, other->link_id_);
  swap(link_here_tile_id_, other->link_here_tile_id_);
}

::google::protobuf::Metadata TiledLinkReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TiledNodeReference::InitAsDefaultInstance() {
}
class TiledNodeReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TiledNodeReference::kNodeIdFieldNumber;
const int TiledNodeReference::kNodeHereTileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TiledNodeReference::TiledNodeReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
}
TiledNodeReference::TiledNodeReference(const TiledNodeReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&node_id_, &from.node_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&node_here_tile_id_) -
    reinterpret_cast<char*>(&node_id_)) + sizeof(node_here_tile_id_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
}

void TiledNodeReference::SharedCtor() {
  ::memset(&node_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_here_tile_id_) -
      reinterpret_cast<char*>(&node_id_)) + sizeof(node_here_tile_id_));
}

TiledNodeReference::~TiledNodeReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  SharedDtor();
}

void TiledNodeReference::SharedDtor() {
}

void TiledNodeReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TiledNodeReference& TiledNodeReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TiledNodeReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void TiledNodeReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&node_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_here_tile_id_) -
      reinterpret_cast<char*>(&node_id_)) + sizeof(node_here_tile_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TiledNodeReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TiledNodeReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 node_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_node_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 node_here_tile_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_node_here_tile_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TiledNodeReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 node_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 node_here_tile_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TiledNodeReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->node_id(), output);
  }

  // uint32 node_here_tile_id = 2;
  if (this->node_here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->node_here_tile_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
}

::google::protobuf::uint8* TiledNodeReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->node_id(), target);
  }

  // uint32 node_here_tile_id = 2;
  if (this->node_here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->node_here_tile_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  return target;
}

size_t TiledNodeReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->node_id());
  }

  // uint32 node_here_tile_id = 2;
  if (this->node_here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->node_here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiledNodeReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  GOOGLE_DCHECK_NE(&from, this);
  const TiledNodeReference* source =
      ::google::protobuf::DynamicCastToGenerated<TiledNodeReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
    MergeFrom(*source);
  }
}

void TiledNodeReference::MergeFrom(const TiledNodeReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
  if (from.node_here_tile_id() != 0) {
    set_node_here_tile_id(from.node_here_tile_id());
  }
}

void TiledNodeReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiledNodeReference::CopyFrom(const TiledNodeReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiledNodeReference::IsInitialized() const {
  return true;
}

void TiledNodeReference::Swap(TiledNodeReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TiledNodeReference::InternalSwap(TiledNodeReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(node_id_, other->node_id_);
  swap(node_here_tile_id_, other->node_here_tile_id_);
}

::google::protobuf::Metadata TiledNodeReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TiledLaneGroupReference::InitAsDefaultInstance() {
}
class TiledLaneGroupReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TiledLaneGroupReference::kLaneGroupIdFieldNumber;
const int TiledLaneGroupReference::kLaneGroupHereTileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TiledLaneGroupReference::TiledLaneGroupReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
}
TiledLaneGroupReference::TiledLaneGroupReference(const TiledLaneGroupReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lane_group_id_, &from.lane_group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&lane_group_here_tile_id_) -
    reinterpret_cast<char*>(&lane_group_id_)) + sizeof(lane_group_here_tile_id_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
}

void TiledLaneGroupReference::SharedCtor() {
  ::memset(&lane_group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_group_here_tile_id_) -
      reinterpret_cast<char*>(&lane_group_id_)) + sizeof(lane_group_here_tile_id_));
}

TiledLaneGroupReference::~TiledLaneGroupReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  SharedDtor();
}

void TiledLaneGroupReference::SharedDtor() {
}

void TiledLaneGroupReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TiledLaneGroupReference& TiledLaneGroupReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TiledLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void TiledLaneGroupReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lane_group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_group_here_tile_id_) -
      reinterpret_cast<char*>(&lane_group_id_)) + sizeof(lane_group_here_tile_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TiledLaneGroupReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TiledLaneGroupReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 lane_group_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_lane_group_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 lane_group_here_tile_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_lane_group_here_tile_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TiledLaneGroupReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 lane_group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lane_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lane_group_here_tile_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lane_group_here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TiledLaneGroupReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_id = 1;
  if (this->lane_group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->lane_group_id(), output);
  }

  // uint32 lane_group_here_tile_id = 2;
  if (this->lane_group_here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lane_group_here_tile_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
}

::google::protobuf::uint8* TiledLaneGroupReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_id = 1;
  if (this->lane_group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->lane_group_id(), target);
  }

  // uint32 lane_group_here_tile_id = 2;
  if (this->lane_group_here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lane_group_here_tile_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  return target;
}

size_t TiledLaneGroupReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 lane_group_id = 1;
  if (this->lane_group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lane_group_id());
  }

  // uint32 lane_group_here_tile_id = 2;
  if (this->lane_group_here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lane_group_here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiledLaneGroupReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  GOOGLE_DCHECK_NE(&from, this);
  const TiledLaneGroupReference* source =
      ::google::protobuf::DynamicCastToGenerated<TiledLaneGroupReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
    MergeFrom(*source);
  }
}

void TiledLaneGroupReference::MergeFrom(const TiledLaneGroupReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lane_group_id() != 0) {
    set_lane_group_id(from.lane_group_id());
  }
  if (from.lane_group_here_tile_id() != 0) {
    set_lane_group_here_tile_id(from.lane_group_here_tile_id());
  }
}

void TiledLaneGroupReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiledLaneGroupReference::CopyFrom(const TiledLaneGroupReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiledLaneGroupReference::IsInitialized() const {
  return true;
}

void TiledLaneGroupReference::Swap(TiledLaneGroupReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TiledLaneGroupReference::InternalSwap(TiledLaneGroupReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(lane_group_id_, other->lane_group_id_);
  swap(lane_group_here_tile_id_, other->lane_group_here_tile_id_);
}

::google::protobuf::Metadata TiledLaneGroupReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TiledLaneGroupConnectorReference::InitAsDefaultInstance() {
}
class TiledLaneGroupConnectorReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TiledLaneGroupConnectorReference::kLaneGroupConnectorIdFieldNumber;
const int TiledLaneGroupConnectorReference::kLaneGroupConnectorHereTileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TiledLaneGroupConnectorReference::TiledLaneGroupConnectorReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
}
TiledLaneGroupConnectorReference::TiledLaneGroupConnectorReference(const TiledLaneGroupConnectorReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lane_group_connector_id_, &from.lane_group_connector_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&lane_group_connector_here_tile_id_) -
    reinterpret_cast<char*>(&lane_group_connector_id_)) + sizeof(lane_group_connector_here_tile_id_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
}

void TiledLaneGroupConnectorReference::SharedCtor() {
  ::memset(&lane_group_connector_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_group_connector_here_tile_id_) -
      reinterpret_cast<char*>(&lane_group_connector_id_)) + sizeof(lane_group_connector_here_tile_id_));
}

TiledLaneGroupConnectorReference::~TiledLaneGroupConnectorReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  SharedDtor();
}

void TiledLaneGroupConnectorReference::SharedDtor() {
}

void TiledLaneGroupConnectorReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TiledLaneGroupConnectorReference& TiledLaneGroupConnectorReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TiledLaneGroupConnectorReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void TiledLaneGroupConnectorReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lane_group_connector_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_group_connector_here_tile_id_) -
      reinterpret_cast<char*>(&lane_group_connector_id_)) + sizeof(lane_group_connector_here_tile_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TiledLaneGroupConnectorReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TiledLaneGroupConnectorReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 lane_group_connector_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_lane_group_connector_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 lane_group_connector_here_tile_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_lane_group_connector_here_tile_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TiledLaneGroupConnectorReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 lane_group_connector_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lane_group_connector_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lane_group_connector_here_tile_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lane_group_connector_here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TiledLaneGroupConnectorReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_connector_id = 1;
  if (this->lane_group_connector_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->lane_group_connector_id(), output);
  }

  // uint32 lane_group_connector_here_tile_id = 2;
  if (this->lane_group_connector_here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lane_group_connector_here_tile_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
}

::google::protobuf::uint8* TiledLaneGroupConnectorReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_connector_id = 1;
  if (this->lane_group_connector_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->lane_group_connector_id(), target);
  }

  // uint32 lane_group_connector_here_tile_id = 2;
  if (this->lane_group_connector_here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lane_group_connector_here_tile_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  return target;
}

size_t TiledLaneGroupConnectorReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 lane_group_connector_id = 1;
  if (this->lane_group_connector_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lane_group_connector_id());
  }

  // uint32 lane_group_connector_here_tile_id = 2;
  if (this->lane_group_connector_here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lane_group_connector_here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiledLaneGroupConnectorReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  GOOGLE_DCHECK_NE(&from, this);
  const TiledLaneGroupConnectorReference* source =
      ::google::protobuf::DynamicCastToGenerated<TiledLaneGroupConnectorReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
    MergeFrom(*source);
  }
}

void TiledLaneGroupConnectorReference::MergeFrom(const TiledLaneGroupConnectorReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lane_group_connector_id() != 0) {
    set_lane_group_connector_id(from.lane_group_connector_id());
  }
  if (from.lane_group_connector_here_tile_id() != 0) {
    set_lane_group_connector_here_tile_id(from.lane_group_connector_here_tile_id());
  }
}

void TiledLaneGroupConnectorReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiledLaneGroupConnectorReference::CopyFrom(const TiledLaneGroupConnectorReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiledLaneGroupConnectorReference::IsInitialized() const {
  return true;
}

void TiledLaneGroupConnectorReference::Swap(TiledLaneGroupConnectorReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TiledLaneGroupConnectorReference::InternalSwap(TiledLaneGroupConnectorReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(lane_group_connector_id_, other->lane_group_connector_id_);
  swap(lane_group_connector_here_tile_id_, other->lane_group_connector_here_tile_id_);
}

::google::protobuf::Metadata TiledLaneGroupConnectorReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ParametricRange::InitAsDefaultInstance() {
}
class ParametricRange::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParametricRange::kRangeOffsetFromStartFieldNumber;
const int ParametricRange::kRangeOffsetFromEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParametricRange::ParametricRange()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.ParametricRange)
}
ParametricRange::ParametricRange(const ParametricRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&range_offset_from_start_, &from.range_offset_from_start_,
    static_cast<size_t>(reinterpret_cast<char*>(&range_offset_from_end_) -
    reinterpret_cast<char*>(&range_offset_from_start_)) + sizeof(range_offset_from_end_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.ParametricRange)
}

void ParametricRange::SharedCtor() {
  ::memset(&range_offset_from_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&range_offset_from_end_) -
      reinterpret_cast<char*>(&range_offset_from_start_)) + sizeof(range_offset_from_end_));
}

ParametricRange::~ParametricRange() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.ParametricRange)
  SharedDtor();
}

void ParametricRange::SharedDtor() {
}

void ParametricRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParametricRange& ParametricRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ParametricRange_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void ParametricRange::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&range_offset_from_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&range_offset_from_end_) -
      reinterpret_cast<char*>(&range_offset_from_start_)) + sizeof(range_offset_from_end_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ParametricRange::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ParametricRange*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double range_offset_from_start = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_range_offset_from_start(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double range_offset_from_end = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_range_offset_from_end(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ParametricRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double range_offset_from_start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &range_offset_from_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double range_offset_from_end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &range_offset_from_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.ParametricRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.ParametricRange)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ParametricRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double range_offset_from_start = 1;
  if (this->range_offset_from_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->range_offset_from_start(), output);
  }

  // double range_offset_from_end = 2;
  if (this->range_offset_from_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->range_offset_from_end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.ParametricRange)
}

::google::protobuf::uint8* ParametricRange::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double range_offset_from_start = 1;
  if (this->range_offset_from_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->range_offset_from_start(), target);
  }

  // double range_offset_from_end = 2;
  if (this->range_offset_from_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->range_offset_from_end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.ParametricRange)
  return target;
}

size_t ParametricRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double range_offset_from_start = 1;
  if (this->range_offset_from_start() != 0) {
    total_size += 1 + 8;
  }

  // double range_offset_from_end = 2;
  if (this->range_offset_from_end() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParametricRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  GOOGLE_DCHECK_NE(&from, this);
  const ParametricRange* source =
      ::google::protobuf::DynamicCastToGenerated<ParametricRange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.ParametricRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.ParametricRange)
    MergeFrom(*source);
  }
}

void ParametricRange::MergeFrom(const ParametricRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.range_offset_from_start() != 0) {
    set_range_offset_from_start(from.range_offset_from_start());
  }
  if (from.range_offset_from_end() != 0) {
    set_range_offset_from_end(from.range_offset_from_end());
  }
}

void ParametricRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParametricRange::CopyFrom(const ParametricRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParametricRange::IsInitialized() const {
  return true;
}

void ParametricRange::Swap(ParametricRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParametricRange::InternalSwap(ParametricRange* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(range_offset_from_start_, other->range_offset_from_start_);
  swap(range_offset_from_end_, other->range_offset_from_end_);
}

::google::protobuf::Metadata ParametricRange::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ParametricLocation::InitAsDefaultInstance() {
}
class ParametricLocation::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParametricLocation::kLocationOffsetFromStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParametricLocation::ParametricLocation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.ParametricLocation)
}
ParametricLocation::ParametricLocation(const ParametricLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  location_offset_from_start_ = from.location_offset_from_start_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.ParametricLocation)
}

void ParametricLocation::SharedCtor() {
  location_offset_from_start_ = 0;
}

ParametricLocation::~ParametricLocation() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  SharedDtor();
}

void ParametricLocation::SharedDtor() {
}

void ParametricLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParametricLocation& ParametricLocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ParametricLocation_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void ParametricLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_offset_from_start_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ParametricLocation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ParametricLocation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double location_offset_from_start = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_location_offset_from_start(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ParametricLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double location_offset_from_start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &location_offset_from_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ParametricLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double location_offset_from_start = 1;
  if (this->location_offset_from_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->location_offset_from_start(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.ParametricLocation)
}

::google::protobuf::uint8* ParametricLocation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double location_offset_from_start = 1;
  if (this->location_offset_from_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->location_offset_from_start(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  return target;
}

size_t ParametricLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double location_offset_from_start = 1;
  if (this->location_offset_from_start() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParametricLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const ParametricLocation* source =
      ::google::protobuf::DynamicCastToGenerated<ParametricLocation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.ParametricLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.ParametricLocation)
    MergeFrom(*source);
  }
}

void ParametricLocation::MergeFrom(const ParametricLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.location_offset_from_start() != 0) {
    set_location_offset_from_start(from.location_offset_from_start());
  }
}

void ParametricLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParametricLocation::CopyFrom(const ParametricLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParametricLocation::IsInitialized() const {
  return true;
}

void ParametricLocation::Swap(ParametricLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParametricLocation::InternalSwap(ParametricLocation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(location_offset_from_start_, other->location_offset_from_start_);
}

::google::protobuf::Metadata ParametricLocation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StrandAttributionLocalReference::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::common::_StrandAttributionLocalReference_default_instance_.strand_attribution_id_ = 0u;
  ::com::here::pb::hdmap::external::v1::common::_StrandAttributionLocalReference_default_instance_.strand_attribution_ref_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class StrandAttributionLocalReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StrandAttributionLocalReference::kStrandAttributionIdFieldNumber;
const int StrandAttributionLocalReference::kStrandAttributionRefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StrandAttributionLocalReference::StrandAttributionLocalReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
}
StrandAttributionLocalReference::StrandAttributionLocalReference(const StrandAttributionLocalReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_id();
  switch (from.id_case()) {
    case kStrandAttributionId: {
      set_strand_attribution_id(from.strand_attribution_id());
      break;
    }
    case kStrandAttributionRef: {
      set_strand_attribution_ref(from.strand_attribution_ref());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
}

void StrandAttributionLocalReference::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StrandAttributionLocalReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  clear_has_id();
}

StrandAttributionLocalReference::~StrandAttributionLocalReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  SharedDtor();
}

void StrandAttributionLocalReference::SharedDtor() {
  if (has_id()) {
    clear_id();
  }
}

void StrandAttributionLocalReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StrandAttributionLocalReference& StrandAttributionLocalReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StrandAttributionLocalReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void StrandAttributionLocalReference::clear_id() {
// @@protoc_insertion_point(one_of_clear_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  switch (id_case()) {
    case kStrandAttributionId: {
      // No need to clear
      break;
    }
    case kStrandAttributionRef: {
      id_.strand_attribution_ref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ID_NOT_SET;
}


void StrandAttributionLocalReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_id();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StrandAttributionLocalReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StrandAttributionLocalReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 strand_attribution_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_strand_attribution_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string strand_attribution_ref = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref");
        object = msg->mutable_strand_attribution_ref();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StrandAttributionLocalReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 strand_attribution_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          clear_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_.strand_attribution_id_)));
          set_has_strand_attribution_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strand_attribution_ref = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strand_attribution_ref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strand_attribution_ref().data(), static_cast<int>(this->strand_attribution_ref().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StrandAttributionLocalReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 strand_attribution_id = 1;
  if (has_strand_attribution_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->strand_attribution_id(), output);
  }

  // string strand_attribution_ref = 2;
  if (has_strand_attribution_ref()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strand_attribution_ref().data(), static_cast<int>(this->strand_attribution_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strand_attribution_ref(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
}

::google::protobuf::uint8* StrandAttributionLocalReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 strand_attribution_id = 1;
  if (has_strand_attribution_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->strand_attribution_id(), target);
  }

  // string strand_attribution_ref = 2;
  if (has_strand_attribution_ref()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strand_attribution_ref().data(), static_cast<int>(this->strand_attribution_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strand_attribution_ref(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  return target;
}

size_t StrandAttributionLocalReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (id_case()) {
    // uint32 strand_attribution_id = 1;
    case kStrandAttributionId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strand_attribution_id());
      break;
    }
    // string strand_attribution_ref = 2;
    case kStrandAttributionRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strand_attribution_ref());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StrandAttributionLocalReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  GOOGLE_DCHECK_NE(&from, this);
  const StrandAttributionLocalReference* source =
      ::google::protobuf::DynamicCastToGenerated<StrandAttributionLocalReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
    MergeFrom(*source);
  }
}

void StrandAttributionLocalReference::MergeFrom(const StrandAttributionLocalReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.id_case()) {
    case kStrandAttributionId: {
      set_strand_attribution_id(from.strand_attribution_id());
      break;
    }
    case kStrandAttributionRef: {
      set_strand_attribution_ref(from.strand_attribution_ref());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
}

void StrandAttributionLocalReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StrandAttributionLocalReference::CopyFrom(const StrandAttributionLocalReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrandAttributionLocalReference::IsInitialized() const {
  return true;
}

void StrandAttributionLocalReference::Swap(StrandAttributionLocalReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StrandAttributionLocalReference::InternalSwap(StrandAttributionLocalReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata StrandAttributionLocalReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TiledStrandAttributionReference::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::common::_TiledStrandAttributionReference_default_instance_.strand_attribution_id_ = 0u;
  ::com::here::pb::hdmap::external::v1::common::_TiledStrandAttributionReference_default_instance_.strand_attribution_ref_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class TiledStrandAttributionReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TiledStrandAttributionReference::kStrandAttributionIdFieldNumber;
const int TiledStrandAttributionReference::kStrandAttributionRefFieldNumber;
const int TiledStrandAttributionReference::kStrandAttributionHereTileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TiledStrandAttributionReference::TiledStrandAttributionReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
}
TiledStrandAttributionReference::TiledStrandAttributionReference(const TiledStrandAttributionReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strand_attribution_here_tile_id_ = from.strand_attribution_here_tile_id_;
  clear_has_id();
  switch (from.id_case()) {
    case kStrandAttributionId: {
      set_strand_attribution_id(from.strand_attribution_id());
      break;
    }
    case kStrandAttributionRef: {
      set_strand_attribution_ref(from.strand_attribution_ref());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
}

void TiledStrandAttributionReference::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TiledStrandAttributionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  strand_attribution_here_tile_id_ = 0u;
  clear_has_id();
}

TiledStrandAttributionReference::~TiledStrandAttributionReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  SharedDtor();
}

void TiledStrandAttributionReference::SharedDtor() {
  if (has_id()) {
    clear_id();
  }
}

void TiledStrandAttributionReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TiledStrandAttributionReference& TiledStrandAttributionReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TiledStrandAttributionReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void TiledStrandAttributionReference::clear_id() {
// @@protoc_insertion_point(one_of_clear_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  switch (id_case()) {
    case kStrandAttributionId: {
      // No need to clear
      break;
    }
    case kStrandAttributionRef: {
      id_.strand_attribution_ref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ID_NOT_SET;
}


void TiledStrandAttributionReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strand_attribution_here_tile_id_ = 0u;
  clear_id();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TiledStrandAttributionReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TiledStrandAttributionReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 strand_attribution_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_strand_attribution_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string strand_attribution_ref = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref");
        object = msg->mutable_strand_attribution_ref();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 strand_attribution_here_tile_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_strand_attribution_here_tile_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TiledStrandAttributionReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 strand_attribution_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          clear_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_.strand_attribution_id_)));
          set_has_strand_attribution_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strand_attribution_ref = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strand_attribution_ref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strand_attribution_ref().data(), static_cast<int>(this->strand_attribution_ref().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 strand_attribution_here_tile_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strand_attribution_here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TiledStrandAttributionReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 strand_attribution_id = 1;
  if (has_strand_attribution_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->strand_attribution_id(), output);
  }

  // string strand_attribution_ref = 2;
  if (has_strand_attribution_ref()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strand_attribution_ref().data(), static_cast<int>(this->strand_attribution_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strand_attribution_ref(), output);
  }

  // uint32 strand_attribution_here_tile_id = 3;
  if (this->strand_attribution_here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->strand_attribution_here_tile_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
}

::google::protobuf::uint8* TiledStrandAttributionReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 strand_attribution_id = 1;
  if (has_strand_attribution_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->strand_attribution_id(), target);
  }

  // string strand_attribution_ref = 2;
  if (has_strand_attribution_ref()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strand_attribution_ref().data(), static_cast<int>(this->strand_attribution_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strand_attribution_ref(), target);
  }

  // uint32 strand_attribution_here_tile_id = 3;
  if (this->strand_attribution_here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->strand_attribution_here_tile_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  return target;
}

size_t TiledStrandAttributionReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 strand_attribution_here_tile_id = 3;
  if (this->strand_attribution_here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->strand_attribution_here_tile_id());
  }

  switch (id_case()) {
    // uint32 strand_attribution_id = 1;
    case kStrandAttributionId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strand_attribution_id());
      break;
    }
    // string strand_attribution_ref = 2;
    case kStrandAttributionRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strand_attribution_ref());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiledStrandAttributionReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  GOOGLE_DCHECK_NE(&from, this);
  const TiledStrandAttributionReference* source =
      ::google::protobuf::DynamicCastToGenerated<TiledStrandAttributionReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
    MergeFrom(*source);
  }
}

void TiledStrandAttributionReference::MergeFrom(const TiledStrandAttributionReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.strand_attribution_here_tile_id() != 0) {
    set_strand_attribution_here_tile_id(from.strand_attribution_here_tile_id());
  }
  switch (from.id_case()) {
    case kStrandAttributionId: {
      set_strand_attribution_id(from.strand_attribution_id());
      break;
    }
    case kStrandAttributionRef: {
      set_strand_attribution_ref(from.strand_attribution_ref());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
}

void TiledStrandAttributionReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiledStrandAttributionReference::CopyFrom(const TiledStrandAttributionReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiledStrandAttributionReference::IsInitialized() const {
  return true;
}

void TiledStrandAttributionReference::Swap(TiledStrandAttributionReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TiledStrandAttributionReference::InternalSwap(TiledStrandAttributionReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(strand_attribution_here_tile_id_, other->strand_attribution_here_tile_id_);
  swap(id_, other->id_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata TiledStrandAttributionReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SpecificationComplianceAssertion::InitAsDefaultInstance() {
}
class SpecificationComplianceAssertion::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpecificationComplianceAssertion::kCompliantWithSpecificationRefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpecificationComplianceAssertion::SpecificationComplianceAssertion()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
}
SpecificationComplianceAssertion::SpecificationComplianceAssertion(const SpecificationComplianceAssertion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  compliant_with_specification_ref_ = from.compliant_with_specification_ref_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
}

void SpecificationComplianceAssertion::SharedCtor() {
  compliant_with_specification_ref_ = 0u;
}

SpecificationComplianceAssertion::~SpecificationComplianceAssertion() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  SharedDtor();
}

void SpecificationComplianceAssertion::SharedDtor() {
}

void SpecificationComplianceAssertion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SpecificationComplianceAssertion& SpecificationComplianceAssertion::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SpecificationComplianceAssertion_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void SpecificationComplianceAssertion::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  compliant_with_specification_ref_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SpecificationComplianceAssertion::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SpecificationComplianceAssertion*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 compliant_with_specification_ref = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_compliant_with_specification_ref(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SpecificationComplianceAssertion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 compliant_with_specification_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compliant_with_specification_ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SpecificationComplianceAssertion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compliant_with_specification_ref = 1;
  if (this->compliant_with_specification_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->compliant_with_specification_ref(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
}

::google::protobuf::uint8* SpecificationComplianceAssertion::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compliant_with_specification_ref = 1;
  if (this->compliant_with_specification_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->compliant_with_specification_ref(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  return target;
}

size_t SpecificationComplianceAssertion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 compliant_with_specification_ref = 1;
  if (this->compliant_with_specification_ref() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compliant_with_specification_ref());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecificationComplianceAssertion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecificationComplianceAssertion* source =
      ::google::protobuf::DynamicCastToGenerated<SpecificationComplianceAssertion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
    MergeFrom(*source);
  }
}

void SpecificationComplianceAssertion::MergeFrom(const SpecificationComplianceAssertion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.compliant_with_specification_ref() != 0) {
    set_compliant_with_specification_ref(from.compliant_with_specification_ref());
  }
}

void SpecificationComplianceAssertion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecificationComplianceAssertion::CopyFrom(const SpecificationComplianceAssertion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecificationComplianceAssertion::IsInitialized() const {
  return true;
}

void SpecificationComplianceAssertion::Swap(SpecificationComplianceAssertion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpecificationComplianceAssertion::InternalSwap(SpecificationComplianceAssertion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(compliant_with_specification_ref_, other->compliant_with_specification_ref_);
}

::google::protobuf::Metadata SpecificationComplianceAssertion::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LocalAdministrativeAreaReference::InitAsDefaultInstance() {
}
class LocalAdministrativeAreaReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalAdministrativeAreaReference::kAdministrativeAreaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalAdministrativeAreaReference::LocalAdministrativeAreaReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
}
LocalAdministrativeAreaReference::LocalAdministrativeAreaReference(const LocalAdministrativeAreaReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  administrative_area_id_ = from.administrative_area_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
}

void LocalAdministrativeAreaReference::SharedCtor() {
  administrative_area_id_ = 0;
}

LocalAdministrativeAreaReference::~LocalAdministrativeAreaReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  SharedDtor();
}

void LocalAdministrativeAreaReference::SharedDtor() {
}

void LocalAdministrativeAreaReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocalAdministrativeAreaReference& LocalAdministrativeAreaReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LocalAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void LocalAdministrativeAreaReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  administrative_area_id_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LocalAdministrativeAreaReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LocalAdministrativeAreaReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // sint32 administrative_area_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_administrative_area_id(::google::protobuf::internal::ReadVarintZigZag32(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LocalAdministrativeAreaReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 administrative_area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &administrative_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LocalAdministrativeAreaReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 administrative_area_id = 1;
  if (this->administrative_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->administrative_area_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
}

::google::protobuf::uint8* LocalAdministrativeAreaReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 administrative_area_id = 1;
  if (this->administrative_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->administrative_area_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  return target;
}

size_t LocalAdministrativeAreaReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 administrative_area_id = 1;
  if (this->administrative_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->administrative_area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalAdministrativeAreaReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalAdministrativeAreaReference* source =
      ::google::protobuf::DynamicCastToGenerated<LocalAdministrativeAreaReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
    MergeFrom(*source);
  }
}

void LocalAdministrativeAreaReference::MergeFrom(const LocalAdministrativeAreaReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.administrative_area_id() != 0) {
    set_administrative_area_id(from.administrative_area_id());
  }
}

void LocalAdministrativeAreaReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalAdministrativeAreaReference::CopyFrom(const LocalAdministrativeAreaReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalAdministrativeAreaReference::IsInitialized() const {
  return true;
}

void LocalAdministrativeAreaReference::Swap(LocalAdministrativeAreaReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalAdministrativeAreaReference::InternalSwap(LocalAdministrativeAreaReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(administrative_area_id_, other->administrative_area_id_);
}

::google::protobuf::Metadata LocalAdministrativeAreaReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PartitionedAdministrativeAreaReference::InitAsDefaultInstance() {
}
class PartitionedAdministrativeAreaReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartitionedAdministrativeAreaReference::kAdministrativeAreaIdFieldNumber;
const int PartitionedAdministrativeAreaReference::kAdministrativeAreaPartitionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartitionedAdministrativeAreaReference::PartitionedAdministrativeAreaReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
}
PartitionedAdministrativeAreaReference::PartitionedAdministrativeAreaReference(const PartitionedAdministrativeAreaReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  administrative_area_partition_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.administrative_area_partition_id().size() > 0) {
    administrative_area_partition_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.administrative_area_partition_id_);
  }
  administrative_area_id_ = from.administrative_area_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
}

void PartitionedAdministrativeAreaReference::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PartitionedAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  administrative_area_partition_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  administrative_area_id_ = 0;
}

PartitionedAdministrativeAreaReference::~PartitionedAdministrativeAreaReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  SharedDtor();
}

void PartitionedAdministrativeAreaReference::SharedDtor() {
  administrative_area_partition_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PartitionedAdministrativeAreaReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PartitionedAdministrativeAreaReference& PartitionedAdministrativeAreaReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PartitionedAdministrativeAreaReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void PartitionedAdministrativeAreaReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  administrative_area_partition_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  administrative_area_id_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PartitionedAdministrativeAreaReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PartitionedAdministrativeAreaReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // sint32 administrative_area_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_administrative_area_id(::google::protobuf::internal::ReadVarintZigZag32(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string administrative_area_partition_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id");
        object = msg->mutable_administrative_area_partition_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PartitionedAdministrativeAreaReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 administrative_area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &administrative_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string administrative_area_partition_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_administrative_area_partition_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->administrative_area_partition_id().data(), static_cast<int>(this->administrative_area_partition_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PartitionedAdministrativeAreaReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 administrative_area_id = 1;
  if (this->administrative_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->administrative_area_id(), output);
  }

  // string administrative_area_partition_id = 2;
  if (this->administrative_area_partition_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->administrative_area_partition_id().data(), static_cast<int>(this->administrative_area_partition_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->administrative_area_partition_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
}

::google::protobuf::uint8* PartitionedAdministrativeAreaReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 administrative_area_id = 1;
  if (this->administrative_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->administrative_area_id(), target);
  }

  // string administrative_area_partition_id = 2;
  if (this->administrative_area_partition_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->administrative_area_partition_id().data(), static_cast<int>(this->administrative_area_partition_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->administrative_area_partition_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  return target;
}

size_t PartitionedAdministrativeAreaReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string administrative_area_partition_id = 2;
  if (this->administrative_area_partition_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->administrative_area_partition_id());
  }

  // sint32 administrative_area_id = 1;
  if (this->administrative_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->administrative_area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PartitionedAdministrativeAreaReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  GOOGLE_DCHECK_NE(&from, this);
  const PartitionedAdministrativeAreaReference* source =
      ::google::protobuf::DynamicCastToGenerated<PartitionedAdministrativeAreaReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
    MergeFrom(*source);
  }
}

void PartitionedAdministrativeAreaReference::MergeFrom(const PartitionedAdministrativeAreaReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.administrative_area_partition_id().size() > 0) {

    administrative_area_partition_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.administrative_area_partition_id_);
  }
  if (from.administrative_area_id() != 0) {
    set_administrative_area_id(from.administrative_area_id());
  }
}

void PartitionedAdministrativeAreaReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartitionedAdministrativeAreaReference::CopyFrom(const PartitionedAdministrativeAreaReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartitionedAdministrativeAreaReference::IsInitialized() const {
  return true;
}

void PartitionedAdministrativeAreaReference::Swap(PartitionedAdministrativeAreaReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartitionedAdministrativeAreaReference::InternalSwap(PartitionedAdministrativeAreaReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  administrative_area_partition_id_.Swap(&other->administrative_area_partition_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(administrative_area_id_, other->administrative_area_id_);
}

::google::protobuf::Metadata PartitionedAdministrativeAreaReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::PartitionReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::PartitionReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::PartitionReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::GenericPartitionReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::GenericPartitionReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::GenericPartitionReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::LocalLinkReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::LocalLinkReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::LocalLinkReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::LocalNodeReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::LocalNodeReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::LocalNodeReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::TiledNodeReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::TiledNodeReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::TiledNodeReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::ParametricRange* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::ParametricRange >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::ParametricRange >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::ParametricLocation* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::ParametricLocation >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::ParametricLocation >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::SpecificationComplianceAssertion* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::SpecificationComplianceAssertion >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::SpecificationComplianceAssertion >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::LocalAdministrativeAreaReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::LocalAdministrativeAreaReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::LocalAdministrativeAreaReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
