// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/shared/v1/adas/common.proto

#ifndef PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fadas_2fcommon_2eproto
#define PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fadas_2fcommon_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fadas_2fcommon_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fadas_2fcommon_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fadas_2fcommon_2eproto();
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace shared {
namespace v1 {
namespace adas {
class CurvatureMeasure;
class CurvatureMeasureDefaultTypeInternal;
extern CurvatureMeasureDefaultTypeInternal _CurvatureMeasure_default_instance_;
class ElevationMeasure;
class ElevationMeasureDefaultTypeInternal;
extern ElevationMeasureDefaultTypeInternal _ElevationMeasure_default_instance_;
class HeadingMeasure;
class HeadingMeasureDefaultTypeInternal;
extern HeadingMeasureDefaultTypeInternal _HeadingMeasure_default_instance_;
class SlopeMeasure;
class SlopeMeasureDefaultTypeInternal;
extern SlopeMeasureDefaultTypeInternal _SlopeMeasure_default_instance_;
}  // namespace adas
}  // namespace v1
}  // namespace shared
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure* Arena::CreateMaybeMessage<::com::here::pb::hdmap::shared::v1::adas::CurvatureMeasure>(Arena*);
template<> ::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure* Arena::CreateMaybeMessage<::com::here::pb::hdmap::shared::v1::adas::ElevationMeasure>(Arena*);
template<> ::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure* Arena::CreateMaybeMessage<::com::here::pb::hdmap::shared::v1::adas::HeadingMeasure>(Arena*);
template<> ::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure* Arena::CreateMaybeMessage<::com::here::pb::hdmap::shared::v1::adas::SlopeMeasure>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace shared {
namespace v1 {
namespace adas {

// ===================================================================

class ElevationMeasure final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.shared.v1.adas.ElevationMeasure) */ {
 public:
  ElevationMeasure();
  virtual ~ElevationMeasure();

  ElevationMeasure(const ElevationMeasure& from);

  inline ElevationMeasure& operator=(const ElevationMeasure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElevationMeasure(ElevationMeasure&& from) noexcept
    : ElevationMeasure() {
    *this = ::std::move(from);
  }

  inline ElevationMeasure& operator=(ElevationMeasure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ElevationMeasure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElevationMeasure* internal_default_instance() {
    return reinterpret_cast<const ElevationMeasure*>(
               &_ElevationMeasure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ElevationMeasure* other);
  friend void swap(ElevationMeasure& a, ElevationMeasure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElevationMeasure* New() const final {
    return CreateMaybeMessage<ElevationMeasure>(nullptr);
  }

  ElevationMeasure* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElevationMeasure>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElevationMeasure& from);
  void MergeFrom(const ElevationMeasure& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElevationMeasure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint32 cm_from_WGS84_ellipsoid = 1;
  void clear_cm_from_wgs84_ellipsoid();
  static const int kCmFromWGS84EllipsoidFieldNumber = 1;
  ::google::protobuf::int32 cm_from_wgs84_ellipsoid() const;
  void set_cm_from_wgs84_ellipsoid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.shared.v1.adas.ElevationMeasure)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 cm_from_wgs84_ellipsoid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fadas_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class HeadingMeasure final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.shared.v1.adas.HeadingMeasure) */ {
 public:
  HeadingMeasure();
  virtual ~HeadingMeasure();

  HeadingMeasure(const HeadingMeasure& from);

  inline HeadingMeasure& operator=(const HeadingMeasure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeadingMeasure(HeadingMeasure&& from) noexcept
    : HeadingMeasure() {
    *this = ::std::move(from);
  }

  inline HeadingMeasure& operator=(HeadingMeasure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HeadingMeasure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeadingMeasure* internal_default_instance() {
    return reinterpret_cast<const HeadingMeasure*>(
               &_HeadingMeasure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HeadingMeasure* other);
  friend void swap(HeadingMeasure& a, HeadingMeasure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeadingMeasure* New() const final {
    return CreateMaybeMessage<HeadingMeasure>(nullptr);
  }

  HeadingMeasure* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeadingMeasure>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeadingMeasure& from);
  void MergeFrom(const HeadingMeasure& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeadingMeasure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 thousandths_of_degree = 1;
  void clear_thousandths_of_degree();
  static const int kThousandthsOfDegreeFieldNumber = 1;
  ::google::protobuf::uint32 thousandths_of_degree() const;
  void set_thousandths_of_degree(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.shared.v1.adas.HeadingMeasure)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 thousandths_of_degree_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fadas_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class SlopeMeasure final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.shared.v1.adas.SlopeMeasure) */ {
 public:
  SlopeMeasure();
  virtual ~SlopeMeasure();

  SlopeMeasure(const SlopeMeasure& from);

  inline SlopeMeasure& operator=(const SlopeMeasure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SlopeMeasure(SlopeMeasure&& from) noexcept
    : SlopeMeasure() {
    *this = ::std::move(from);
  }

  inline SlopeMeasure& operator=(SlopeMeasure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SlopeMeasure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlopeMeasure* internal_default_instance() {
    return reinterpret_cast<const SlopeMeasure*>(
               &_SlopeMeasure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SlopeMeasure* other);
  friend void swap(SlopeMeasure& a, SlopeMeasure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SlopeMeasure* New() const final {
    return CreateMaybeMessage<SlopeMeasure>(nullptr);
  }

  SlopeMeasure* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SlopeMeasure>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SlopeMeasure& from);
  void MergeFrom(const SlopeMeasure& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlopeMeasure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint32 thousandths_of_degree = 1;
  void clear_thousandths_of_degree();
  static const int kThousandthsOfDegreeFieldNumber = 1;
  ::google::protobuf::int32 thousandths_of_degree() const;
  void set_thousandths_of_degree(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.shared.v1.adas.SlopeMeasure)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 thousandths_of_degree_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fadas_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class CurvatureMeasure final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.shared.v1.adas.CurvatureMeasure) */ {
 public:
  CurvatureMeasure();
  virtual ~CurvatureMeasure();

  CurvatureMeasure(const CurvatureMeasure& from);

  inline CurvatureMeasure& operator=(const CurvatureMeasure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CurvatureMeasure(CurvatureMeasure&& from) noexcept
    : CurvatureMeasure() {
    *this = ::std::move(from);
  }

  inline CurvatureMeasure& operator=(CurvatureMeasure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CurvatureMeasure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CurvatureMeasure* internal_default_instance() {
    return reinterpret_cast<const CurvatureMeasure*>(
               &_CurvatureMeasure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CurvatureMeasure* other);
  friend void swap(CurvatureMeasure& a, CurvatureMeasure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CurvatureMeasure* New() const final {
    return CreateMaybeMessage<CurvatureMeasure>(nullptr);
  }

  CurvatureMeasure* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CurvatureMeasure>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CurvatureMeasure& from);
  void MergeFrom(const CurvatureMeasure& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CurvatureMeasure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint32 inverse_radius_millionths_of_meter = 1;
  void clear_inverse_radius_millionths_of_meter();
  static const int kInverseRadiusMillionthsOfMeterFieldNumber = 1;
  ::google::protobuf::int32 inverse_radius_millionths_of_meter() const;
  void set_inverse_radius_millionths_of_meter(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.shared.v1.adas.CurvatureMeasure)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 inverse_radius_millionths_of_meter_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fadas_2fcommon_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ElevationMeasure

// sint32 cm_from_WGS84_ellipsoid = 1;
inline void ElevationMeasure::clear_cm_from_wgs84_ellipsoid() {
  cm_from_wgs84_ellipsoid_ = 0;
}
inline ::google::protobuf::int32 ElevationMeasure::cm_from_wgs84_ellipsoid() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.shared.v1.adas.ElevationMeasure.cm_from_WGS84_ellipsoid)
  return cm_from_wgs84_ellipsoid_;
}
inline void ElevationMeasure::set_cm_from_wgs84_ellipsoid(::google::protobuf::int32 value) {
  
  cm_from_wgs84_ellipsoid_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.shared.v1.adas.ElevationMeasure.cm_from_WGS84_ellipsoid)
}

// -------------------------------------------------------------------

// HeadingMeasure

// uint32 thousandths_of_degree = 1;
inline void HeadingMeasure::clear_thousandths_of_degree() {
  thousandths_of_degree_ = 0u;
}
inline ::google::protobuf::uint32 HeadingMeasure::thousandths_of_degree() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.shared.v1.adas.HeadingMeasure.thousandths_of_degree)
  return thousandths_of_degree_;
}
inline void HeadingMeasure::set_thousandths_of_degree(::google::protobuf::uint32 value) {
  
  thousandths_of_degree_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.shared.v1.adas.HeadingMeasure.thousandths_of_degree)
}

// -------------------------------------------------------------------

// SlopeMeasure

// sint32 thousandths_of_degree = 1;
inline void SlopeMeasure::clear_thousandths_of_degree() {
  thousandths_of_degree_ = 0;
}
inline ::google::protobuf::int32 SlopeMeasure::thousandths_of_degree() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.shared.v1.adas.SlopeMeasure.thousandths_of_degree)
  return thousandths_of_degree_;
}
inline void SlopeMeasure::set_thousandths_of_degree(::google::protobuf::int32 value) {
  
  thousandths_of_degree_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.shared.v1.adas.SlopeMeasure.thousandths_of_degree)
}

// -------------------------------------------------------------------

// CurvatureMeasure

// sint32 inverse_radius_millionths_of_meter = 1;
inline void CurvatureMeasure::clear_inverse_radius_millionths_of_meter() {
  inverse_radius_millionths_of_meter_ = 0;
}
inline ::google::protobuf::int32 CurvatureMeasure::inverse_radius_millionths_of_meter() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.shared.v1.adas.CurvatureMeasure.inverse_radius_millionths_of_meter)
  return inverse_radius_millionths_of_meter_;
}
inline void CurvatureMeasure::set_inverse_radius_millionths_of_meter(::google::protobuf::int32 value) {
  
  inverse_radius_millionths_of_meter_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.shared.v1.adas.CurvatureMeasure.inverse_radius_millionths_of_meter)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace adas
}  // namespace v1
}  // namespace shared
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fshared_2fv1_2fadas_2fcommon_2eproto
