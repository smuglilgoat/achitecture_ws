// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/lanes/layer-lane-road-reference.proto

#include "com/here/pb/hdmap/external/v1/lanes/layer-lane-road-reference.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParametricRange_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TiledLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LaneGroupLinkReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LinkLaneGroupReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ParametricLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ParametricLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto;
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace lanes {
class LaneRoadReferenceLayerTileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaneRoadReferenceLayerTile> _instance;
} _LaneRoadReferenceLayerTile_default_instance_;
class LaneGroupLinkReferencesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaneGroupLinkReferences> _instance;
} _LaneGroupLinkReferences_default_instance_;
class LinkLaneGroupReferencesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinkLaneGroupReferences> _instance;
} _LinkLaneGroupReferences_default_instance_;
class ParametricLinkReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParametricLinkReference> _instance;
} _ParametricLinkReference_default_instance_;
class ParametricLaneGroupReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParametricLaneGroupReference> _instance;
} _ParametricLaneGroupReference_default_instance_;
}  // namespace lanes
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
static void InitDefaultsLaneRoadReferenceLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::lanes::_LaneRoadReferenceLayerTile_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::lanes::LaneRoadReferenceLayerTile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::lanes::LaneRoadReferenceLayerTile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LaneRoadReferenceLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLaneRoadReferenceLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto}, {
      &scc_info_LaneGroupLinkReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base,
      &scc_info_LinkLaneGroupReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base,}};

static void InitDefaultsLaneGroupLinkReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::lanes::_LaneGroupLinkReferences_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LaneGroupLinkReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLaneGroupLinkReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto}, {
      &scc_info_ParametricLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base,}};

static void InitDefaultsLinkLaneGroupReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::lanes::_LinkLaneGroupReferences_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LinkLaneGroupReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLinkLaneGroupReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto}, {
      &scc_info_ParametricLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base,}};

static void InitDefaultsParametricLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::lanes::_ParametricLinkReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ParametricLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsParametricLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto}, {
      &scc_info_ParametricRange_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base,
      &scc_info_TiledLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base,}};

static void InitDefaultsParametricLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::lanes::_ParametricLaneGroupReference_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ParametricLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsParametricLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto}, {
      &scc_info_ParametricRange_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base,
      &scc_info_TiledLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto.base,}};

void InitDefaults_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LaneRoadReferenceLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LaneGroupLinkReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinkLaneGroupReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParametricLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParametricLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneRoadReferenceLayerTile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneRoadReferenceLayerTile, here_tile_id_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneRoadReferenceLayerTile, lane_group_link_references_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneRoadReferenceLayerTile, link_lane_group_references_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences, lane_group_ref_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences, link_references_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences, link_local_ref_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences, lane_group_references_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference, applies_to_lane_group_range_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference, link_ref_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference, applies_to_link_range_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference, applies_to_link_range_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference, lane_group_ref_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference, applies_to_lane_group_range_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::here::pb::hdmap::external::v1::lanes::LaneRoadReferenceLayerTile)},
  { 8, -1, sizeof(::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences)},
  { 15, -1, sizeof(::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences)},
  { 22, -1, sizeof(::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference)},
  { 30, -1, sizeof(::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::lanes::_LaneRoadReferenceLayerTile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::lanes::_LaneGroupLinkReferences_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::lanes::_LinkLaneGroupReferences_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::lanes::_ParametricLinkReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::lanes::_ParametricLaneGroupReference_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto = {
  {}, AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto, "com/here/pb/hdmap/external/v1/lanes/layer-lane-road-reference.proto", schemas,
  file_default_instances, TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto::offsets,
  file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto, 5, file_level_enum_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto, file_level_service_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto,
};

const char descriptor_table_protodef_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto[] =
  "\nCcom/here/pb/hdmap/external/v1/lanes/la"
  "yer-lane-road-reference.proto\022#com.here."
  "pb.hdmap.external.v1.lanes\0321com/here/pb/"
  "hdmap/external/v1/common/common.proto\"\366\001"
  "\n\032LaneRoadReferenceLayerTile\022\024\n\014here_til"
  "e_id\030\001 \001(\r\022`\n\032lane_group_link_references"
  "\030\002 \003(\0132<.com.here.pb.hdmap.external.v1.l"
  "anes.LaneGroupLinkReferences\022`\n\032link_lan"
  "e_group_references\030\003 \003(\0132<.com.here.pb.h"
  "dmap.external.v1.lanes.LinkLaneGroupRefe"
  "rences\"\210\001\n\027LaneGroupLinkReferences\022\026\n\016la"
  "ne_group_ref\030\001 \001(\004\022U\n\017link_references\030\002 "
  "\003(\0132<.com.here.pb.hdmap.external.v1.lane"
  "s.ParametricLinkReference\"\223\001\n\027LinkLaneGr"
  "oupReferences\022\026\n\016link_local_ref\030\001 \001(\r\022`\n"
  "\025lane_group_references\030\002 \003(\0132A.com.here."
  "pb.hdmap.external.v1.lanes.ParametricLan"
  "eGroupReference\"\227\002\n\027ParametricLinkRefere"
  "nce\022Z\n\033applies_to_lane_group_range\030\001 \001(\013"
  "25.com.here.pb.hdmap.external.v1.common."
  "ParametricRange\022J\n\010link_ref\030\002 \001(\01328.com."
  "here.pb.hdmap.external.v1.common.TiledLi"
  "nkReference\022T\n\025applies_to_link_range\030\003 \001"
  "(\01325.com.here.pb.hdmap.external.v1.commo"
  "n.ParametricRange\"\247\002\n\034ParametricLaneGrou"
  "pReference\022T\n\025applies_to_link_range\030\001 \001("
  "\01325.com.here.pb.hdmap.external.v1.common"
  ".ParametricRange\022U\n\016lane_group_ref\030\002 \001(\013"
  "2=.com.here.pb.hdmap.external.v1.common."
  "TiledLaneGroupReference\022Z\n\033applies_to_la"
  "ne_group_range\030\003 \001(\01325.com.here.pb.hdmap"
  ".external.v1.common.ParametricRangeb\006pro"
  "to3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto = {
  false, InitDefaults_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto, 
  descriptor_table_protodef_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto,
  "com/here/pb/hdmap/external/v1/lanes/layer-lane-road-reference.proto", &assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto, 1283,
};

void AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto = []() { AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto(); return true; }();
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace lanes {

// ===================================================================

void LaneRoadReferenceLayerTile::InitAsDefaultInstance() {
}
class LaneRoadReferenceLayerTile::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaneRoadReferenceLayerTile::kHereTileIdFieldNumber;
const int LaneRoadReferenceLayerTile::kLaneGroupLinkReferencesFieldNumber;
const int LaneRoadReferenceLayerTile::kLinkLaneGroupReferencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaneRoadReferenceLayerTile::LaneRoadReferenceLayerTile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
}
LaneRoadReferenceLayerTile::LaneRoadReferenceLayerTile(const LaneRoadReferenceLayerTile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      lane_group_link_references_(from.lane_group_link_references_),
      link_lane_group_references_(from.link_lane_group_references_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  here_tile_id_ = from.here_tile_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
}

void LaneRoadReferenceLayerTile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LaneRoadReferenceLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  here_tile_id_ = 0u;
}

LaneRoadReferenceLayerTile::~LaneRoadReferenceLayerTile() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  SharedDtor();
}

void LaneRoadReferenceLayerTile::SharedDtor() {
}

void LaneRoadReferenceLayerTile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaneRoadReferenceLayerTile& LaneRoadReferenceLayerTile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaneRoadReferenceLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  return *internal_default_instance();
}


void LaneRoadReferenceLayerTile::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lane_group_link_references_.Clear();
  link_lane_group_references_.Clear();
  here_tile_id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaneRoadReferenceLayerTile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaneRoadReferenceLayerTile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 here_tile_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_here_tile_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences lane_group_link_references = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences::_InternalParse;
          object = msg->add_lane_group_link_references();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences link_lane_group_references = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences::_InternalParse;
          object = msg->add_link_lane_group_references();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaneRoadReferenceLayerTile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 here_tile_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences lane_group_link_references = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lane_group_link_references()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences link_lane_group_references = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_link_lane_group_references()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaneRoadReferenceLayerTile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->here_tile_id(), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences lane_group_link_references = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_group_link_references_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->lane_group_link_references(static_cast<int>(i)),
      output);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences link_lane_group_references = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_lane_group_references_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->link_lane_group_references(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
}

::google::protobuf::uint8* LaneRoadReferenceLayerTile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->here_tile_id(), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences lane_group_link_references = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_group_link_references_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->lane_group_link_references(static_cast<int>(i)), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences link_lane_group_references = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_lane_group_references_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->link_lane_group_references(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  return target;
}

size_t LaneRoadReferenceLayerTile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences lane_group_link_references = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lane_group_link_references_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lane_group_link_references(static_cast<int>(i)));
    }
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences link_lane_group_references = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->link_lane_group_references_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->link_lane_group_references(static_cast<int>(i)));
    }
  }

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaneRoadReferenceLayerTile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  GOOGLE_DCHECK_NE(&from, this);
  const LaneRoadReferenceLayerTile* source =
      ::google::protobuf::DynamicCastToGenerated<LaneRoadReferenceLayerTile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
    MergeFrom(*source);
  }
}

void LaneRoadReferenceLayerTile::MergeFrom(const LaneRoadReferenceLayerTile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lane_group_link_references_.MergeFrom(from.lane_group_link_references_);
  link_lane_group_references_.MergeFrom(from.link_lane_group_references_);
  if (from.here_tile_id() != 0) {
    set_here_tile_id(from.here_tile_id());
  }
}

void LaneRoadReferenceLayerTile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaneRoadReferenceLayerTile::CopyFrom(const LaneRoadReferenceLayerTile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaneRoadReferenceLayerTile::IsInitialized() const {
  return true;
}

void LaneRoadReferenceLayerTile::Swap(LaneRoadReferenceLayerTile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaneRoadReferenceLayerTile::InternalSwap(LaneRoadReferenceLayerTile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&lane_group_link_references_)->InternalSwap(CastToBase(&other->lane_group_link_references_));
  CastToBase(&link_lane_group_references_)->InternalSwap(CastToBase(&other->link_lane_group_references_));
  swap(here_tile_id_, other->here_tile_id_);
}

::google::protobuf::Metadata LaneRoadReferenceLayerTile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LaneGroupLinkReferences::InitAsDefaultInstance() {
}
class LaneGroupLinkReferences::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaneGroupLinkReferences::kLaneGroupRefFieldNumber;
const int LaneGroupLinkReferences::kLinkReferencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaneGroupLinkReferences::LaneGroupLinkReferences()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
}
LaneGroupLinkReferences::LaneGroupLinkReferences(const LaneGroupLinkReferences& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      link_references_(from.link_references_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lane_group_ref_ = from.lane_group_ref_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
}

void LaneGroupLinkReferences::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LaneGroupLinkReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  lane_group_ref_ = PROTOBUF_ULONGLONG(0);
}

LaneGroupLinkReferences::~LaneGroupLinkReferences() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  SharedDtor();
}

void LaneGroupLinkReferences::SharedDtor() {
}

void LaneGroupLinkReferences::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaneGroupLinkReferences& LaneGroupLinkReferences::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaneGroupLinkReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  return *internal_default_instance();
}


void LaneGroupLinkReferences::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  link_references_.Clear();
  lane_group_ref_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaneGroupLinkReferences::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaneGroupLinkReferences*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 lane_group_ref = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_lane_group_ref(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference link_references = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference::_InternalParse;
          object = msg->add_link_references();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaneGroupLinkReferences::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 lane_group_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lane_group_ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference link_references = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_link_references()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaneGroupLinkReferences::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_ref = 1;
  if (this->lane_group_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->lane_group_ref(), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference link_references = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_references_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->link_references(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
}

::google::protobuf::uint8* LaneGroupLinkReferences::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_ref = 1;
  if (this->lane_group_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->lane_group_ref(), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference link_references = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_references_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->link_references(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  return target;
}

size_t LaneGroupLinkReferences::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference link_references = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->link_references_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->link_references(static_cast<int>(i)));
    }
  }

  // uint64 lane_group_ref = 1;
  if (this->lane_group_ref() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lane_group_ref());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaneGroupLinkReferences::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  GOOGLE_DCHECK_NE(&from, this);
  const LaneGroupLinkReferences* source =
      ::google::protobuf::DynamicCastToGenerated<LaneGroupLinkReferences>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
    MergeFrom(*source);
  }
}

void LaneGroupLinkReferences::MergeFrom(const LaneGroupLinkReferences& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  link_references_.MergeFrom(from.link_references_);
  if (from.lane_group_ref() != 0) {
    set_lane_group_ref(from.lane_group_ref());
  }
}

void LaneGroupLinkReferences::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaneGroupLinkReferences::CopyFrom(const LaneGroupLinkReferences& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaneGroupLinkReferences::IsInitialized() const {
  return true;
}

void LaneGroupLinkReferences::Swap(LaneGroupLinkReferences* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaneGroupLinkReferences::InternalSwap(LaneGroupLinkReferences* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&link_references_)->InternalSwap(CastToBase(&other->link_references_));
  swap(lane_group_ref_, other->lane_group_ref_);
}

::google::protobuf::Metadata LaneGroupLinkReferences::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LinkLaneGroupReferences::InitAsDefaultInstance() {
}
class LinkLaneGroupReferences::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkLaneGroupReferences::kLinkLocalRefFieldNumber;
const int LinkLaneGroupReferences::kLaneGroupReferencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkLaneGroupReferences::LinkLaneGroupReferences()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
}
LinkLaneGroupReferences::LinkLaneGroupReferences(const LinkLaneGroupReferences& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      lane_group_references_(from.lane_group_references_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  link_local_ref_ = from.link_local_ref_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
}

void LinkLaneGroupReferences::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LinkLaneGroupReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  link_local_ref_ = 0u;
}

LinkLaneGroupReferences::~LinkLaneGroupReferences() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  SharedDtor();
}

void LinkLaneGroupReferences::SharedDtor() {
}

void LinkLaneGroupReferences::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinkLaneGroupReferences& LinkLaneGroupReferences::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LinkLaneGroupReferences_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  return *internal_default_instance();
}


void LinkLaneGroupReferences::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lane_group_references_.Clear();
  link_local_ref_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LinkLaneGroupReferences::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LinkLaneGroupReferences*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 link_local_ref = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_link_local_ref(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference lane_group_references = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference::_InternalParse;
          object = msg->add_lane_group_references();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LinkLaneGroupReferences::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 link_local_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &link_local_ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference lane_group_references = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lane_group_references()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LinkLaneGroupReferences::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 link_local_ref = 1;
  if (this->link_local_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->link_local_ref(), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference lane_group_references = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_group_references_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->lane_group_references(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
}

::google::protobuf::uint8* LinkLaneGroupReferences::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 link_local_ref = 1;
  if (this->link_local_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->link_local_ref(), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference lane_group_references = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_group_references_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->lane_group_references(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  return target;
}

size_t LinkLaneGroupReferences::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference lane_group_references = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lane_group_references_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lane_group_references(static_cast<int>(i)));
    }
  }

  // uint32 link_local_ref = 1;
  if (this->link_local_ref() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->link_local_ref());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkLaneGroupReferences::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkLaneGroupReferences* source =
      ::google::protobuf::DynamicCastToGenerated<LinkLaneGroupReferences>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
    MergeFrom(*source);
  }
}

void LinkLaneGroupReferences::MergeFrom(const LinkLaneGroupReferences& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lane_group_references_.MergeFrom(from.lane_group_references_);
  if (from.link_local_ref() != 0) {
    set_link_local_ref(from.link_local_ref());
  }
}

void LinkLaneGroupReferences::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkLaneGroupReferences::CopyFrom(const LinkLaneGroupReferences& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkLaneGroupReferences::IsInitialized() const {
  return true;
}

void LinkLaneGroupReferences::Swap(LinkLaneGroupReferences* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkLaneGroupReferences::InternalSwap(LinkLaneGroupReferences* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&lane_group_references_)->InternalSwap(CastToBase(&other->lane_group_references_));
  swap(link_local_ref_, other->link_local_ref_);
}

::google::protobuf::Metadata LinkLaneGroupReferences::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ParametricLinkReference::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::lanes::_ParametricLinkReference_default_instance_._instance.get_mutable()->applies_to_lane_group_range_ = const_cast< ::com::here::pb::hdmap::external::v1::common::ParametricRange*>(
      ::com::here::pb::hdmap::external::v1::common::ParametricRange::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::lanes::_ParametricLinkReference_default_instance_._instance.get_mutable()->link_ref_ = const_cast< ::com::here::pb::hdmap::external::v1::common::TiledLinkReference*>(
      ::com::here::pb::hdmap::external::v1::common::TiledLinkReference::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::lanes::_ParametricLinkReference_default_instance_._instance.get_mutable()->applies_to_link_range_ = const_cast< ::com::here::pb::hdmap::external::v1::common::ParametricRange*>(
      ::com::here::pb::hdmap::external::v1::common::ParametricRange::internal_default_instance());
}
class ParametricLinkReference::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::common::ParametricRange& applies_to_lane_group_range(const ParametricLinkReference* msg);
  static const ::com::here::pb::hdmap::external::v1::common::TiledLinkReference& link_ref(const ParametricLinkReference* msg);
  static const ::com::here::pb::hdmap::external::v1::common::ParametricRange& applies_to_link_range(const ParametricLinkReference* msg);
};

const ::com::here::pb::hdmap::external::v1::common::ParametricRange&
ParametricLinkReference::HasBitSetters::applies_to_lane_group_range(const ParametricLinkReference* msg) {
  return *msg->applies_to_lane_group_range_;
}
const ::com::here::pb::hdmap::external::v1::common::TiledLinkReference&
ParametricLinkReference::HasBitSetters::link_ref(const ParametricLinkReference* msg) {
  return *msg->link_ref_;
}
const ::com::here::pb::hdmap::external::v1::common::ParametricRange&
ParametricLinkReference::HasBitSetters::applies_to_link_range(const ParametricLinkReference* msg) {
  return *msg->applies_to_link_range_;
}
void ParametricLinkReference::clear_applies_to_lane_group_range() {
  if (GetArenaNoVirtual() == nullptr && applies_to_lane_group_range_ != nullptr) {
    delete applies_to_lane_group_range_;
  }
  applies_to_lane_group_range_ = nullptr;
}
void ParametricLinkReference::clear_link_ref() {
  if (GetArenaNoVirtual() == nullptr && link_ref_ != nullptr) {
    delete link_ref_;
  }
  link_ref_ = nullptr;
}
void ParametricLinkReference::clear_applies_to_link_range() {
  if (GetArenaNoVirtual() == nullptr && applies_to_link_range_ != nullptr) {
    delete applies_to_link_range_;
  }
  applies_to_link_range_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParametricLinkReference::kAppliesToLaneGroupRangeFieldNumber;
const int ParametricLinkReference::kLinkRefFieldNumber;
const int ParametricLinkReference::kAppliesToLinkRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParametricLinkReference::ParametricLinkReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
}
ParametricLinkReference::ParametricLinkReference(const ParametricLinkReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_applies_to_lane_group_range()) {
    applies_to_lane_group_range_ = new ::com::here::pb::hdmap::external::v1::common::ParametricRange(*from.applies_to_lane_group_range_);
  } else {
    applies_to_lane_group_range_ = nullptr;
  }
  if (from.has_link_ref()) {
    link_ref_ = new ::com::here::pb::hdmap::external::v1::common::TiledLinkReference(*from.link_ref_);
  } else {
    link_ref_ = nullptr;
  }
  if (from.has_applies_to_link_range()) {
    applies_to_link_range_ = new ::com::here::pb::hdmap::external::v1::common::ParametricRange(*from.applies_to_link_range_);
  } else {
    applies_to_link_range_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
}

void ParametricLinkReference::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ParametricLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  ::memset(&applies_to_lane_group_range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&applies_to_link_range_) -
      reinterpret_cast<char*>(&applies_to_lane_group_range_)) + sizeof(applies_to_link_range_));
}

ParametricLinkReference::~ParametricLinkReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  SharedDtor();
}

void ParametricLinkReference::SharedDtor() {
  if (this != internal_default_instance()) delete applies_to_lane_group_range_;
  if (this != internal_default_instance()) delete link_ref_;
  if (this != internal_default_instance()) delete applies_to_link_range_;
}

void ParametricLinkReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParametricLinkReference& ParametricLinkReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ParametricLinkReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  return *internal_default_instance();
}


void ParametricLinkReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && applies_to_lane_group_range_ != nullptr) {
    delete applies_to_lane_group_range_;
  }
  applies_to_lane_group_range_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && link_ref_ != nullptr) {
    delete link_ref_;
  }
  link_ref_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && applies_to_link_range_ != nullptr) {
    delete applies_to_link_range_;
  }
  applies_to_link_range_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ParametricLinkReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ParametricLinkReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::ParametricRange::_InternalParse;
        object = msg->mutable_applies_to_lane_group_range();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.external.v1.common.TiledLinkReference link_ref = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::TiledLinkReference::_InternalParse;
        object = msg->mutable_link_ref();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::ParametricRange::_InternalParse;
        object = msg->mutable_applies_to_link_range();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ParametricLinkReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_applies_to_lane_group_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.common.TiledLinkReference link_ref = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_link_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_applies_to_link_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ParametricLinkReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 1;
  if (this->has_applies_to_lane_group_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::applies_to_lane_group_range(this), output);
  }

  // .com.here.pb.hdmap.external.v1.common.TiledLinkReference link_ref = 2;
  if (this->has_link_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::link_ref(this), output);
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 3;
  if (this->has_applies_to_link_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::applies_to_link_range(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
}

::google::protobuf::uint8* ParametricLinkReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 1;
  if (this->has_applies_to_lane_group_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::applies_to_lane_group_range(this), target);
  }

  // .com.here.pb.hdmap.external.v1.common.TiledLinkReference link_ref = 2;
  if (this->has_link_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::link_ref(this), target);
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 3;
  if (this->has_applies_to_link_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::applies_to_link_range(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  return target;
}

size_t ParametricLinkReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 1;
  if (this->has_applies_to_lane_group_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *applies_to_lane_group_range_);
  }

  // .com.here.pb.hdmap.external.v1.common.TiledLinkReference link_ref = 2;
  if (this->has_link_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *link_ref_);
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 3;
  if (this->has_applies_to_link_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *applies_to_link_range_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParametricLinkReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  GOOGLE_DCHECK_NE(&from, this);
  const ParametricLinkReference* source =
      ::google::protobuf::DynamicCastToGenerated<ParametricLinkReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
    MergeFrom(*source);
  }
}

void ParametricLinkReference::MergeFrom(const ParametricLinkReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_applies_to_lane_group_range()) {
    mutable_applies_to_lane_group_range()->::com::here::pb::hdmap::external::v1::common::ParametricRange::MergeFrom(from.applies_to_lane_group_range());
  }
  if (from.has_link_ref()) {
    mutable_link_ref()->::com::here::pb::hdmap::external::v1::common::TiledLinkReference::MergeFrom(from.link_ref());
  }
  if (from.has_applies_to_link_range()) {
    mutable_applies_to_link_range()->::com::here::pb::hdmap::external::v1::common::ParametricRange::MergeFrom(from.applies_to_link_range());
  }
}

void ParametricLinkReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParametricLinkReference::CopyFrom(const ParametricLinkReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParametricLinkReference::IsInitialized() const {
  return true;
}

void ParametricLinkReference::Swap(ParametricLinkReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParametricLinkReference::InternalSwap(ParametricLinkReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(applies_to_lane_group_range_, other->applies_to_lane_group_range_);
  swap(link_ref_, other->link_ref_);
  swap(applies_to_link_range_, other->applies_to_link_range_);
}

::google::protobuf::Metadata ParametricLinkReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ParametricLaneGroupReference::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::lanes::_ParametricLaneGroupReference_default_instance_._instance.get_mutable()->applies_to_link_range_ = const_cast< ::com::here::pb::hdmap::external::v1::common::ParametricRange*>(
      ::com::here::pb::hdmap::external::v1::common::ParametricRange::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::lanes::_ParametricLaneGroupReference_default_instance_._instance.get_mutable()->lane_group_ref_ = const_cast< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference*>(
      ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference::internal_default_instance());
  ::com::here::pb::hdmap::external::v1::lanes::_ParametricLaneGroupReference_default_instance_._instance.get_mutable()->applies_to_lane_group_range_ = const_cast< ::com::here::pb::hdmap::external::v1::common::ParametricRange*>(
      ::com::here::pb::hdmap::external::v1::common::ParametricRange::internal_default_instance());
}
class ParametricLaneGroupReference::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::common::ParametricRange& applies_to_link_range(const ParametricLaneGroupReference* msg);
  static const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference& lane_group_ref(const ParametricLaneGroupReference* msg);
  static const ::com::here::pb::hdmap::external::v1::common::ParametricRange& applies_to_lane_group_range(const ParametricLaneGroupReference* msg);
};

const ::com::here::pb::hdmap::external::v1::common::ParametricRange&
ParametricLaneGroupReference::HasBitSetters::applies_to_link_range(const ParametricLaneGroupReference* msg) {
  return *msg->applies_to_link_range_;
}
const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference&
ParametricLaneGroupReference::HasBitSetters::lane_group_ref(const ParametricLaneGroupReference* msg) {
  return *msg->lane_group_ref_;
}
const ::com::here::pb::hdmap::external::v1::common::ParametricRange&
ParametricLaneGroupReference::HasBitSetters::applies_to_lane_group_range(const ParametricLaneGroupReference* msg) {
  return *msg->applies_to_lane_group_range_;
}
void ParametricLaneGroupReference::clear_applies_to_link_range() {
  if (GetArenaNoVirtual() == nullptr && applies_to_link_range_ != nullptr) {
    delete applies_to_link_range_;
  }
  applies_to_link_range_ = nullptr;
}
void ParametricLaneGroupReference::clear_lane_group_ref() {
  if (GetArenaNoVirtual() == nullptr && lane_group_ref_ != nullptr) {
    delete lane_group_ref_;
  }
  lane_group_ref_ = nullptr;
}
void ParametricLaneGroupReference::clear_applies_to_lane_group_range() {
  if (GetArenaNoVirtual() == nullptr && applies_to_lane_group_range_ != nullptr) {
    delete applies_to_lane_group_range_;
  }
  applies_to_lane_group_range_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParametricLaneGroupReference::kAppliesToLinkRangeFieldNumber;
const int ParametricLaneGroupReference::kLaneGroupRefFieldNumber;
const int ParametricLaneGroupReference::kAppliesToLaneGroupRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParametricLaneGroupReference::ParametricLaneGroupReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
}
ParametricLaneGroupReference::ParametricLaneGroupReference(const ParametricLaneGroupReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_applies_to_link_range()) {
    applies_to_link_range_ = new ::com::here::pb::hdmap::external::v1::common::ParametricRange(*from.applies_to_link_range_);
  } else {
    applies_to_link_range_ = nullptr;
  }
  if (from.has_lane_group_ref()) {
    lane_group_ref_ = new ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference(*from.lane_group_ref_);
  } else {
    lane_group_ref_ = nullptr;
  }
  if (from.has_applies_to_lane_group_range()) {
    applies_to_lane_group_range_ = new ::com::here::pb::hdmap::external::v1::common::ParametricRange(*from.applies_to_lane_group_range_);
  } else {
    applies_to_lane_group_range_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
}

void ParametricLaneGroupReference::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ParametricLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  ::memset(&applies_to_link_range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&applies_to_lane_group_range_) -
      reinterpret_cast<char*>(&applies_to_link_range_)) + sizeof(applies_to_lane_group_range_));
}

ParametricLaneGroupReference::~ParametricLaneGroupReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  SharedDtor();
}

void ParametricLaneGroupReference::SharedDtor() {
  if (this != internal_default_instance()) delete applies_to_link_range_;
  if (this != internal_default_instance()) delete lane_group_ref_;
  if (this != internal_default_instance()) delete applies_to_lane_group_range_;
}

void ParametricLaneGroupReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParametricLaneGroupReference& ParametricLaneGroupReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ParametricLaneGroupReference_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto.base);
  return *internal_default_instance();
}


void ParametricLaneGroupReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && applies_to_link_range_ != nullptr) {
    delete applies_to_link_range_;
  }
  applies_to_link_range_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && lane_group_ref_ != nullptr) {
    delete lane_group_ref_;
  }
  lane_group_ref_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && applies_to_lane_group_range_ != nullptr) {
    delete applies_to_lane_group_range_;
  }
  applies_to_lane_group_range_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ParametricLaneGroupReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ParametricLaneGroupReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::ParametricRange::_InternalParse;
        object = msg->mutable_applies_to_link_range();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference lane_group_ref = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference::_InternalParse;
        object = msg->mutable_lane_group_ref();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::common::ParametricRange::_InternalParse;
        object = msg->mutable_applies_to_lane_group_range();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ParametricLaneGroupReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_applies_to_link_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference lane_group_ref = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lane_group_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_applies_to_lane_group_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ParametricLaneGroupReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 1;
  if (this->has_applies_to_link_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::applies_to_link_range(this), output);
  }

  // .com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference lane_group_ref = 2;
  if (this->has_lane_group_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::lane_group_ref(this), output);
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 3;
  if (this->has_applies_to_lane_group_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::applies_to_lane_group_range(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
}

::google::protobuf::uint8* ParametricLaneGroupReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 1;
  if (this->has_applies_to_link_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::applies_to_link_range(this), target);
  }

  // .com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference lane_group_ref = 2;
  if (this->has_lane_group_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::lane_group_ref(this), target);
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 3;
  if (this->has_applies_to_lane_group_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::applies_to_lane_group_range(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  return target;
}

size_t ParametricLaneGroupReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 1;
  if (this->has_applies_to_link_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *applies_to_link_range_);
  }

  // .com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference lane_group_ref = 2;
  if (this->has_lane_group_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lane_group_ref_);
  }

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 3;
  if (this->has_applies_to_lane_group_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *applies_to_lane_group_range_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParametricLaneGroupReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  GOOGLE_DCHECK_NE(&from, this);
  const ParametricLaneGroupReference* source =
      ::google::protobuf::DynamicCastToGenerated<ParametricLaneGroupReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
    MergeFrom(*source);
  }
}

void ParametricLaneGroupReference::MergeFrom(const ParametricLaneGroupReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_applies_to_link_range()) {
    mutable_applies_to_link_range()->::com::here::pb::hdmap::external::v1::common::ParametricRange::MergeFrom(from.applies_to_link_range());
  }
  if (from.has_lane_group_ref()) {
    mutable_lane_group_ref()->::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference::MergeFrom(from.lane_group_ref());
  }
  if (from.has_applies_to_lane_group_range()) {
    mutable_applies_to_lane_group_range()->::com::here::pb::hdmap::external::v1::common::ParametricRange::MergeFrom(from.applies_to_lane_group_range());
  }
}

void ParametricLaneGroupReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParametricLaneGroupReference::CopyFrom(const ParametricLaneGroupReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParametricLaneGroupReference::IsInitialized() const {
  return true;
}

void ParametricLaneGroupReference::Swap(ParametricLaneGroupReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParametricLaneGroupReference::InternalSwap(ParametricLaneGroupReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(applies_to_link_range_, other->applies_to_link_range_);
  swap(lane_group_ref_, other->lane_group_ref_);
  swap(applies_to_lane_group_range_, other->applies_to_lane_group_range_);
}

::google::protobuf::Metadata ParametricLaneGroupReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace lanes
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::lanes::LaneRoadReferenceLayerTile* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::lanes::LaneRoadReferenceLayerTile >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::lanes::LaneRoadReferenceLayerTile >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
