// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/lanes/layer-lane-road-reference.proto

#ifndef PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto
#define PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "com/here/pb/hdmap/external/v1/common/common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto();
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace lanes {
class LaneGroupLinkReferences;
class LaneGroupLinkReferencesDefaultTypeInternal;
extern LaneGroupLinkReferencesDefaultTypeInternal _LaneGroupLinkReferences_default_instance_;
class LaneRoadReferenceLayerTile;
class LaneRoadReferenceLayerTileDefaultTypeInternal;
extern LaneRoadReferenceLayerTileDefaultTypeInternal _LaneRoadReferenceLayerTile_default_instance_;
class LinkLaneGroupReferences;
class LinkLaneGroupReferencesDefaultTypeInternal;
extern LinkLaneGroupReferencesDefaultTypeInternal _LinkLaneGroupReferences_default_instance_;
class ParametricLaneGroupReference;
class ParametricLaneGroupReferenceDefaultTypeInternal;
extern ParametricLaneGroupReferenceDefaultTypeInternal _ParametricLaneGroupReference_default_instance_;
class ParametricLinkReference;
class ParametricLinkReferenceDefaultTypeInternal;
extern ParametricLinkReferenceDefaultTypeInternal _ParametricLinkReference_default_instance_;
}  // namespace lanes
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::lanes::LaneRoadReferenceLayerTile* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::lanes::LaneRoadReferenceLayerTile>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace lanes {

// ===================================================================

class LaneRoadReferenceLayerTile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile) */ {
 public:
  LaneRoadReferenceLayerTile();
  virtual ~LaneRoadReferenceLayerTile();

  LaneRoadReferenceLayerTile(const LaneRoadReferenceLayerTile& from);

  inline LaneRoadReferenceLayerTile& operator=(const LaneRoadReferenceLayerTile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaneRoadReferenceLayerTile(LaneRoadReferenceLayerTile&& from) noexcept
    : LaneRoadReferenceLayerTile() {
    *this = ::std::move(from);
  }

  inline LaneRoadReferenceLayerTile& operator=(LaneRoadReferenceLayerTile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LaneRoadReferenceLayerTile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaneRoadReferenceLayerTile* internal_default_instance() {
    return reinterpret_cast<const LaneRoadReferenceLayerTile*>(
               &_LaneRoadReferenceLayerTile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LaneRoadReferenceLayerTile* other);
  friend void swap(LaneRoadReferenceLayerTile& a, LaneRoadReferenceLayerTile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaneRoadReferenceLayerTile* New() const final {
    return CreateMaybeMessage<LaneRoadReferenceLayerTile>(nullptr);
  }

  LaneRoadReferenceLayerTile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LaneRoadReferenceLayerTile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LaneRoadReferenceLayerTile& from);
  void MergeFrom(const LaneRoadReferenceLayerTile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaneRoadReferenceLayerTile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences lane_group_link_references = 2;
  int lane_group_link_references_size() const;
  void clear_lane_group_link_references();
  static const int kLaneGroupLinkReferencesFieldNumber = 2;
  ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences* mutable_lane_group_link_references(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences >*
      mutable_lane_group_link_references();
  const ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences& lane_group_link_references(int index) const;
  ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences* add_lane_group_link_references();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences >&
      lane_group_link_references() const;

  // repeated .com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences link_lane_group_references = 3;
  int link_lane_group_references_size() const;
  void clear_link_lane_group_references();
  static const int kLinkLaneGroupReferencesFieldNumber = 3;
  ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences* mutable_link_lane_group_references(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences >*
      mutable_link_lane_group_references();
  const ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences& link_lane_group_references(int index) const;
  ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences* add_link_lane_group_references();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences >&
      link_lane_group_references() const;

  // uint32 here_tile_id = 1;
  void clear_here_tile_id();
  static const int kHereTileIdFieldNumber = 1;
  ::google::protobuf::uint32 here_tile_id() const;
  void set_here_tile_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences > lane_group_link_references_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences > link_lane_group_references_;
  ::google::protobuf::uint32 here_tile_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto;
};
// -------------------------------------------------------------------

class LaneGroupLinkReferences final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences) */ {
 public:
  LaneGroupLinkReferences();
  virtual ~LaneGroupLinkReferences();

  LaneGroupLinkReferences(const LaneGroupLinkReferences& from);

  inline LaneGroupLinkReferences& operator=(const LaneGroupLinkReferences& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaneGroupLinkReferences(LaneGroupLinkReferences&& from) noexcept
    : LaneGroupLinkReferences() {
    *this = ::std::move(from);
  }

  inline LaneGroupLinkReferences& operator=(LaneGroupLinkReferences&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LaneGroupLinkReferences& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaneGroupLinkReferences* internal_default_instance() {
    return reinterpret_cast<const LaneGroupLinkReferences*>(
               &_LaneGroupLinkReferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LaneGroupLinkReferences* other);
  friend void swap(LaneGroupLinkReferences& a, LaneGroupLinkReferences& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaneGroupLinkReferences* New() const final {
    return CreateMaybeMessage<LaneGroupLinkReferences>(nullptr);
  }

  LaneGroupLinkReferences* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LaneGroupLinkReferences>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LaneGroupLinkReferences& from);
  void MergeFrom(const LaneGroupLinkReferences& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaneGroupLinkReferences* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference link_references = 2;
  int link_references_size() const;
  void clear_link_references();
  static const int kLinkReferencesFieldNumber = 2;
  ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference* mutable_link_references(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference >*
      mutable_link_references();
  const ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference& link_references(int index) const;
  ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference* add_link_references();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference >&
      link_references() const;

  // uint64 lane_group_ref = 1;
  void clear_lane_group_ref();
  static const int kLaneGroupRefFieldNumber = 1;
  ::google::protobuf::uint64 lane_group_ref() const;
  void set_lane_group_ref(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference > link_references_;
  ::google::protobuf::uint64 lane_group_ref_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto;
};
// -------------------------------------------------------------------

class LinkLaneGroupReferences final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences) */ {
 public:
  LinkLaneGroupReferences();
  virtual ~LinkLaneGroupReferences();

  LinkLaneGroupReferences(const LinkLaneGroupReferences& from);

  inline LinkLaneGroupReferences& operator=(const LinkLaneGroupReferences& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkLaneGroupReferences(LinkLaneGroupReferences&& from) noexcept
    : LinkLaneGroupReferences() {
    *this = ::std::move(from);
  }

  inline LinkLaneGroupReferences& operator=(LinkLaneGroupReferences&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LinkLaneGroupReferences& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkLaneGroupReferences* internal_default_instance() {
    return reinterpret_cast<const LinkLaneGroupReferences*>(
               &_LinkLaneGroupReferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(LinkLaneGroupReferences* other);
  friend void swap(LinkLaneGroupReferences& a, LinkLaneGroupReferences& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkLaneGroupReferences* New() const final {
    return CreateMaybeMessage<LinkLaneGroupReferences>(nullptr);
  }

  LinkLaneGroupReferences* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkLaneGroupReferences>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkLaneGroupReferences& from);
  void MergeFrom(const LinkLaneGroupReferences& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkLaneGroupReferences* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference lane_group_references = 2;
  int lane_group_references_size() const;
  void clear_lane_group_references();
  static const int kLaneGroupReferencesFieldNumber = 2;
  ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference* mutable_lane_group_references(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference >*
      mutable_lane_group_references();
  const ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference& lane_group_references(int index) const;
  ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference* add_lane_group_references();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference >&
      lane_group_references() const;

  // uint32 link_local_ref = 1;
  void clear_link_local_ref();
  static const int kLinkLocalRefFieldNumber = 1;
  ::google::protobuf::uint32 link_local_ref() const;
  void set_link_local_ref(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference > lane_group_references_;
  ::google::protobuf::uint32 link_local_ref_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto;
};
// -------------------------------------------------------------------

class ParametricLinkReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference) */ {
 public:
  ParametricLinkReference();
  virtual ~ParametricLinkReference();

  ParametricLinkReference(const ParametricLinkReference& from);

  inline ParametricLinkReference& operator=(const ParametricLinkReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParametricLinkReference(ParametricLinkReference&& from) noexcept
    : ParametricLinkReference() {
    *this = ::std::move(from);
  }

  inline ParametricLinkReference& operator=(ParametricLinkReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ParametricLinkReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParametricLinkReference* internal_default_instance() {
    return reinterpret_cast<const ParametricLinkReference*>(
               &_ParametricLinkReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ParametricLinkReference* other);
  friend void swap(ParametricLinkReference& a, ParametricLinkReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParametricLinkReference* New() const final {
    return CreateMaybeMessage<ParametricLinkReference>(nullptr);
  }

  ParametricLinkReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParametricLinkReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParametricLinkReference& from);
  void MergeFrom(const ParametricLinkReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParametricLinkReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 1;
  bool has_applies_to_lane_group_range() const;
  void clear_applies_to_lane_group_range();
  static const int kAppliesToLaneGroupRangeFieldNumber = 1;
  const ::com::here::pb::hdmap::external::v1::common::ParametricRange& applies_to_lane_group_range() const;
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* release_applies_to_lane_group_range();
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* mutable_applies_to_lane_group_range();
  void set_allocated_applies_to_lane_group_range(::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_lane_group_range);

  // .com.here.pb.hdmap.external.v1.common.TiledLinkReference link_ref = 2;
  bool has_link_ref() const;
  void clear_link_ref();
  static const int kLinkRefFieldNumber = 2;
  const ::com::here::pb::hdmap::external::v1::common::TiledLinkReference& link_ref() const;
  ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* release_link_ref();
  ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* mutable_link_ref();
  void set_allocated_link_ref(::com::here::pb::hdmap::external::v1::common::TiledLinkReference* link_ref);

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 3;
  bool has_applies_to_link_range() const;
  void clear_applies_to_link_range();
  static const int kAppliesToLinkRangeFieldNumber = 3;
  const ::com::here::pb::hdmap::external::v1::common::ParametricRange& applies_to_link_range() const;
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* release_applies_to_link_range();
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* mutable_applies_to_link_range();
  void set_allocated_applies_to_link_range(::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_link_range);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_lane_group_range_;
  ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* link_ref_;
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_link_range_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto;
};
// -------------------------------------------------------------------

class ParametricLaneGroupReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference) */ {
 public:
  ParametricLaneGroupReference();
  virtual ~ParametricLaneGroupReference();

  ParametricLaneGroupReference(const ParametricLaneGroupReference& from);

  inline ParametricLaneGroupReference& operator=(const ParametricLaneGroupReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParametricLaneGroupReference(ParametricLaneGroupReference&& from) noexcept
    : ParametricLaneGroupReference() {
    *this = ::std::move(from);
  }

  inline ParametricLaneGroupReference& operator=(ParametricLaneGroupReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ParametricLaneGroupReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParametricLaneGroupReference* internal_default_instance() {
    return reinterpret_cast<const ParametricLaneGroupReference*>(
               &_ParametricLaneGroupReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ParametricLaneGroupReference* other);
  friend void swap(ParametricLaneGroupReference& a, ParametricLaneGroupReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParametricLaneGroupReference* New() const final {
    return CreateMaybeMessage<ParametricLaneGroupReference>(nullptr);
  }

  ParametricLaneGroupReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParametricLaneGroupReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParametricLaneGroupReference& from);
  void MergeFrom(const ParametricLaneGroupReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParametricLaneGroupReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 1;
  bool has_applies_to_link_range() const;
  void clear_applies_to_link_range();
  static const int kAppliesToLinkRangeFieldNumber = 1;
  const ::com::here::pb::hdmap::external::v1::common::ParametricRange& applies_to_link_range() const;
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* release_applies_to_link_range();
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* mutable_applies_to_link_range();
  void set_allocated_applies_to_link_range(::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_link_range);

  // .com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference lane_group_ref = 2;
  bool has_lane_group_ref() const;
  void clear_lane_group_ref();
  static const int kLaneGroupRefFieldNumber = 2;
  const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference& lane_group_ref() const;
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* release_lane_group_ref();
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* mutable_lane_group_ref();
  void set_allocated_lane_group_ref(::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* lane_group_ref);

  // .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 3;
  bool has_applies_to_lane_group_range() const;
  void clear_applies_to_lane_group_range();
  static const int kAppliesToLaneGroupRangeFieldNumber = 3;
  const ::com::here::pb::hdmap::external::v1::common::ParametricRange& applies_to_lane_group_range() const;
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* release_applies_to_lane_group_range();
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* mutable_applies_to_lane_group_range();
  void set_allocated_applies_to_lane_group_range(::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_lane_group_range);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_link_range_;
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* lane_group_ref_;
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_lane_group_range_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LaneRoadReferenceLayerTile

// uint32 here_tile_id = 1;
inline void LaneRoadReferenceLayerTile::clear_here_tile_id() {
  here_tile_id_ = 0u;
}
inline ::google::protobuf::uint32 LaneRoadReferenceLayerTile::here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile.here_tile_id)
  return here_tile_id_;
}
inline void LaneRoadReferenceLayerTile::set_here_tile_id(::google::protobuf::uint32 value) {
  
  here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile.here_tile_id)
}

// repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences lane_group_link_references = 2;
inline int LaneRoadReferenceLayerTile::lane_group_link_references_size() const {
  return lane_group_link_references_.size();
}
inline void LaneRoadReferenceLayerTile::clear_lane_group_link_references() {
  lane_group_link_references_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences* LaneRoadReferenceLayerTile::mutable_lane_group_link_references(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile.lane_group_link_references)
  return lane_group_link_references_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences >*
LaneRoadReferenceLayerTile::mutable_lane_group_link_references() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile.lane_group_link_references)
  return &lane_group_link_references_;
}
inline const ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences& LaneRoadReferenceLayerTile::lane_group_link_references(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile.lane_group_link_references)
  return lane_group_link_references_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences* LaneRoadReferenceLayerTile::add_lane_group_link_references() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile.lane_group_link_references)
  return lane_group_link_references_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupLinkReferences >&
LaneRoadReferenceLayerTile::lane_group_link_references() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile.lane_group_link_references)
  return lane_group_link_references_;
}

// repeated .com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences link_lane_group_references = 3;
inline int LaneRoadReferenceLayerTile::link_lane_group_references_size() const {
  return link_lane_group_references_.size();
}
inline void LaneRoadReferenceLayerTile::clear_link_lane_group_references() {
  link_lane_group_references_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences* LaneRoadReferenceLayerTile::mutable_link_lane_group_references(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile.link_lane_group_references)
  return link_lane_group_references_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences >*
LaneRoadReferenceLayerTile::mutable_link_lane_group_references() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile.link_lane_group_references)
  return &link_lane_group_references_;
}
inline const ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences& LaneRoadReferenceLayerTile::link_lane_group_references(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile.link_lane_group_references)
  return link_lane_group_references_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences* LaneRoadReferenceLayerTile::add_link_lane_group_references() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile.link_lane_group_references)
  return link_lane_group_references_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LinkLaneGroupReferences >&
LaneRoadReferenceLayerTile::link_lane_group_references() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LaneRoadReferenceLayerTile.link_lane_group_references)
  return link_lane_group_references_;
}

// -------------------------------------------------------------------

// LaneGroupLinkReferences

// uint64 lane_group_ref = 1;
inline void LaneGroupLinkReferences::clear_lane_group_ref() {
  lane_group_ref_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LaneGroupLinkReferences::lane_group_ref() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences.lane_group_ref)
  return lane_group_ref_;
}
inline void LaneGroupLinkReferences::set_lane_group_ref(::google::protobuf::uint64 value) {
  
  lane_group_ref_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences.lane_group_ref)
}

// repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference link_references = 2;
inline int LaneGroupLinkReferences::link_references_size() const {
  return link_references_.size();
}
inline void LaneGroupLinkReferences::clear_link_references() {
  link_references_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference* LaneGroupLinkReferences::mutable_link_references(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences.link_references)
  return link_references_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference >*
LaneGroupLinkReferences::mutable_link_references() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences.link_references)
  return &link_references_;
}
inline const ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference& LaneGroupLinkReferences::link_references(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences.link_references)
  return link_references_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference* LaneGroupLinkReferences::add_link_references() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences.link_references)
  return link_references_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::ParametricLinkReference >&
LaneGroupLinkReferences::link_references() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LaneGroupLinkReferences.link_references)
  return link_references_;
}

// -------------------------------------------------------------------

// LinkLaneGroupReferences

// uint32 link_local_ref = 1;
inline void LinkLaneGroupReferences::clear_link_local_ref() {
  link_local_ref_ = 0u;
}
inline ::google::protobuf::uint32 LinkLaneGroupReferences::link_local_ref() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences.link_local_ref)
  return link_local_ref_;
}
inline void LinkLaneGroupReferences::set_link_local_ref(::google::protobuf::uint32 value) {
  
  link_local_ref_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences.link_local_ref)
}

// repeated .com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference lane_group_references = 2;
inline int LinkLaneGroupReferences::lane_group_references_size() const {
  return lane_group_references_.size();
}
inline void LinkLaneGroupReferences::clear_lane_group_references() {
  lane_group_references_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference* LinkLaneGroupReferences::mutable_lane_group_references(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences.lane_group_references)
  return lane_group_references_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference >*
LinkLaneGroupReferences::mutable_lane_group_references() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences.lane_group_references)
  return &lane_group_references_;
}
inline const ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference& LinkLaneGroupReferences::lane_group_references(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences.lane_group_references)
  return lane_group_references_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference* LinkLaneGroupReferences::add_lane_group_references() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences.lane_group_references)
  return lane_group_references_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::ParametricLaneGroupReference >&
LinkLaneGroupReferences::lane_group_references() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LinkLaneGroupReferences.lane_group_references)
  return lane_group_references_;
}

// -------------------------------------------------------------------

// ParametricLinkReference

// .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 1;
inline bool ParametricLinkReference::has_applies_to_lane_group_range() const {
  return this != internal_default_instance() && applies_to_lane_group_range_ != nullptr;
}
inline const ::com::here::pb::hdmap::external::v1::common::ParametricRange& ParametricLinkReference::applies_to_lane_group_range() const {
  const ::com::here::pb::hdmap::external::v1::common::ParametricRange* p = applies_to_lane_group_range_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference.applies_to_lane_group_range)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::common::ParametricRange*>(
      &::com::here::pb::hdmap::external::v1::common::_ParametricRange_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::common::ParametricRange* ParametricLinkReference::release_applies_to_lane_group_range() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference.applies_to_lane_group_range)
  
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* temp = applies_to_lane_group_range_;
  applies_to_lane_group_range_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::external::v1::common::ParametricRange* ParametricLinkReference::mutable_applies_to_lane_group_range() {
  
  if (applies_to_lane_group_range_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::ParametricRange>(GetArenaNoVirtual());
    applies_to_lane_group_range_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference.applies_to_lane_group_range)
  return applies_to_lane_group_range_;
}
inline void ParametricLinkReference::set_allocated_applies_to_lane_group_range(::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_lane_group_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(applies_to_lane_group_range_);
  }
  if (applies_to_lane_group_range) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      applies_to_lane_group_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, applies_to_lane_group_range, submessage_arena);
    }
    
  } else {
    
  }
  applies_to_lane_group_range_ = applies_to_lane_group_range;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference.applies_to_lane_group_range)
}

// .com.here.pb.hdmap.external.v1.common.TiledLinkReference link_ref = 2;
inline bool ParametricLinkReference::has_link_ref() const {
  return this != internal_default_instance() && link_ref_ != nullptr;
}
inline const ::com::here::pb::hdmap::external::v1::common::TiledLinkReference& ParametricLinkReference::link_ref() const {
  const ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* p = link_ref_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference.link_ref)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::common::TiledLinkReference*>(
      &::com::here::pb::hdmap::external::v1::common::_TiledLinkReference_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* ParametricLinkReference::release_link_ref() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference.link_ref)
  
  ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* temp = link_ref_;
  link_ref_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* ParametricLinkReference::mutable_link_ref() {
  
  if (link_ref_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::TiledLinkReference>(GetArenaNoVirtual());
    link_ref_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference.link_ref)
  return link_ref_;
}
inline void ParametricLinkReference::set_allocated_link_ref(::com::here::pb::hdmap::external::v1::common::TiledLinkReference* link_ref) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(link_ref_);
  }
  if (link_ref) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      link_ref = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, link_ref, submessage_arena);
    }
    
  } else {
    
  }
  link_ref_ = link_ref;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference.link_ref)
}

// .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 3;
inline bool ParametricLinkReference::has_applies_to_link_range() const {
  return this != internal_default_instance() && applies_to_link_range_ != nullptr;
}
inline const ::com::here::pb::hdmap::external::v1::common::ParametricRange& ParametricLinkReference::applies_to_link_range() const {
  const ::com::here::pb::hdmap::external::v1::common::ParametricRange* p = applies_to_link_range_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference.applies_to_link_range)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::common::ParametricRange*>(
      &::com::here::pb::hdmap::external::v1::common::_ParametricRange_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::common::ParametricRange* ParametricLinkReference::release_applies_to_link_range() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference.applies_to_link_range)
  
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* temp = applies_to_link_range_;
  applies_to_link_range_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::external::v1::common::ParametricRange* ParametricLinkReference::mutable_applies_to_link_range() {
  
  if (applies_to_link_range_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::ParametricRange>(GetArenaNoVirtual());
    applies_to_link_range_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference.applies_to_link_range)
  return applies_to_link_range_;
}
inline void ParametricLinkReference::set_allocated_applies_to_link_range(::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_link_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(applies_to_link_range_);
  }
  if (applies_to_link_range) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      applies_to_link_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, applies_to_link_range, submessage_arena);
    }
    
  } else {
    
  }
  applies_to_link_range_ = applies_to_link_range;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.ParametricLinkReference.applies_to_link_range)
}

// -------------------------------------------------------------------

// ParametricLaneGroupReference

// .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_link_range = 1;
inline bool ParametricLaneGroupReference::has_applies_to_link_range() const {
  return this != internal_default_instance() && applies_to_link_range_ != nullptr;
}
inline const ::com::here::pb::hdmap::external::v1::common::ParametricRange& ParametricLaneGroupReference::applies_to_link_range() const {
  const ::com::here::pb::hdmap::external::v1::common::ParametricRange* p = applies_to_link_range_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference.applies_to_link_range)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::common::ParametricRange*>(
      &::com::here::pb::hdmap::external::v1::common::_ParametricRange_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::common::ParametricRange* ParametricLaneGroupReference::release_applies_to_link_range() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference.applies_to_link_range)
  
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* temp = applies_to_link_range_;
  applies_to_link_range_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::external::v1::common::ParametricRange* ParametricLaneGroupReference::mutable_applies_to_link_range() {
  
  if (applies_to_link_range_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::ParametricRange>(GetArenaNoVirtual());
    applies_to_link_range_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference.applies_to_link_range)
  return applies_to_link_range_;
}
inline void ParametricLaneGroupReference::set_allocated_applies_to_link_range(::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_link_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(applies_to_link_range_);
  }
  if (applies_to_link_range) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      applies_to_link_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, applies_to_link_range, submessage_arena);
    }
    
  } else {
    
  }
  applies_to_link_range_ = applies_to_link_range;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference.applies_to_link_range)
}

// .com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference lane_group_ref = 2;
inline bool ParametricLaneGroupReference::has_lane_group_ref() const {
  return this != internal_default_instance() && lane_group_ref_ != nullptr;
}
inline const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference& ParametricLaneGroupReference::lane_group_ref() const {
  const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* p = lane_group_ref_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference.lane_group_ref)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference*>(
      &::com::here::pb::hdmap::external::v1::common::_TiledLaneGroupReference_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* ParametricLaneGroupReference::release_lane_group_ref() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference.lane_group_ref)
  
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* temp = lane_group_ref_;
  lane_group_ref_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* ParametricLaneGroupReference::mutable_lane_group_ref() {
  
  if (lane_group_ref_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference>(GetArenaNoVirtual());
    lane_group_ref_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference.lane_group_ref)
  return lane_group_ref_;
}
inline void ParametricLaneGroupReference::set_allocated_lane_group_ref(::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* lane_group_ref) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(lane_group_ref_);
  }
  if (lane_group_ref) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      lane_group_ref = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lane_group_ref, submessage_arena);
    }
    
  } else {
    
  }
  lane_group_ref_ = lane_group_ref;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference.lane_group_ref)
}

// .com.here.pb.hdmap.external.v1.common.ParametricRange applies_to_lane_group_range = 3;
inline bool ParametricLaneGroupReference::has_applies_to_lane_group_range() const {
  return this != internal_default_instance() && applies_to_lane_group_range_ != nullptr;
}
inline const ::com::here::pb::hdmap::external::v1::common::ParametricRange& ParametricLaneGroupReference::applies_to_lane_group_range() const {
  const ::com::here::pb::hdmap::external::v1::common::ParametricRange* p = applies_to_lane_group_range_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference.applies_to_lane_group_range)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::common::ParametricRange*>(
      &::com::here::pb::hdmap::external::v1::common::_ParametricRange_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::common::ParametricRange* ParametricLaneGroupReference::release_applies_to_lane_group_range() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference.applies_to_lane_group_range)
  
  ::com::here::pb::hdmap::external::v1::common::ParametricRange* temp = applies_to_lane_group_range_;
  applies_to_lane_group_range_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::external::v1::common::ParametricRange* ParametricLaneGroupReference::mutable_applies_to_lane_group_range() {
  
  if (applies_to_lane_group_range_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::ParametricRange>(GetArenaNoVirtual());
    applies_to_lane_group_range_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference.applies_to_lane_group_range)
  return applies_to_lane_group_range_;
}
inline void ParametricLaneGroupReference::set_allocated_applies_to_lane_group_range(::com::here::pb::hdmap::external::v1::common::ParametricRange* applies_to_lane_group_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(applies_to_lane_group_range_);
  }
  if (applies_to_lane_group_range) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      applies_to_lane_group_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, applies_to_lane_group_range, submessage_arena);
    }
    
  } else {
    
  }
  applies_to_lane_group_range_ = applies_to_lane_group_range;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.ParametricLaneGroupReference.applies_to_lane_group_range)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace lanes
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2droad_2dreference_2eproto
