// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/lanes/layer-lane-topology.proto

#ifndef PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dtopology_2eproto
#define PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dtopology_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "com/here/pb/hdmap/external/v1/common/common.pb.h"
#include "com/here/pb/hdmap/external/v1/geometry/geometry.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dtopology_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dtopology_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dtopology_2eproto();
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace lanes {
class Lane;
class LaneDefaultTypeInternal;
extern LaneDefaultTypeInternal _Lane_default_instance_;
class LaneGroup;
class LaneGroupDefaultTypeInternal;
extern LaneGroupDefaultTypeInternal _LaneGroup_default_instance_;
class LaneGroupConnector;
class LaneGroupConnectorDefaultTypeInternal;
extern LaneGroupConnectorDefaultTypeInternal _LaneGroupConnector_default_instance_;
class LaneGroup_LaneGroupReferenceGeometry;
class LaneGroup_LaneGroupReferenceGeometryDefaultTypeInternal;
extern LaneGroup_LaneGroupReferenceGeometryDefaultTypeInternal _LaneGroup_LaneGroupReferenceGeometry_default_instance_;
class LaneTopologyLayerTile;
class LaneTopologyLayerTileDefaultTypeInternal;
extern LaneTopologyLayerTileDefaultTypeInternal _LaneTopologyLayerTile_default_instance_;
}  // namespace lanes
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::here::pb::hdmap::external::v1::lanes::Lane* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::lanes::Lane>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::lanes::LaneGroup* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::lanes::LaneGroup>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::lanes::LaneTopologyLayerTile* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::lanes::LaneTopologyLayerTile>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace lanes {

// ===================================================================

class LaneTopologyLayerTile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile) */ {
 public:
  LaneTopologyLayerTile();
  virtual ~LaneTopologyLayerTile();

  LaneTopologyLayerTile(const LaneTopologyLayerTile& from);

  inline LaneTopologyLayerTile& operator=(const LaneTopologyLayerTile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaneTopologyLayerTile(LaneTopologyLayerTile&& from) noexcept
    : LaneTopologyLayerTile() {
    *this = ::std::move(from);
  }

  inline LaneTopologyLayerTile& operator=(LaneTopologyLayerTile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LaneTopologyLayerTile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaneTopologyLayerTile* internal_default_instance() {
    return reinterpret_cast<const LaneTopologyLayerTile*>(
               &_LaneTopologyLayerTile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LaneTopologyLayerTile* other);
  friend void swap(LaneTopologyLayerTile& a, LaneTopologyLayerTile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaneTopologyLayerTile* New() const final {
    return CreateMaybeMessage<LaneTopologyLayerTile>(nullptr);
  }

  LaneTopologyLayerTile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LaneTopologyLayerTile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LaneTopologyLayerTile& from);
  void MergeFrom(const LaneTopologyLayerTile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaneTopologyLayerTile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroup lane_groups_starting_in_tile = 3;
  int lane_groups_starting_in_tile_size() const;
  void clear_lane_groups_starting_in_tile();
  static const int kLaneGroupsStartingInTileFieldNumber = 3;
  ::com::here::pb::hdmap::external::v1::lanes::LaneGroup* mutable_lane_groups_starting_in_tile(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroup >*
      mutable_lane_groups_starting_in_tile();
  const ::com::here::pb::hdmap::external::v1::lanes::LaneGroup& lane_groups_starting_in_tile(int index) const;
  ::com::here::pb::hdmap::external::v1::lanes::LaneGroup* add_lane_groups_starting_in_tile();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroup >&
      lane_groups_starting_in_tile() const;

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector lane_group_connectors_in_tile = 4;
  int lane_group_connectors_in_tile_size() const;
  void clear_lane_group_connectors_in_tile();
  static const int kLaneGroupConnectorsInTileFieldNumber = 4;
  ::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector* mutable_lane_group_connectors_in_tile(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector >*
      mutable_lane_group_connectors_in_tile();
  const ::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector& lane_group_connectors_in_tile(int index) const;
  ::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector* add_lane_group_connectors_in_tile();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector >&
      lane_group_connectors_in_tile() const;

  // repeated .com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference intersecting_lane_group_refs = 5;
  int intersecting_lane_group_refs_size() const;
  void clear_intersecting_lane_group_refs();
  static const int kIntersectingLaneGroupRefsFieldNumber = 5;
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* mutable_intersecting_lane_group_refs(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference >*
      mutable_intersecting_lane_group_refs();
  const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference& intersecting_lane_group_refs(int index) const;
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* add_intersecting_lane_group_refs();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference >&
      intersecting_lane_group_refs() const;

  // sint64 tile_center_here_2d_coordinate = 2;
  void clear_tile_center_here_2d_coordinate();
  static const int kTileCenterHere2DCoordinateFieldNumber = 2;
  ::google::protobuf::int64 tile_center_here_2d_coordinate() const;
  void set_tile_center_here_2d_coordinate(::google::protobuf::int64 value);

  // uint32 here_tile_id = 1;
  void clear_here_tile_id();
  static const int kHereTileIdFieldNumber = 1;
  ::google::protobuf::uint32 here_tile_id() const;
  void set_here_tile_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroup > lane_groups_starting_in_tile_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector > lane_group_connectors_in_tile_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference > intersecting_lane_group_refs_;
  ::google::protobuf::int64 tile_center_here_2d_coordinate_;
  ::google::protobuf::uint32 here_tile_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dtopology_2eproto;
};
// -------------------------------------------------------------------

class LaneGroup_LaneGroupReferenceGeometry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.lanes.LaneGroup.LaneGroupReferenceGeometry) */ {
 public:
  LaneGroup_LaneGroupReferenceGeometry();
  virtual ~LaneGroup_LaneGroupReferenceGeometry();

  LaneGroup_LaneGroupReferenceGeometry(const LaneGroup_LaneGroupReferenceGeometry& from);

  inline LaneGroup_LaneGroupReferenceGeometry& operator=(const LaneGroup_LaneGroupReferenceGeometry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaneGroup_LaneGroupReferenceGeometry(LaneGroup_LaneGroupReferenceGeometry&& from) noexcept
    : LaneGroup_LaneGroupReferenceGeometry() {
    *this = ::std::move(from);
  }

  inline LaneGroup_LaneGroupReferenceGeometry& operator=(LaneGroup_LaneGroupReferenceGeometry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LaneGroup_LaneGroupReferenceGeometry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaneGroup_LaneGroupReferenceGeometry* internal_default_instance() {
    return reinterpret_cast<const LaneGroup_LaneGroupReferenceGeometry*>(
               &_LaneGroup_LaneGroupReferenceGeometry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LaneGroup_LaneGroupReferenceGeometry* other);
  friend void swap(LaneGroup_LaneGroupReferenceGeometry& a, LaneGroup_LaneGroupReferenceGeometry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaneGroup_LaneGroupReferenceGeometry* New() const final {
    return CreateMaybeMessage<LaneGroup_LaneGroupReferenceGeometry>(nullptr);
  }

  LaneGroup_LaneGroupReferenceGeometry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LaneGroup_LaneGroupReferenceGeometry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LaneGroup_LaneGroupReferenceGeometry& from);
  void MergeFrom(const LaneGroup_LaneGroupReferenceGeometry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaneGroup_LaneGroupReferenceGeometry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.here.pb.hdmap.external.v1.geometry.LineString2dOffset left_boundary = 1;
  bool has_left_boundary() const;
  void clear_left_boundary();
  static const int kLeftBoundaryFieldNumber = 1;
  const ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset& left_boundary() const;
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* release_left_boundary();
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* mutable_left_boundary();
  void set_allocated_left_boundary(::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* left_boundary);

  // .com.here.pb.hdmap.external.v1.geometry.LineString2dOffset right_boundary = 2;
  bool has_right_boundary() const;
  void clear_right_boundary();
  static const int kRightBoundaryFieldNumber = 2;
  const ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset& right_boundary() const;
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* release_right_boundary();
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* mutable_right_boundary();
  void set_allocated_right_boundary(::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* right_boundary);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.lanes.LaneGroup.LaneGroupReferenceGeometry)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* left_boundary_;
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* right_boundary_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dtopology_2eproto;
};
// -------------------------------------------------------------------

class LaneGroup final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.lanes.LaneGroup) */ {
 public:
  LaneGroup();
  virtual ~LaneGroup();

  LaneGroup(const LaneGroup& from);

  inline LaneGroup& operator=(const LaneGroup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaneGroup(LaneGroup&& from) noexcept
    : LaneGroup() {
    *this = ::std::move(from);
  }

  inline LaneGroup& operator=(LaneGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LaneGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaneGroup* internal_default_instance() {
    return reinterpret_cast<const LaneGroup*>(
               &_LaneGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(LaneGroup* other);
  friend void swap(LaneGroup& a, LaneGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaneGroup* New() const final {
    return CreateMaybeMessage<LaneGroup>(nullptr);
  }

  LaneGroup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LaneGroup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LaneGroup& from);
  void MergeFrom(const LaneGroup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaneGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LaneGroup_LaneGroupReferenceGeometry LaneGroupReferenceGeometry;

  // accessors -------------------------------------------------------

  // repeated .com.here.pb.hdmap.external.v1.lanes.Lane lanes = 4;
  int lanes_size() const;
  void clear_lanes();
  static const int kLanesFieldNumber = 4;
  ::com::here::pb::hdmap::external::v1::lanes::Lane* mutable_lanes(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::Lane >*
      mutable_lanes();
  const ::com::here::pb::hdmap::external::v1::lanes::Lane& lanes(int index) const;
  ::com::here::pb::hdmap::external::v1::lanes::Lane* add_lanes();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::Lane >&
      lanes() const;

  // repeated uint32 intersects_tiles = 6;
  int intersects_tiles_size() const;
  void clear_intersects_tiles();
  static const int kIntersectsTilesFieldNumber = 6;
  ::google::protobuf::uint32 intersects_tiles(int index) const;
  void set_intersects_tiles(int index, ::google::protobuf::uint32 value);
  void add_intersects_tiles(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      intersects_tiles() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_intersects_tiles();

  // .com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference end_lane_group_connector_ref = 3;
  bool has_end_lane_group_connector_ref() const;
  void clear_end_lane_group_connector_ref();
  static const int kEndLaneGroupConnectorRefFieldNumber = 3;
  const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference& end_lane_group_connector_ref() const;
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference* release_end_lane_group_connector_ref();
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference* mutable_end_lane_group_connector_ref();
  void set_allocated_end_lane_group_connector_ref(::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference* end_lane_group_connector_ref);

  // .com.here.pb.hdmap.external.v1.lanes.LaneGroup.LaneGroupReferenceGeometry boundary_geometry = 5;
  bool has_boundary_geometry() const;
  void clear_boundary_geometry();
  static const int kBoundaryGeometryFieldNumber = 5;
  const ::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry& boundary_geometry() const;
  ::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry* release_boundary_geometry();
  ::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry* mutable_boundary_geometry();
  void set_allocated_boundary_geometry(::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry* boundary_geometry);

  // uint64 lane_group_id = 1;
  void clear_lane_group_id();
  static const int kLaneGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 lane_group_id() const;
  void set_lane_group_id(::google::protobuf::uint64 value);

  // uint64 start_lane_group_connector_ref = 2;
  void clear_start_lane_group_connector_ref();
  static const int kStartLaneGroupConnectorRefFieldNumber = 2;
  ::google::protobuf::uint64 start_lane_group_connector_ref() const;
  void set_start_lane_group_connector_ref(::google::protobuf::uint64 value);

  // uint32 lane_group_length_meters = 7;
  void clear_lane_group_length_meters();
  static const int kLaneGroupLengthMetersFieldNumber = 7;
  ::google::protobuf::uint32 lane_group_length_meters() const;
  void set_lane_group_length_meters(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.lanes.LaneGroup)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::Lane > lanes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > intersects_tiles_;
  mutable std::atomic<int> _intersects_tiles_cached_byte_size_;
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference* end_lane_group_connector_ref_;
  ::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry* boundary_geometry_;
  ::google::protobuf::uint64 lane_group_id_;
  ::google::protobuf::uint64 start_lane_group_connector_ref_;
  ::google::protobuf::uint32 lane_group_length_meters_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dtopology_2eproto;
};
// -------------------------------------------------------------------

class LaneGroupConnector final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector) */ {
 public:
  LaneGroupConnector();
  virtual ~LaneGroupConnector();

  LaneGroupConnector(const LaneGroupConnector& from);

  inline LaneGroupConnector& operator=(const LaneGroupConnector& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaneGroupConnector(LaneGroupConnector&& from) noexcept
    : LaneGroupConnector() {
    *this = ::std::move(from);
  }

  inline LaneGroupConnector& operator=(LaneGroupConnector&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LaneGroupConnector& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaneGroupConnector* internal_default_instance() {
    return reinterpret_cast<const LaneGroupConnector*>(
               &_LaneGroupConnector_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(LaneGroupConnector* other);
  friend void swap(LaneGroupConnector& a, LaneGroupConnector& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaneGroupConnector* New() const final {
    return CreateMaybeMessage<LaneGroupConnector>(nullptr);
  }

  LaneGroupConnector* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LaneGroupConnector>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LaneGroupConnector& from);
  void MergeFrom(const LaneGroupConnector& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaneGroupConnector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference connected_lane_group_refs = 3;
  int connected_lane_group_refs_size() const;
  void clear_connected_lane_group_refs();
  static const int kConnectedLaneGroupRefsFieldNumber = 3;
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* mutable_connected_lane_group_refs(int index);
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference >*
      mutable_connected_lane_group_refs();
  const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference& connected_lane_group_refs(int index) const;
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* add_connected_lane_group_refs();
  const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference >&
      connected_lane_group_refs() const;

  // .com.here.pb.hdmap.external.v1.geometry.LineString2dOffset boundary_geometry = 2;
  bool has_boundary_geometry() const;
  void clear_boundary_geometry();
  static const int kBoundaryGeometryFieldNumber = 2;
  const ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset& boundary_geometry() const;
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* release_boundary_geometry();
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* mutable_boundary_geometry();
  void set_allocated_boundary_geometry(::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* boundary_geometry);

  // uint64 lane_group_connector_id = 1;
  void clear_lane_group_connector_id();
  static const int kLaneGroupConnectorIdFieldNumber = 1;
  ::google::protobuf::uint64 lane_group_connector_id() const;
  void set_lane_group_connector_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference > connected_lane_group_refs_;
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* boundary_geometry_;
  ::google::protobuf::uint64 lane_group_connector_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dtopology_2eproto;
};
// -------------------------------------------------------------------

class Lane final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.lanes.Lane) */ {
 public:
  Lane();
  virtual ~Lane();

  Lane(const Lane& from);

  inline Lane& operator=(const Lane& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Lane(Lane&& from) noexcept
    : Lane() {
    *this = ::std::move(from);
  }

  inline Lane& operator=(Lane&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Lane& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Lane* internal_default_instance() {
    return reinterpret_cast<const Lane*>(
               &_Lane_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Lane* other);
  friend void swap(Lane& a, Lane& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Lane* New() const final {
    return CreateMaybeMessage<Lane>(nullptr);
  }

  Lane* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Lane>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Lane& from);
  void MergeFrom(const Lane& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Lane* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 start_lane_connector_number = 1;
  void clear_start_lane_connector_number();
  static const int kStartLaneConnectorNumberFieldNumber = 1;
  ::google::protobuf::uint32 start_lane_connector_number() const;
  void set_start_lane_connector_number(::google::protobuf::uint32 value);

  // uint32 end_lane_connector_number = 2;
  void clear_end_lane_connector_number();
  static const int kEndLaneConnectorNumberFieldNumber = 2;
  ::google::protobuf::uint32 end_lane_connector_number() const;
  void set_end_lane_connector_number(::google::protobuf::uint32 value);

  // bool is_transitioning = 3;
  void clear_is_transitioning();
  static const int kIsTransitioningFieldNumber = 3;
  bool is_transitioning() const;
  void set_is_transitioning(bool value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.lanes.Lane)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 start_lane_connector_number_;
  ::google::protobuf::uint32 end_lane_connector_number_;
  bool is_transitioning_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dtopology_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LaneTopologyLayerTile

// uint32 here_tile_id = 1;
inline void LaneTopologyLayerTile::clear_here_tile_id() {
  here_tile_id_ = 0u;
}
inline ::google::protobuf::uint32 LaneTopologyLayerTile::here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.here_tile_id)
  return here_tile_id_;
}
inline void LaneTopologyLayerTile::set_here_tile_id(::google::protobuf::uint32 value) {
  
  here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.here_tile_id)
}

// sint64 tile_center_here_2d_coordinate = 2;
inline void LaneTopologyLayerTile::clear_tile_center_here_2d_coordinate() {
  tile_center_here_2d_coordinate_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 LaneTopologyLayerTile::tile_center_here_2d_coordinate() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.tile_center_here_2d_coordinate)
  return tile_center_here_2d_coordinate_;
}
inline void LaneTopologyLayerTile::set_tile_center_here_2d_coordinate(::google::protobuf::int64 value) {
  
  tile_center_here_2d_coordinate_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.tile_center_here_2d_coordinate)
}

// repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroup lane_groups_starting_in_tile = 3;
inline int LaneTopologyLayerTile::lane_groups_starting_in_tile_size() const {
  return lane_groups_starting_in_tile_.size();
}
inline void LaneTopologyLayerTile::clear_lane_groups_starting_in_tile() {
  lane_groups_starting_in_tile_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::lanes::LaneGroup* LaneTopologyLayerTile::mutable_lane_groups_starting_in_tile(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.lane_groups_starting_in_tile)
  return lane_groups_starting_in_tile_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroup >*
LaneTopologyLayerTile::mutable_lane_groups_starting_in_tile() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.lane_groups_starting_in_tile)
  return &lane_groups_starting_in_tile_;
}
inline const ::com::here::pb::hdmap::external::v1::lanes::LaneGroup& LaneTopologyLayerTile::lane_groups_starting_in_tile(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.lane_groups_starting_in_tile)
  return lane_groups_starting_in_tile_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::lanes::LaneGroup* LaneTopologyLayerTile::add_lane_groups_starting_in_tile() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.lane_groups_starting_in_tile)
  return lane_groups_starting_in_tile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroup >&
LaneTopologyLayerTile::lane_groups_starting_in_tile() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.lane_groups_starting_in_tile)
  return lane_groups_starting_in_tile_;
}

// repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector lane_group_connectors_in_tile = 4;
inline int LaneTopologyLayerTile::lane_group_connectors_in_tile_size() const {
  return lane_group_connectors_in_tile_.size();
}
inline void LaneTopologyLayerTile::clear_lane_group_connectors_in_tile() {
  lane_group_connectors_in_tile_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector* LaneTopologyLayerTile::mutable_lane_group_connectors_in_tile(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.lane_group_connectors_in_tile)
  return lane_group_connectors_in_tile_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector >*
LaneTopologyLayerTile::mutable_lane_group_connectors_in_tile() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.lane_group_connectors_in_tile)
  return &lane_group_connectors_in_tile_;
}
inline const ::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector& LaneTopologyLayerTile::lane_group_connectors_in_tile(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.lane_group_connectors_in_tile)
  return lane_group_connectors_in_tile_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector* LaneTopologyLayerTile::add_lane_group_connectors_in_tile() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.lane_group_connectors_in_tile)
  return lane_group_connectors_in_tile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupConnector >&
LaneTopologyLayerTile::lane_group_connectors_in_tile() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.lane_group_connectors_in_tile)
  return lane_group_connectors_in_tile_;
}

// repeated .com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference intersecting_lane_group_refs = 5;
inline int LaneTopologyLayerTile::intersecting_lane_group_refs_size() const {
  return intersecting_lane_group_refs_.size();
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* LaneTopologyLayerTile::mutable_intersecting_lane_group_refs(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.intersecting_lane_group_refs)
  return intersecting_lane_group_refs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference >*
LaneTopologyLayerTile::mutable_intersecting_lane_group_refs() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.intersecting_lane_group_refs)
  return &intersecting_lane_group_refs_;
}
inline const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference& LaneTopologyLayerTile::intersecting_lane_group_refs(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.intersecting_lane_group_refs)
  return intersecting_lane_group_refs_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* LaneTopologyLayerTile::add_intersecting_lane_group_refs() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.intersecting_lane_group_refs)
  return intersecting_lane_group_refs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference >&
LaneTopologyLayerTile::intersecting_lane_group_refs() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LaneTopologyLayerTile.intersecting_lane_group_refs)
  return intersecting_lane_group_refs_;
}

// -------------------------------------------------------------------

// LaneGroup_LaneGroupReferenceGeometry

// .com.here.pb.hdmap.external.v1.geometry.LineString2dOffset left_boundary = 1;
inline bool LaneGroup_LaneGroupReferenceGeometry::has_left_boundary() const {
  return this != internal_default_instance() && left_boundary_ != nullptr;
}
inline const ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset& LaneGroup_LaneGroupReferenceGeometry::left_boundary() const {
  const ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* p = left_boundary_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroup.LaneGroupReferenceGeometry.left_boundary)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset*>(
      &::com::here::pb::hdmap::external::v1::geometry::_LineString2dOffset_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* LaneGroup_LaneGroupReferenceGeometry::release_left_boundary() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.LaneGroup.LaneGroupReferenceGeometry.left_boundary)
  
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* temp = left_boundary_;
  left_boundary_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* LaneGroup_LaneGroupReferenceGeometry::mutable_left_boundary() {
  
  if (left_boundary_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset>(GetArenaNoVirtual());
    left_boundary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGroup.LaneGroupReferenceGeometry.left_boundary)
  return left_boundary_;
}
inline void LaneGroup_LaneGroupReferenceGeometry::set_allocated_left_boundary(::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* left_boundary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(left_boundary_);
  }
  if (left_boundary) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      left_boundary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, left_boundary, submessage_arena);
    }
    
  } else {
    
  }
  left_boundary_ = left_boundary;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.LaneGroup.LaneGroupReferenceGeometry.left_boundary)
}

// .com.here.pb.hdmap.external.v1.geometry.LineString2dOffset right_boundary = 2;
inline bool LaneGroup_LaneGroupReferenceGeometry::has_right_boundary() const {
  return this != internal_default_instance() && right_boundary_ != nullptr;
}
inline const ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset& LaneGroup_LaneGroupReferenceGeometry::right_boundary() const {
  const ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* p = right_boundary_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroup.LaneGroupReferenceGeometry.right_boundary)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset*>(
      &::com::here::pb::hdmap::external::v1::geometry::_LineString2dOffset_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* LaneGroup_LaneGroupReferenceGeometry::release_right_boundary() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.LaneGroup.LaneGroupReferenceGeometry.right_boundary)
  
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* temp = right_boundary_;
  right_boundary_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* LaneGroup_LaneGroupReferenceGeometry::mutable_right_boundary() {
  
  if (right_boundary_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset>(GetArenaNoVirtual());
    right_boundary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGroup.LaneGroupReferenceGeometry.right_boundary)
  return right_boundary_;
}
inline void LaneGroup_LaneGroupReferenceGeometry::set_allocated_right_boundary(::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* right_boundary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(right_boundary_);
  }
  if (right_boundary) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      right_boundary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, right_boundary, submessage_arena);
    }
    
  } else {
    
  }
  right_boundary_ = right_boundary;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.LaneGroup.LaneGroupReferenceGeometry.right_boundary)
}

// -------------------------------------------------------------------

// LaneGroup

// uint64 lane_group_id = 1;
inline void LaneGroup::clear_lane_group_id() {
  lane_group_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LaneGroup::lane_group_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroup.lane_group_id)
  return lane_group_id_;
}
inline void LaneGroup::set_lane_group_id(::google::protobuf::uint64 value) {
  
  lane_group_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneGroup.lane_group_id)
}

// uint64 start_lane_group_connector_ref = 2;
inline void LaneGroup::clear_start_lane_group_connector_ref() {
  start_lane_group_connector_ref_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LaneGroup::start_lane_group_connector_ref() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroup.start_lane_group_connector_ref)
  return start_lane_group_connector_ref_;
}
inline void LaneGroup::set_start_lane_group_connector_ref(::google::protobuf::uint64 value) {
  
  start_lane_group_connector_ref_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneGroup.start_lane_group_connector_ref)
}

// .com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference end_lane_group_connector_ref = 3;
inline bool LaneGroup::has_end_lane_group_connector_ref() const {
  return this != internal_default_instance() && end_lane_group_connector_ref_ != nullptr;
}
inline const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference& LaneGroup::end_lane_group_connector_ref() const {
  const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference* p = end_lane_group_connector_ref_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroup.end_lane_group_connector_ref)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference*>(
      &::com::here::pb::hdmap::external::v1::common::_TiledLaneGroupConnectorReference_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference* LaneGroup::release_end_lane_group_connector_ref() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.LaneGroup.end_lane_group_connector_ref)
  
  ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference* temp = end_lane_group_connector_ref_;
  end_lane_group_connector_ref_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference* LaneGroup::mutable_end_lane_group_connector_ref() {
  
  if (end_lane_group_connector_ref_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference>(GetArenaNoVirtual());
    end_lane_group_connector_ref_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGroup.end_lane_group_connector_ref)
  return end_lane_group_connector_ref_;
}
inline void LaneGroup::set_allocated_end_lane_group_connector_ref(::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference* end_lane_group_connector_ref) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_lane_group_connector_ref_);
  }
  if (end_lane_group_connector_ref) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      end_lane_group_connector_ref = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_lane_group_connector_ref, submessage_arena);
    }
    
  } else {
    
  }
  end_lane_group_connector_ref_ = end_lane_group_connector_ref;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.LaneGroup.end_lane_group_connector_ref)
}

// repeated .com.here.pb.hdmap.external.v1.lanes.Lane lanes = 4;
inline int LaneGroup::lanes_size() const {
  return lanes_.size();
}
inline void LaneGroup::clear_lanes() {
  lanes_.Clear();
}
inline ::com::here::pb::hdmap::external::v1::lanes::Lane* LaneGroup::mutable_lanes(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGroup.lanes)
  return lanes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::Lane >*
LaneGroup::mutable_lanes() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LaneGroup.lanes)
  return &lanes_;
}
inline const ::com::here::pb::hdmap::external::v1::lanes::Lane& LaneGroup::lanes(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroup.lanes)
  return lanes_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::lanes::Lane* LaneGroup::add_lanes() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LaneGroup.lanes)
  return lanes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::Lane >&
LaneGroup::lanes() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LaneGroup.lanes)
  return lanes_;
}

// .com.here.pb.hdmap.external.v1.lanes.LaneGroup.LaneGroupReferenceGeometry boundary_geometry = 5;
inline bool LaneGroup::has_boundary_geometry() const {
  return this != internal_default_instance() && boundary_geometry_ != nullptr;
}
inline void LaneGroup::clear_boundary_geometry() {
  if (GetArenaNoVirtual() == nullptr && boundary_geometry_ != nullptr) {
    delete boundary_geometry_;
  }
  boundary_geometry_ = nullptr;
}
inline const ::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry& LaneGroup::boundary_geometry() const {
  const ::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry* p = boundary_geometry_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroup.boundary_geometry)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry*>(
      &::com::here::pb::hdmap::external::v1::lanes::_LaneGroup_LaneGroupReferenceGeometry_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry* LaneGroup::release_boundary_geometry() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.LaneGroup.boundary_geometry)
  
  ::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry* temp = boundary_geometry_;
  boundary_geometry_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry* LaneGroup::mutable_boundary_geometry() {
  
  if (boundary_geometry_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry>(GetArenaNoVirtual());
    boundary_geometry_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGroup.boundary_geometry)
  return boundary_geometry_;
}
inline void LaneGroup::set_allocated_boundary_geometry(::com::here::pb::hdmap::external::v1::lanes::LaneGroup_LaneGroupReferenceGeometry* boundary_geometry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete boundary_geometry_;
  }
  if (boundary_geometry) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      boundary_geometry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boundary_geometry, submessage_arena);
    }
    
  } else {
    
  }
  boundary_geometry_ = boundary_geometry;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.LaneGroup.boundary_geometry)
}

// repeated uint32 intersects_tiles = 6;
inline int LaneGroup::intersects_tiles_size() const {
  return intersects_tiles_.size();
}
inline void LaneGroup::clear_intersects_tiles() {
  intersects_tiles_.Clear();
}
inline ::google::protobuf::uint32 LaneGroup::intersects_tiles(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroup.intersects_tiles)
  return intersects_tiles_.Get(index);
}
inline void LaneGroup::set_intersects_tiles(int index, ::google::protobuf::uint32 value) {
  intersects_tiles_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneGroup.intersects_tiles)
}
inline void LaneGroup::add_intersects_tiles(::google::protobuf::uint32 value) {
  intersects_tiles_.Add(value);
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LaneGroup.intersects_tiles)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LaneGroup::intersects_tiles() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LaneGroup.intersects_tiles)
  return intersects_tiles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LaneGroup::mutable_intersects_tiles() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LaneGroup.intersects_tiles)
  return &intersects_tiles_;
}

// uint32 lane_group_length_meters = 7;
inline void LaneGroup::clear_lane_group_length_meters() {
  lane_group_length_meters_ = 0u;
}
inline ::google::protobuf::uint32 LaneGroup::lane_group_length_meters() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroup.lane_group_length_meters)
  return lane_group_length_meters_;
}
inline void LaneGroup::set_lane_group_length_meters(::google::protobuf::uint32 value) {
  
  lane_group_length_meters_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneGroup.lane_group_length_meters)
}

// -------------------------------------------------------------------

// LaneGroupConnector

// uint64 lane_group_connector_id = 1;
inline void LaneGroupConnector::clear_lane_group_connector_id() {
  lane_group_connector_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LaneGroupConnector::lane_group_connector_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector.lane_group_connector_id)
  return lane_group_connector_id_;
}
inline void LaneGroupConnector::set_lane_group_connector_id(::google::protobuf::uint64 value) {
  
  lane_group_connector_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector.lane_group_connector_id)
}

// .com.here.pb.hdmap.external.v1.geometry.LineString2dOffset boundary_geometry = 2;
inline bool LaneGroupConnector::has_boundary_geometry() const {
  return this != internal_default_instance() && boundary_geometry_ != nullptr;
}
inline const ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset& LaneGroupConnector::boundary_geometry() const {
  const ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* p = boundary_geometry_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector.boundary_geometry)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset*>(
      &::com::here::pb::hdmap::external::v1::geometry::_LineString2dOffset_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* LaneGroupConnector::release_boundary_geometry() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector.boundary_geometry)
  
  ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* temp = boundary_geometry_;
  boundary_geometry_ = nullptr;
  return temp;
}
inline ::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* LaneGroupConnector::mutable_boundary_geometry() {
  
  if (boundary_geometry_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset>(GetArenaNoVirtual());
    boundary_geometry_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector.boundary_geometry)
  return boundary_geometry_;
}
inline void LaneGroupConnector::set_allocated_boundary_geometry(::com::here::pb::hdmap::external::v1::geometry::LineString2dOffset* boundary_geometry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(boundary_geometry_);
  }
  if (boundary_geometry) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      boundary_geometry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boundary_geometry, submessage_arena);
    }
    
  } else {
    
  }
  boundary_geometry_ = boundary_geometry;
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector.boundary_geometry)
}

// repeated .com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference connected_lane_group_refs = 3;
inline int LaneGroupConnector::connected_lane_group_refs_size() const {
  return connected_lane_group_refs_.size();
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* LaneGroupConnector::mutable_connected_lane_group_refs(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector.connected_lane_group_refs)
  return connected_lane_group_refs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference >*
LaneGroupConnector::mutable_connected_lane_group_refs() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector.connected_lane_group_refs)
  return &connected_lane_group_refs_;
}
inline const ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference& LaneGroupConnector::connected_lane_group_refs(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector.connected_lane_group_refs)
  return connected_lane_group_refs_.Get(index);
}
inline ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* LaneGroupConnector::add_connected_lane_group_refs() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector.connected_lane_group_refs)
  return connected_lane_group_refs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference >&
LaneGroupConnector::connected_lane_group_refs() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LaneGroupConnector.connected_lane_group_refs)
  return connected_lane_group_refs_;
}

// -------------------------------------------------------------------

// Lane

// uint32 start_lane_connector_number = 1;
inline void Lane::clear_start_lane_connector_number() {
  start_lane_connector_number_ = 0u;
}
inline ::google::protobuf::uint32 Lane::start_lane_connector_number() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.Lane.start_lane_connector_number)
  return start_lane_connector_number_;
}
inline void Lane::set_start_lane_connector_number(::google::protobuf::uint32 value) {
  
  start_lane_connector_number_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.Lane.start_lane_connector_number)
}

// uint32 end_lane_connector_number = 2;
inline void Lane::clear_end_lane_connector_number() {
  end_lane_connector_number_ = 0u;
}
inline ::google::protobuf::uint32 Lane::end_lane_connector_number() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.Lane.end_lane_connector_number)
  return end_lane_connector_number_;
}
inline void Lane::set_end_lane_connector_number(::google::protobuf::uint32 value) {
  
  end_lane_connector_number_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.Lane.end_lane_connector_number)
}

// bool is_transitioning = 3;
inline void Lane::clear_is_transitioning() {
  is_transitioning_ = false;
}
inline bool Lane::is_transitioning() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.Lane.is_transitioning)
  return is_transitioning_;
}
inline void Lane::set_is_transitioning(bool value) {
  
  is_transitioning_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.Lane.is_transitioning)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace lanes
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dtopology_2eproto
