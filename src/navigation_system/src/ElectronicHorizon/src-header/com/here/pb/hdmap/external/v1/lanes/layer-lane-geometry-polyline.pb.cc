// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/lanes/layer-lane-geometry-polyline.proto

#include "com/here/pb/hdmap/external/v1/lanes/layer-lane-geometry-polyline.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LineString3dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LaneBoundaryGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LaneGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_LaneGroupGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto;
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace lanes {
class LaneGeometryPolylineLayerTileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaneGeometryPolylineLayerTile> _instance;
} _LaneGeometryPolylineLayerTile_default_instance_;
class LaneGroupGeometryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaneGroupGeometry> _instance;
} _LaneGroupGeometry_default_instance_;
class LaneGeometryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaneGeometry> _instance;
} _LaneGeometry_default_instance_;
class LaneBoundaryGeometryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaneBoundaryGeometry> _instance;
} _LaneBoundaryGeometry_default_instance_;
}  // namespace lanes
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
static void InitDefaultsLaneGeometryPolylineLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::lanes::_LaneGeometryPolylineLayerTile_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::lanes::LaneGeometryPolylineLayerTile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::lanes::LaneGeometryPolylineLayerTile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LaneGeometryPolylineLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLaneGeometryPolylineLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto}, {
      &scc_info_Point3d_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base,
      &scc_info_LaneGroupGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base,}};

static void InitDefaultsLaneGroupGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::lanes::_LaneGroupGeometry_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_LaneGroupGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsLaneGroupGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto}, {
      &scc_info_LineString3dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base,
      &scc_info_LaneGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base,
      &scc_info_LaneBoundaryGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base,}};

static void InitDefaultsLaneGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::lanes::_LaneGeometry_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::lanes::LaneGeometry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::lanes::LaneGeometry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LaneGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLaneGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto}, {
      &scc_info_LineString3dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base,}};

static void InitDefaultsLaneBoundaryGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::here::pb::hdmap::external::v1::lanes::_LaneBoundaryGeometry_default_instance_;
    new (ptr) ::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LaneBoundaryGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLaneBoundaryGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto}, {
      &scc_info_LineString3dOffset_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto.base,}};

void InitDefaults_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LaneGeometryPolylineLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LaneGroupGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LaneGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LaneBoundaryGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGeometryPolylineLayerTile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGeometryPolylineLayerTile, here_tile_id_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGeometryPolylineLayerTile, tile_center_here_3d_coordinate_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGeometryPolylineLayerTile, lane_group_geometries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry, lane_group_ref_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry, reference_geometry_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry, lane_geometries_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry, lane_boundary_geometries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGeometry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGeometry, lane_path_geometry_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGeometry, left_lane_boundary_number_),
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneGeometry, right_lane_boundary_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry, geometry_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::here::pb::hdmap::external::v1::lanes::LaneGeometryPolylineLayerTile)},
  { 8, -1, sizeof(::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry)},
  { 17, -1, sizeof(::com::here::pb::hdmap::external::v1::lanes::LaneGeometry)},
  { 25, -1, sizeof(::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::lanes::_LaneGeometryPolylineLayerTile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::lanes::_LaneGroupGeometry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::lanes::_LaneGeometry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::here::pb::hdmap::external::v1::lanes::_LaneBoundaryGeometry_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto = {
  {}, AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto, "com/here/pb/hdmap/external/v1/lanes/layer-lane-geometry-polyline.proto", schemas,
  file_default_instances, TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::offsets,
  file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto, 4, file_level_enum_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto, file_level_service_descriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto,
};

const char descriptor_table_protodef_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto[] =
  "\nFcom/here/pb/hdmap/external/v1/lanes/la"
  "yer-lane-geometry-polyline.proto\022#com.he"
  "re.pb.hdmap.external.v1.lanes\0325com/here/"
  "pb/hdmap/external/v1/geometry/geometry.p"
  "roto\"\345\001\n\035LaneGeometryPolylineLayerTile\022\024"
  "\n\014here_tile_id\030\001 \001(\r\022W\n\036tile_center_here"
  "_3d_coordinate\030\002 \001(\0132/.com.here.pb.hdmap"
  ".external.v1.geometry.Point3d\022U\n\025lane_gr"
  "oup_geometries\030\003 \003(\01326.com.here.pb.hdmap"
  ".external.v1.lanes.LaneGroupGeometry\"\254\002\n"
  "\021LaneGroupGeometry\022\026\n\016lane_group_ref\030\001 \001"
  "(\004\022V\n\022reference_geometry\030\002 \001(\0132:.com.her"
  "e.pb.hdmap.external.v1.geometry.LineStri"
  "ng3dOffset\022J\n\017lane_geometries\030\003 \003(\01321.co"
  "m.here.pb.hdmap.external.v1.lanes.LaneGe"
  "ometry\022[\n\030lane_boundary_geometries\030\004 \003(\013"
  "29.com.here.pb.hdmap.external.v1.lanes.L"
  "aneBoundaryGeometry\"\255\001\n\014LaneGeometry\022V\n\022"
  "lane_path_geometry\030\001 \001(\0132:.com.here.pb.h"
  "dmap.external.v1.geometry.LineString3dOf"
  "fset\022!\n\031left_lane_boundary_number\030\002 \001(\r\022"
  "\"\n\032right_lane_boundary_number\030\003 \001(\r\"d\n\024L"
  "aneBoundaryGeometry\022L\n\010geometry\030\001 \001(\0132:."
  "com.here.pb.hdmap.external.v1.geometry.L"
  "ineString3dOffsetb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto = {
  false, InitDefaults_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto, 
  descriptor_table_protodef_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto,
  "com/here/pb/hdmap/external/v1/lanes/layer-lane-geometry-polyline.proto", &assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto, 985,
};

void AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto = []() { AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto(); return true; }();
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace lanes {

// ===================================================================

void LaneGeometryPolylineLayerTile::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::lanes::_LaneGeometryPolylineLayerTile_default_instance_._instance.get_mutable()->tile_center_here_3d_coordinate_ = const_cast< ::com::here::pb::hdmap::external::v1::geometry::Point3d*>(
      ::com::here::pb::hdmap::external::v1::geometry::Point3d::internal_default_instance());
}
class LaneGeometryPolylineLayerTile::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::geometry::Point3d& tile_center_here_3d_coordinate(const LaneGeometryPolylineLayerTile* msg);
};

const ::com::here::pb::hdmap::external::v1::geometry::Point3d&
LaneGeometryPolylineLayerTile::HasBitSetters::tile_center_here_3d_coordinate(const LaneGeometryPolylineLayerTile* msg) {
  return *msg->tile_center_here_3d_coordinate_;
}
void LaneGeometryPolylineLayerTile::clear_tile_center_here_3d_coordinate() {
  if (GetArenaNoVirtual() == nullptr && tile_center_here_3d_coordinate_ != nullptr) {
    delete tile_center_here_3d_coordinate_;
  }
  tile_center_here_3d_coordinate_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaneGeometryPolylineLayerTile::kHereTileIdFieldNumber;
const int LaneGeometryPolylineLayerTile::kTileCenterHere3DCoordinateFieldNumber;
const int LaneGeometryPolylineLayerTile::kLaneGroupGeometriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaneGeometryPolylineLayerTile::LaneGeometryPolylineLayerTile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
}
LaneGeometryPolylineLayerTile::LaneGeometryPolylineLayerTile(const LaneGeometryPolylineLayerTile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      lane_group_geometries_(from.lane_group_geometries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tile_center_here_3d_coordinate()) {
    tile_center_here_3d_coordinate_ = new ::com::here::pb::hdmap::external::v1::geometry::Point3d(*from.tile_center_here_3d_coordinate_);
  } else {
    tile_center_here_3d_coordinate_ = nullptr;
  }
  here_tile_id_ = from.here_tile_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
}

void LaneGeometryPolylineLayerTile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LaneGeometryPolylineLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base);
  ::memset(&tile_center_here_3d_coordinate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&here_tile_id_) -
      reinterpret_cast<char*>(&tile_center_here_3d_coordinate_)) + sizeof(here_tile_id_));
}

LaneGeometryPolylineLayerTile::~LaneGeometryPolylineLayerTile() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  SharedDtor();
}

void LaneGeometryPolylineLayerTile::SharedDtor() {
  if (this != internal_default_instance()) delete tile_center_here_3d_coordinate_;
}

void LaneGeometryPolylineLayerTile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaneGeometryPolylineLayerTile& LaneGeometryPolylineLayerTile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaneGeometryPolylineLayerTile_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base);
  return *internal_default_instance();
}


void LaneGeometryPolylineLayerTile::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lane_group_geometries_.Clear();
  if (GetArenaNoVirtual() == nullptr && tile_center_here_3d_coordinate_ != nullptr) {
    delete tile_center_here_3d_coordinate_;
  }
  tile_center_here_3d_coordinate_ = nullptr;
  here_tile_id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaneGeometryPolylineLayerTile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaneGeometryPolylineLayerTile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 here_tile_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_here_tile_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .com.here.pb.hdmap.external.v1.geometry.Point3d tile_center_here_3d_coordinate = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::geometry::Point3d::_InternalParse;
        object = msg->mutable_tile_center_here_3d_coordinate();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry lane_group_geometries = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry::_InternalParse;
          object = msg->add_lane_group_geometries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaneGeometryPolylineLayerTile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 here_tile_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.geometry.Point3d tile_center_here_3d_coordinate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tile_center_here_3d_coordinate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry lane_group_geometries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lane_group_geometries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaneGeometryPolylineLayerTile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->here_tile_id(), output);
  }

  // .com.here.pb.hdmap.external.v1.geometry.Point3d tile_center_here_3d_coordinate = 2;
  if (this->has_tile_center_here_3d_coordinate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::tile_center_here_3d_coordinate(this), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry lane_group_geometries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_group_geometries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->lane_group_geometries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
}

::google::protobuf::uint8* LaneGeometryPolylineLayerTile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->here_tile_id(), target);
  }

  // .com.here.pb.hdmap.external.v1.geometry.Point3d tile_center_here_3d_coordinate = 2;
  if (this->has_tile_center_here_3d_coordinate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::tile_center_here_3d_coordinate(this), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry lane_group_geometries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_group_geometries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->lane_group_geometries(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  return target;
}

size_t LaneGeometryPolylineLayerTile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry lane_group_geometries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->lane_group_geometries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lane_group_geometries(static_cast<int>(i)));
    }
  }

  // .com.here.pb.hdmap.external.v1.geometry.Point3d tile_center_here_3d_coordinate = 2;
  if (this->has_tile_center_here_3d_coordinate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tile_center_here_3d_coordinate_);
  }

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaneGeometryPolylineLayerTile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  GOOGLE_DCHECK_NE(&from, this);
  const LaneGeometryPolylineLayerTile* source =
      ::google::protobuf::DynamicCastToGenerated<LaneGeometryPolylineLayerTile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
    MergeFrom(*source);
  }
}

void LaneGeometryPolylineLayerTile::MergeFrom(const LaneGeometryPolylineLayerTile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lane_group_geometries_.MergeFrom(from.lane_group_geometries_);
  if (from.has_tile_center_here_3d_coordinate()) {
    mutable_tile_center_here_3d_coordinate()->::com::here::pb::hdmap::external::v1::geometry::Point3d::MergeFrom(from.tile_center_here_3d_coordinate());
  }
  if (from.here_tile_id() != 0) {
    set_here_tile_id(from.here_tile_id());
  }
}

void LaneGeometryPolylineLayerTile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaneGeometryPolylineLayerTile::CopyFrom(const LaneGeometryPolylineLayerTile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaneGeometryPolylineLayerTile::IsInitialized() const {
  return true;
}

void LaneGeometryPolylineLayerTile::Swap(LaneGeometryPolylineLayerTile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaneGeometryPolylineLayerTile::InternalSwap(LaneGeometryPolylineLayerTile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&lane_group_geometries_)->InternalSwap(CastToBase(&other->lane_group_geometries_));
  swap(tile_center_here_3d_coordinate_, other->tile_center_here_3d_coordinate_);
  swap(here_tile_id_, other->here_tile_id_);
}

::google::protobuf::Metadata LaneGeometryPolylineLayerTile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LaneGroupGeometry::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::lanes::_LaneGroupGeometry_default_instance_._instance.get_mutable()->reference_geometry_ = const_cast< ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset*>(
      ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::internal_default_instance());
}
class LaneGroupGeometry::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset& reference_geometry(const LaneGroupGeometry* msg);
};

const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset&
LaneGroupGeometry::HasBitSetters::reference_geometry(const LaneGroupGeometry* msg) {
  return *msg->reference_geometry_;
}
void LaneGroupGeometry::clear_reference_geometry() {
  if (GetArenaNoVirtual() == nullptr && reference_geometry_ != nullptr) {
    delete reference_geometry_;
  }
  reference_geometry_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaneGroupGeometry::kLaneGroupRefFieldNumber;
const int LaneGroupGeometry::kReferenceGeometryFieldNumber;
const int LaneGroupGeometry::kLaneGeometriesFieldNumber;
const int LaneGroupGeometry::kLaneBoundaryGeometriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaneGroupGeometry::LaneGroupGeometry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
}
LaneGroupGeometry::LaneGroupGeometry(const LaneGroupGeometry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      lane_geometries_(from.lane_geometries_),
      lane_boundary_geometries_(from.lane_boundary_geometries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reference_geometry()) {
    reference_geometry_ = new ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset(*from.reference_geometry_);
  } else {
    reference_geometry_ = nullptr;
  }
  lane_group_ref_ = from.lane_group_ref_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
}

void LaneGroupGeometry::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LaneGroupGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base);
  ::memset(&reference_geometry_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_group_ref_) -
      reinterpret_cast<char*>(&reference_geometry_)) + sizeof(lane_group_ref_));
}

LaneGroupGeometry::~LaneGroupGeometry() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  SharedDtor();
}

void LaneGroupGeometry::SharedDtor() {
  if (this != internal_default_instance()) delete reference_geometry_;
}

void LaneGroupGeometry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaneGroupGeometry& LaneGroupGeometry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaneGroupGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base);
  return *internal_default_instance();
}


void LaneGroupGeometry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lane_geometries_.Clear();
  lane_boundary_geometries_.Clear();
  if (GetArenaNoVirtual() == nullptr && reference_geometry_ != nullptr) {
    delete reference_geometry_;
  }
  reference_geometry_ = nullptr;
  lane_group_ref_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaneGroupGeometry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaneGroupGeometry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 lane_group_ref = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_lane_group_ref(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset reference_geometry = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::_InternalParse;
        object = msg->mutable_reference_geometry();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGeometry lane_geometries = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::lanes::LaneGeometry::_InternalParse;
          object = msg->add_lane_geometries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated .com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry lane_boundary_geometries = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry::_InternalParse;
          object = msg->add_lane_boundary_geometries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaneGroupGeometry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 lane_group_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lane_group_ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset reference_geometry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference_geometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGeometry lane_geometries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lane_geometries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry lane_boundary_geometries = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lane_boundary_geometries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaneGroupGeometry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_ref = 1;
  if (this->lane_group_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->lane_group_ref(), output);
  }

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset reference_geometry = 2;
  if (this->has_reference_geometry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::reference_geometry(this), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGeometry lane_geometries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_geometries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->lane_geometries(static_cast<int>(i)),
      output);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry lane_boundary_geometries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_boundary_geometries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->lane_boundary_geometries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
}

::google::protobuf::uint8* LaneGroupGeometry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_ref = 1;
  if (this->lane_group_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->lane_group_ref(), target);
  }

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset reference_geometry = 2;
  if (this->has_reference_geometry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::reference_geometry(this), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGeometry lane_geometries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_geometries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->lane_geometries(static_cast<int>(i)), target);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry lane_boundary_geometries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_boundary_geometries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->lane_boundary_geometries(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  return target;
}

size_t LaneGroupGeometry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGeometry lane_geometries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->lane_geometries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lane_geometries(static_cast<int>(i)));
    }
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry lane_boundary_geometries = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->lane_boundary_geometries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lane_boundary_geometries(static_cast<int>(i)));
    }
  }

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset reference_geometry = 2;
  if (this->has_reference_geometry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reference_geometry_);
  }

  // uint64 lane_group_ref = 1;
  if (this->lane_group_ref() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lane_group_ref());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaneGroupGeometry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  const LaneGroupGeometry* source =
      ::google::protobuf::DynamicCastToGenerated<LaneGroupGeometry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
    MergeFrom(*source);
  }
}

void LaneGroupGeometry::MergeFrom(const LaneGroupGeometry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lane_geometries_.MergeFrom(from.lane_geometries_);
  lane_boundary_geometries_.MergeFrom(from.lane_boundary_geometries_);
  if (from.has_reference_geometry()) {
    mutable_reference_geometry()->::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::MergeFrom(from.reference_geometry());
  }
  if (from.lane_group_ref() != 0) {
    set_lane_group_ref(from.lane_group_ref());
  }
}

void LaneGroupGeometry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaneGroupGeometry::CopyFrom(const LaneGroupGeometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaneGroupGeometry::IsInitialized() const {
  return true;
}

void LaneGroupGeometry::Swap(LaneGroupGeometry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaneGroupGeometry::InternalSwap(LaneGroupGeometry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&lane_geometries_)->InternalSwap(CastToBase(&other->lane_geometries_));
  CastToBase(&lane_boundary_geometries_)->InternalSwap(CastToBase(&other->lane_boundary_geometries_));
  swap(reference_geometry_, other->reference_geometry_);
  swap(lane_group_ref_, other->lane_group_ref_);
}

::google::protobuf::Metadata LaneGroupGeometry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LaneGeometry::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::lanes::_LaneGeometry_default_instance_._instance.get_mutable()->lane_path_geometry_ = const_cast< ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset*>(
      ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::internal_default_instance());
}
class LaneGeometry::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset& lane_path_geometry(const LaneGeometry* msg);
};

const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset&
LaneGeometry::HasBitSetters::lane_path_geometry(const LaneGeometry* msg) {
  return *msg->lane_path_geometry_;
}
void LaneGeometry::clear_lane_path_geometry() {
  if (GetArenaNoVirtual() == nullptr && lane_path_geometry_ != nullptr) {
    delete lane_path_geometry_;
  }
  lane_path_geometry_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaneGeometry::kLanePathGeometryFieldNumber;
const int LaneGeometry::kLeftLaneBoundaryNumberFieldNumber;
const int LaneGeometry::kRightLaneBoundaryNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaneGeometry::LaneGeometry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
}
LaneGeometry::LaneGeometry(const LaneGeometry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lane_path_geometry()) {
    lane_path_geometry_ = new ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset(*from.lane_path_geometry_);
  } else {
    lane_path_geometry_ = nullptr;
  }
  ::memcpy(&left_lane_boundary_number_, &from.left_lane_boundary_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&right_lane_boundary_number_) -
    reinterpret_cast<char*>(&left_lane_boundary_number_)) + sizeof(right_lane_boundary_number_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
}

void LaneGeometry::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LaneGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base);
  ::memset(&lane_path_geometry_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_lane_boundary_number_) -
      reinterpret_cast<char*>(&lane_path_geometry_)) + sizeof(right_lane_boundary_number_));
}

LaneGeometry::~LaneGeometry() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  SharedDtor();
}

void LaneGeometry::SharedDtor() {
  if (this != internal_default_instance()) delete lane_path_geometry_;
}

void LaneGeometry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaneGeometry& LaneGeometry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaneGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base);
  return *internal_default_instance();
}


void LaneGeometry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && lane_path_geometry_ != nullptr) {
    delete lane_path_geometry_;
  }
  lane_path_geometry_ = nullptr;
  ::memset(&left_lane_boundary_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_lane_boundary_number_) -
      reinterpret_cast<char*>(&left_lane_boundary_number_)) + sizeof(right_lane_boundary_number_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaneGeometry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaneGeometry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset lane_path_geometry = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::_InternalParse;
        object = msg->mutable_lane_path_geometry();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // uint32 left_lane_boundary_number = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_left_lane_boundary_number(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 right_lane_boundary_number = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_right_lane_boundary_number(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaneGeometry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset lane_path_geometry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lane_path_geometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 left_lane_boundary_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &left_lane_boundary_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 right_lane_boundary_number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &right_lane_boundary_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaneGeometry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset lane_path_geometry = 1;
  if (this->has_lane_path_geometry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::lane_path_geometry(this), output);
  }

  // uint32 left_lane_boundary_number = 2;
  if (this->left_lane_boundary_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->left_lane_boundary_number(), output);
  }

  // uint32 right_lane_boundary_number = 3;
  if (this->right_lane_boundary_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->right_lane_boundary_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
}

::google::protobuf::uint8* LaneGeometry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset lane_path_geometry = 1;
  if (this->has_lane_path_geometry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::lane_path_geometry(this), target);
  }

  // uint32 left_lane_boundary_number = 2;
  if (this->left_lane_boundary_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->left_lane_boundary_number(), target);
  }

  // uint32 right_lane_boundary_number = 3;
  if (this->right_lane_boundary_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->right_lane_boundary_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  return target;
}

size_t LaneGeometry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset lane_path_geometry = 1;
  if (this->has_lane_path_geometry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lane_path_geometry_);
  }

  // uint32 left_lane_boundary_number = 2;
  if (this->left_lane_boundary_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->left_lane_boundary_number());
  }

  // uint32 right_lane_boundary_number = 3;
  if (this->right_lane_boundary_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->right_lane_boundary_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaneGeometry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  const LaneGeometry* source =
      ::google::protobuf::DynamicCastToGenerated<LaneGeometry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
    MergeFrom(*source);
  }
}

void LaneGeometry::MergeFrom(const LaneGeometry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lane_path_geometry()) {
    mutable_lane_path_geometry()->::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::MergeFrom(from.lane_path_geometry());
  }
  if (from.left_lane_boundary_number() != 0) {
    set_left_lane_boundary_number(from.left_lane_boundary_number());
  }
  if (from.right_lane_boundary_number() != 0) {
    set_right_lane_boundary_number(from.right_lane_boundary_number());
  }
}

void LaneGeometry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaneGeometry::CopyFrom(const LaneGeometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaneGeometry::IsInitialized() const {
  return true;
}

void LaneGeometry::Swap(LaneGeometry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaneGeometry::InternalSwap(LaneGeometry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(lane_path_geometry_, other->lane_path_geometry_);
  swap(left_lane_boundary_number_, other->left_lane_boundary_number_);
  swap(right_lane_boundary_number_, other->right_lane_boundary_number_);
}

::google::protobuf::Metadata LaneGeometry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LaneBoundaryGeometry::InitAsDefaultInstance() {
  ::com::here::pb::hdmap::external::v1::lanes::_LaneBoundaryGeometry_default_instance_._instance.get_mutable()->geometry_ = const_cast< ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset*>(
      ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::internal_default_instance());
}
class LaneBoundaryGeometry::HasBitSetters {
 public:
  static const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset& geometry(const LaneBoundaryGeometry* msg);
};

const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset&
LaneBoundaryGeometry::HasBitSetters::geometry(const LaneBoundaryGeometry* msg) {
  return *msg->geometry_;
}
void LaneBoundaryGeometry::clear_geometry() {
  if (GetArenaNoVirtual() == nullptr && geometry_ != nullptr) {
    delete geometry_;
  }
  geometry_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaneBoundaryGeometry::kGeometryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaneBoundaryGeometry::LaneBoundaryGeometry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
}
LaneBoundaryGeometry::LaneBoundaryGeometry(const LaneBoundaryGeometry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_geometry()) {
    geometry_ = new ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset(*from.geometry_);
  } else {
    geometry_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
}

void LaneBoundaryGeometry::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LaneBoundaryGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base);
  geometry_ = nullptr;
}

LaneBoundaryGeometry::~LaneBoundaryGeometry() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  SharedDtor();
}

void LaneBoundaryGeometry::SharedDtor() {
  if (this != internal_default_instance()) delete geometry_;
}

void LaneBoundaryGeometry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaneBoundaryGeometry& LaneBoundaryGeometry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaneBoundaryGeometry_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto.base);
  return *internal_default_instance();
}


void LaneBoundaryGeometry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && geometry_ != nullptr) {
    delete geometry_;
  }
  geometry_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaneBoundaryGeometry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaneBoundaryGeometry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset geometry = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::_InternalParse;
        object = msg->mutable_geometry();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaneBoundaryGeometry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset geometry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaneBoundaryGeometry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset geometry = 1;
  if (this->has_geometry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::geometry(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
}

::google::protobuf::uint8* LaneBoundaryGeometry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset geometry = 1;
  if (this->has_geometry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::geometry(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  return target;
}

size_t LaneBoundaryGeometry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset geometry = 1;
  if (this->has_geometry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *geometry_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaneBoundaryGeometry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  const LaneBoundaryGeometry* source =
      ::google::protobuf::DynamicCastToGenerated<LaneBoundaryGeometry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
    MergeFrom(*source);
  }
}

void LaneBoundaryGeometry::MergeFrom(const LaneBoundaryGeometry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_geometry()) {
    mutable_geometry()->::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::MergeFrom(from.geometry());
  }
}

void LaneBoundaryGeometry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaneBoundaryGeometry::CopyFrom(const LaneBoundaryGeometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaneBoundaryGeometry::IsInitialized() const {
  return true;
}

void LaneBoundaryGeometry::Swap(LaneBoundaryGeometry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaneBoundaryGeometry::InternalSwap(LaneBoundaryGeometry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(geometry_, other->geometry_);
}

::google::protobuf::Metadata LaneBoundaryGeometry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto);
  return ::file_level_metadata_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace lanes
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::lanes::LaneGeometryPolylineLayerTile* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::lanes::LaneGeometryPolylineLayerTile >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::lanes::LaneGeometryPolylineLayerTile >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::lanes::LaneGeometry* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::lanes::LaneGeometry >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::lanes::LaneGeometry >(arena);
}
template<> PROTOBUF_NOINLINE ::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry* Arena::CreateMaybeMessage< ::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry >(Arena* arena) {
  return Arena::CreateInternal< ::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
