// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/common/common.proto

#ifndef PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto
#define PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[15]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto();
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace common {
class GenericPartitionReference;
class GenericPartitionReferenceDefaultTypeInternal;
extern GenericPartitionReferenceDefaultTypeInternal _GenericPartitionReference_default_instance_;
class LocalAdministrativeAreaReference;
class LocalAdministrativeAreaReferenceDefaultTypeInternal;
extern LocalAdministrativeAreaReferenceDefaultTypeInternal _LocalAdministrativeAreaReference_default_instance_;
class LocalLinkReference;
class LocalLinkReferenceDefaultTypeInternal;
extern LocalLinkReferenceDefaultTypeInternal _LocalLinkReference_default_instance_;
class LocalNodeReference;
class LocalNodeReferenceDefaultTypeInternal;
extern LocalNodeReferenceDefaultTypeInternal _LocalNodeReference_default_instance_;
class ParametricLocation;
class ParametricLocationDefaultTypeInternal;
extern ParametricLocationDefaultTypeInternal _ParametricLocation_default_instance_;
class ParametricRange;
class ParametricRangeDefaultTypeInternal;
extern ParametricRangeDefaultTypeInternal _ParametricRange_default_instance_;
class PartitionReference;
class PartitionReferenceDefaultTypeInternal;
extern PartitionReferenceDefaultTypeInternal _PartitionReference_default_instance_;
class PartitionedAdministrativeAreaReference;
class PartitionedAdministrativeAreaReferenceDefaultTypeInternal;
extern PartitionedAdministrativeAreaReferenceDefaultTypeInternal _PartitionedAdministrativeAreaReference_default_instance_;
class SpecificationComplianceAssertion;
class SpecificationComplianceAssertionDefaultTypeInternal;
extern SpecificationComplianceAssertionDefaultTypeInternal _SpecificationComplianceAssertion_default_instance_;
class StrandAttributionLocalReference;
class StrandAttributionLocalReferenceDefaultTypeInternal;
extern StrandAttributionLocalReferenceDefaultTypeInternal _StrandAttributionLocalReference_default_instance_;
class TiledLaneGroupConnectorReference;
class TiledLaneGroupConnectorReferenceDefaultTypeInternal;
extern TiledLaneGroupConnectorReferenceDefaultTypeInternal _TiledLaneGroupConnectorReference_default_instance_;
class TiledLaneGroupReference;
class TiledLaneGroupReferenceDefaultTypeInternal;
extern TiledLaneGroupReferenceDefaultTypeInternal _TiledLaneGroupReference_default_instance_;
class TiledLinkReference;
class TiledLinkReferenceDefaultTypeInternal;
extern TiledLinkReferenceDefaultTypeInternal _TiledLinkReference_default_instance_;
class TiledNodeReference;
class TiledNodeReferenceDefaultTypeInternal;
extern TiledNodeReferenceDefaultTypeInternal _TiledNodeReference_default_instance_;
class TiledStrandAttributionReference;
class TiledStrandAttributionReferenceDefaultTypeInternal;
extern TiledStrandAttributionReferenceDefaultTypeInternal _TiledStrandAttributionReference_default_instance_;
}  // namespace common
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::here::pb::hdmap::external::v1::common::GenericPartitionReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::GenericPartitionReference>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::LocalAdministrativeAreaReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::LocalAdministrativeAreaReference>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::LocalLinkReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::LocalLinkReference>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::LocalNodeReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::LocalNodeReference>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::ParametricLocation* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::ParametricLocation>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::ParametricRange* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::ParametricRange>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::PartitionReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::PartitionReference>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::PartitionedAdministrativeAreaReference>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::SpecificationComplianceAssertion* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::SpecificationComplianceAssertion>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::StrandAttributionLocalReference>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::TiledLaneGroupConnectorReference>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::TiledLaneGroupReference>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::TiledLinkReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::TiledLinkReference>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::TiledNodeReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::TiledNodeReference>(Arena*);
template<> ::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference* Arena::CreateMaybeMessage<::com::here::pb::hdmap::external::v1::common::TiledStrandAttributionReference>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace common {

enum RelativeDirection {
  RelativeDirection_UNKNOWN = 0,
  BOTH = 1,
  FORWARD = 2,
  BACKWARD = 3,
  NONE = 4,
  RelativeDirection_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  RelativeDirection_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool RelativeDirection_IsValid(int value);
const RelativeDirection RelativeDirection_MIN = RelativeDirection_UNKNOWN;
const RelativeDirection RelativeDirection_MAX = NONE;
const int RelativeDirection_ARRAYSIZE = RelativeDirection_MAX + 1;

const ::google::protobuf::EnumDescriptor* RelativeDirection_descriptor();
inline const ::std::string& RelativeDirection_Name(RelativeDirection value) {
  return ::google::protobuf::internal::NameOfEnum(
    RelativeDirection_descriptor(), value);
}
inline bool RelativeDirection_Parse(
    const ::std::string& name, RelativeDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RelativeDirection>(
    RelativeDirection_descriptor(), name, value);
}
// ===================================================================

class PartitionReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.PartitionReference) */ {
 public:
  PartitionReference();
  virtual ~PartitionReference();

  PartitionReference(const PartitionReference& from);

  inline PartitionReference& operator=(const PartitionReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PartitionReference(PartitionReference&& from) noexcept
    : PartitionReference() {
    *this = ::std::move(from);
  }

  inline PartitionReference& operator=(PartitionReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PartitionReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PartitionReference* internal_default_instance() {
    return reinterpret_cast<const PartitionReference*>(
               &_PartitionReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PartitionReference* other);
  friend void swap(PartitionReference& a, PartitionReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PartitionReference* New() const final {
    return CreateMaybeMessage<PartitionReference>(nullptr);
  }

  PartitionReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PartitionReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PartitionReference& from);
  void MergeFrom(const PartitionReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PartitionReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 here_tile_id = 1;
  void clear_here_tile_id();
  static const int kHereTileIdFieldNumber = 1;
  ::google::protobuf::uint32 here_tile_id() const;
  void set_here_tile_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.PartitionReference)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 here_tile_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class GenericPartitionReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.GenericPartitionReference) */ {
 public:
  GenericPartitionReference();
  virtual ~GenericPartitionReference();

  GenericPartitionReference(const GenericPartitionReference& from);

  inline GenericPartitionReference& operator=(const GenericPartitionReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenericPartitionReference(GenericPartitionReference&& from) noexcept
    : GenericPartitionReference() {
    *this = ::std::move(from);
  }

  inline GenericPartitionReference& operator=(GenericPartitionReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GenericPartitionReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenericPartitionReference* internal_default_instance() {
    return reinterpret_cast<const GenericPartitionReference*>(
               &_GenericPartitionReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GenericPartitionReference* other);
  friend void swap(GenericPartitionReference& a, GenericPartitionReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenericPartitionReference* New() const final {
    return CreateMaybeMessage<GenericPartitionReference>(nullptr);
  }

  GenericPartitionReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenericPartitionReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenericPartitionReference& from);
  void MergeFrom(const GenericPartitionReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenericPartitionReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string generic_partition_id = 1;
  void clear_generic_partition_id();
  static const int kGenericPartitionIdFieldNumber = 1;
  const ::std::string& generic_partition_id() const;
  void set_generic_partition_id(const ::std::string& value);
  #if LANG_CXX11
  void set_generic_partition_id(::std::string&& value);
  #endif
  void set_generic_partition_id(const char* value);
  void set_generic_partition_id(const char* value, size_t size);
  ::std::string* mutable_generic_partition_id();
  ::std::string* release_generic_partition_id();
  void set_allocated_generic_partition_id(::std::string* generic_partition_id);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr generic_partition_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class LocalLinkReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.LocalLinkReference) */ {
 public:
  LocalLinkReference();
  virtual ~LocalLinkReference();

  LocalLinkReference(const LocalLinkReference& from);

  inline LocalLinkReference& operator=(const LocalLinkReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalLinkReference(LocalLinkReference&& from) noexcept
    : LocalLinkReference() {
    *this = ::std::move(from);
  }

  inline LocalLinkReference& operator=(LocalLinkReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LocalLinkReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalLinkReference* internal_default_instance() {
    return reinterpret_cast<const LocalLinkReference*>(
               &_LocalLinkReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(LocalLinkReference* other);
  friend void swap(LocalLinkReference& a, LocalLinkReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalLinkReference* New() const final {
    return CreateMaybeMessage<LocalLinkReference>(nullptr);
  }

  LocalLinkReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocalLinkReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocalLinkReference& from);
  void MergeFrom(const LocalLinkReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocalLinkReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 link_id = 1;
  void clear_link_id();
  static const int kLinkIdFieldNumber = 1;
  ::google::protobuf::uint32 link_id() const;
  void set_link_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 link_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class LocalNodeReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.LocalNodeReference) */ {
 public:
  LocalNodeReference();
  virtual ~LocalNodeReference();

  LocalNodeReference(const LocalNodeReference& from);

  inline LocalNodeReference& operator=(const LocalNodeReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalNodeReference(LocalNodeReference&& from) noexcept
    : LocalNodeReference() {
    *this = ::std::move(from);
  }

  inline LocalNodeReference& operator=(LocalNodeReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LocalNodeReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalNodeReference* internal_default_instance() {
    return reinterpret_cast<const LocalNodeReference*>(
               &_LocalNodeReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(LocalNodeReference* other);
  friend void swap(LocalNodeReference& a, LocalNodeReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalNodeReference* New() const final {
    return CreateMaybeMessage<LocalNodeReference>(nullptr);
  }

  LocalNodeReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocalNodeReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocalNodeReference& from);
  void MergeFrom(const LocalNodeReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocalNodeReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 node_id = 1;
  void clear_node_id();
  static const int kNodeIdFieldNumber = 1;
  ::google::protobuf::uint32 node_id() const;
  void set_node_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 node_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class TiledLinkReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.TiledLinkReference) */ {
 public:
  TiledLinkReference();
  virtual ~TiledLinkReference();

  TiledLinkReference(const TiledLinkReference& from);

  inline TiledLinkReference& operator=(const TiledLinkReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TiledLinkReference(TiledLinkReference&& from) noexcept
    : TiledLinkReference() {
    *this = ::std::move(from);
  }

  inline TiledLinkReference& operator=(TiledLinkReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TiledLinkReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TiledLinkReference* internal_default_instance() {
    return reinterpret_cast<const TiledLinkReference*>(
               &_TiledLinkReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TiledLinkReference* other);
  friend void swap(TiledLinkReference& a, TiledLinkReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TiledLinkReference* New() const final {
    return CreateMaybeMessage<TiledLinkReference>(nullptr);
  }

  TiledLinkReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TiledLinkReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TiledLinkReference& from);
  void MergeFrom(const TiledLinkReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TiledLinkReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 link_id = 1;
  void clear_link_id();
  static const int kLinkIdFieldNumber = 1;
  ::google::protobuf::uint32 link_id() const;
  void set_link_id(::google::protobuf::uint32 value);

  // uint32 link_here_tile_id = 2;
  void clear_link_here_tile_id();
  static const int kLinkHereTileIdFieldNumber = 2;
  ::google::protobuf::uint32 link_here_tile_id() const;
  void set_link_here_tile_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 link_id_;
  ::google::protobuf::uint32 link_here_tile_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class TiledNodeReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.TiledNodeReference) */ {
 public:
  TiledNodeReference();
  virtual ~TiledNodeReference();

  TiledNodeReference(const TiledNodeReference& from);

  inline TiledNodeReference& operator=(const TiledNodeReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TiledNodeReference(TiledNodeReference&& from) noexcept
    : TiledNodeReference() {
    *this = ::std::move(from);
  }

  inline TiledNodeReference& operator=(TiledNodeReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TiledNodeReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TiledNodeReference* internal_default_instance() {
    return reinterpret_cast<const TiledNodeReference*>(
               &_TiledNodeReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(TiledNodeReference* other);
  friend void swap(TiledNodeReference& a, TiledNodeReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TiledNodeReference* New() const final {
    return CreateMaybeMessage<TiledNodeReference>(nullptr);
  }

  TiledNodeReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TiledNodeReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TiledNodeReference& from);
  void MergeFrom(const TiledNodeReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TiledNodeReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 node_id = 1;
  void clear_node_id();
  static const int kNodeIdFieldNumber = 1;
  ::google::protobuf::uint32 node_id() const;
  void set_node_id(::google::protobuf::uint32 value);

  // uint32 node_here_tile_id = 2;
  void clear_node_here_tile_id();
  static const int kNodeHereTileIdFieldNumber = 2;
  ::google::protobuf::uint32 node_here_tile_id() const;
  void set_node_here_tile_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 node_id_;
  ::google::protobuf::uint32 node_here_tile_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class TiledLaneGroupReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference) */ {
 public:
  TiledLaneGroupReference();
  virtual ~TiledLaneGroupReference();

  TiledLaneGroupReference(const TiledLaneGroupReference& from);

  inline TiledLaneGroupReference& operator=(const TiledLaneGroupReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TiledLaneGroupReference(TiledLaneGroupReference&& from) noexcept
    : TiledLaneGroupReference() {
    *this = ::std::move(from);
  }

  inline TiledLaneGroupReference& operator=(TiledLaneGroupReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TiledLaneGroupReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TiledLaneGroupReference* internal_default_instance() {
    return reinterpret_cast<const TiledLaneGroupReference*>(
               &_TiledLaneGroupReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(TiledLaneGroupReference* other);
  friend void swap(TiledLaneGroupReference& a, TiledLaneGroupReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TiledLaneGroupReference* New() const final {
    return CreateMaybeMessage<TiledLaneGroupReference>(nullptr);
  }

  TiledLaneGroupReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TiledLaneGroupReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TiledLaneGroupReference& from);
  void MergeFrom(const TiledLaneGroupReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TiledLaneGroupReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 lane_group_id = 1;
  void clear_lane_group_id();
  static const int kLaneGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 lane_group_id() const;
  void set_lane_group_id(::google::protobuf::uint64 value);

  // uint32 lane_group_here_tile_id = 2;
  void clear_lane_group_here_tile_id();
  static const int kLaneGroupHereTileIdFieldNumber = 2;
  ::google::protobuf::uint32 lane_group_here_tile_id() const;
  void set_lane_group_here_tile_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 lane_group_id_;
  ::google::protobuf::uint32 lane_group_here_tile_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class TiledLaneGroupConnectorReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference) */ {
 public:
  TiledLaneGroupConnectorReference();
  virtual ~TiledLaneGroupConnectorReference();

  TiledLaneGroupConnectorReference(const TiledLaneGroupConnectorReference& from);

  inline TiledLaneGroupConnectorReference& operator=(const TiledLaneGroupConnectorReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TiledLaneGroupConnectorReference(TiledLaneGroupConnectorReference&& from) noexcept
    : TiledLaneGroupConnectorReference() {
    *this = ::std::move(from);
  }

  inline TiledLaneGroupConnectorReference& operator=(TiledLaneGroupConnectorReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TiledLaneGroupConnectorReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TiledLaneGroupConnectorReference* internal_default_instance() {
    return reinterpret_cast<const TiledLaneGroupConnectorReference*>(
               &_TiledLaneGroupConnectorReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(TiledLaneGroupConnectorReference* other);
  friend void swap(TiledLaneGroupConnectorReference& a, TiledLaneGroupConnectorReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TiledLaneGroupConnectorReference* New() const final {
    return CreateMaybeMessage<TiledLaneGroupConnectorReference>(nullptr);
  }

  TiledLaneGroupConnectorReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TiledLaneGroupConnectorReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TiledLaneGroupConnectorReference& from);
  void MergeFrom(const TiledLaneGroupConnectorReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TiledLaneGroupConnectorReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 lane_group_connector_id = 1;
  void clear_lane_group_connector_id();
  static const int kLaneGroupConnectorIdFieldNumber = 1;
  ::google::protobuf::uint64 lane_group_connector_id() const;
  void set_lane_group_connector_id(::google::protobuf::uint64 value);

  // uint32 lane_group_connector_here_tile_id = 2;
  void clear_lane_group_connector_here_tile_id();
  static const int kLaneGroupConnectorHereTileIdFieldNumber = 2;
  ::google::protobuf::uint32 lane_group_connector_here_tile_id() const;
  void set_lane_group_connector_here_tile_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 lane_group_connector_id_;
  ::google::protobuf::uint32 lane_group_connector_here_tile_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class ParametricRange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.ParametricRange) */ {
 public:
  ParametricRange();
  virtual ~ParametricRange();

  ParametricRange(const ParametricRange& from);

  inline ParametricRange& operator=(const ParametricRange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParametricRange(ParametricRange&& from) noexcept
    : ParametricRange() {
    *this = ::std::move(from);
  }

  inline ParametricRange& operator=(ParametricRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ParametricRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParametricRange* internal_default_instance() {
    return reinterpret_cast<const ParametricRange*>(
               &_ParametricRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ParametricRange* other);
  friend void swap(ParametricRange& a, ParametricRange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParametricRange* New() const final {
    return CreateMaybeMessage<ParametricRange>(nullptr);
  }

  ParametricRange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParametricRange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParametricRange& from);
  void MergeFrom(const ParametricRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParametricRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double range_offset_from_start = 1;
  void clear_range_offset_from_start();
  static const int kRangeOffsetFromStartFieldNumber = 1;
  double range_offset_from_start() const;
  void set_range_offset_from_start(double value);

  // double range_offset_from_end = 2;
  void clear_range_offset_from_end();
  static const int kRangeOffsetFromEndFieldNumber = 2;
  double range_offset_from_end() const;
  void set_range_offset_from_end(double value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.ParametricRange)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double range_offset_from_start_;
  double range_offset_from_end_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class ParametricLocation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.ParametricLocation) */ {
 public:
  ParametricLocation();
  virtual ~ParametricLocation();

  ParametricLocation(const ParametricLocation& from);

  inline ParametricLocation& operator=(const ParametricLocation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParametricLocation(ParametricLocation&& from) noexcept
    : ParametricLocation() {
    *this = ::std::move(from);
  }

  inline ParametricLocation& operator=(ParametricLocation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ParametricLocation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParametricLocation* internal_default_instance() {
    return reinterpret_cast<const ParametricLocation*>(
               &_ParametricLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ParametricLocation* other);
  friend void swap(ParametricLocation& a, ParametricLocation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParametricLocation* New() const final {
    return CreateMaybeMessage<ParametricLocation>(nullptr);
  }

  ParametricLocation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParametricLocation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParametricLocation& from);
  void MergeFrom(const ParametricLocation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParametricLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double location_offset_from_start = 1;
  void clear_location_offset_from_start();
  static const int kLocationOffsetFromStartFieldNumber = 1;
  double location_offset_from_start() const;
  void set_location_offset_from_start(double value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.ParametricLocation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double location_offset_from_start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class StrandAttributionLocalReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference) */ {
 public:
  StrandAttributionLocalReference();
  virtual ~StrandAttributionLocalReference();

  StrandAttributionLocalReference(const StrandAttributionLocalReference& from);

  inline StrandAttributionLocalReference& operator=(const StrandAttributionLocalReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StrandAttributionLocalReference(StrandAttributionLocalReference&& from) noexcept
    : StrandAttributionLocalReference() {
    *this = ::std::move(from);
  }

  inline StrandAttributionLocalReference& operator=(StrandAttributionLocalReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StrandAttributionLocalReference& default_instance();

  enum IdCase {
    kStrandAttributionId = 1,
    kStrandAttributionRef = 2,
    ID_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StrandAttributionLocalReference* internal_default_instance() {
    return reinterpret_cast<const StrandAttributionLocalReference*>(
               &_StrandAttributionLocalReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(StrandAttributionLocalReference* other);
  friend void swap(StrandAttributionLocalReference& a, StrandAttributionLocalReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StrandAttributionLocalReference* New() const final {
    return CreateMaybeMessage<StrandAttributionLocalReference>(nullptr);
  }

  StrandAttributionLocalReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StrandAttributionLocalReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StrandAttributionLocalReference& from);
  void MergeFrom(const StrandAttributionLocalReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StrandAttributionLocalReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 strand_attribution_id = 1;
  private:
  bool has_strand_attribution_id() const;
  public:
  void clear_strand_attribution_id();
  static const int kStrandAttributionIdFieldNumber = 1;
  ::google::protobuf::uint32 strand_attribution_id() const;
  void set_strand_attribution_id(::google::protobuf::uint32 value);

  // string strand_attribution_ref = 2;
  private:
  bool has_strand_attribution_ref() const;
  public:
  void clear_strand_attribution_ref();
  static const int kStrandAttributionRefFieldNumber = 2;
  const ::std::string& strand_attribution_ref() const;
  void set_strand_attribution_ref(const ::std::string& value);
  #if LANG_CXX11
  void set_strand_attribution_ref(::std::string&& value);
  #endif
  void set_strand_attribution_ref(const char* value);
  void set_strand_attribution_ref(const char* value, size_t size);
  ::std::string* mutable_strand_attribution_ref();
  ::std::string* release_strand_attribution_ref();
  void set_allocated_strand_attribution_ref(::std::string* strand_attribution_ref);

  void clear_id();
  IdCase id_case() const;
  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
 private:
  class HasBitSetters;
  void set_has_strand_attribution_id();
  void set_has_strand_attribution_ref();

  inline bool has_id() const;
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union IdUnion {
    IdUnion() {}
    ::google::protobuf::uint32 strand_attribution_id_;
    ::google::protobuf::internal::ArenaStringPtr strand_attribution_ref_;
  } id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class TiledStrandAttributionReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference) */ {
 public:
  TiledStrandAttributionReference();
  virtual ~TiledStrandAttributionReference();

  TiledStrandAttributionReference(const TiledStrandAttributionReference& from);

  inline TiledStrandAttributionReference& operator=(const TiledStrandAttributionReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TiledStrandAttributionReference(TiledStrandAttributionReference&& from) noexcept
    : TiledStrandAttributionReference() {
    *this = ::std::move(from);
  }

  inline TiledStrandAttributionReference& operator=(TiledStrandAttributionReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TiledStrandAttributionReference& default_instance();

  enum IdCase {
    kStrandAttributionId = 1,
    kStrandAttributionRef = 2,
    ID_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TiledStrandAttributionReference* internal_default_instance() {
    return reinterpret_cast<const TiledStrandAttributionReference*>(
               &_TiledStrandAttributionReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(TiledStrandAttributionReference* other);
  friend void swap(TiledStrandAttributionReference& a, TiledStrandAttributionReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TiledStrandAttributionReference* New() const final {
    return CreateMaybeMessage<TiledStrandAttributionReference>(nullptr);
  }

  TiledStrandAttributionReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TiledStrandAttributionReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TiledStrandAttributionReference& from);
  void MergeFrom(const TiledStrandAttributionReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TiledStrandAttributionReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 strand_attribution_here_tile_id = 3;
  void clear_strand_attribution_here_tile_id();
  static const int kStrandAttributionHereTileIdFieldNumber = 3;
  ::google::protobuf::uint32 strand_attribution_here_tile_id() const;
  void set_strand_attribution_here_tile_id(::google::protobuf::uint32 value);

  // uint32 strand_attribution_id = 1;
  private:
  bool has_strand_attribution_id() const;
  public:
  void clear_strand_attribution_id();
  static const int kStrandAttributionIdFieldNumber = 1;
  ::google::protobuf::uint32 strand_attribution_id() const;
  void set_strand_attribution_id(::google::protobuf::uint32 value);

  // string strand_attribution_ref = 2;
  private:
  bool has_strand_attribution_ref() const;
  public:
  void clear_strand_attribution_ref();
  static const int kStrandAttributionRefFieldNumber = 2;
  const ::std::string& strand_attribution_ref() const;
  void set_strand_attribution_ref(const ::std::string& value);
  #if LANG_CXX11
  void set_strand_attribution_ref(::std::string&& value);
  #endif
  void set_strand_attribution_ref(const char* value);
  void set_strand_attribution_ref(const char* value, size_t size);
  ::std::string* mutable_strand_attribution_ref();
  ::std::string* release_strand_attribution_ref();
  void set_allocated_strand_attribution_ref(::std::string* strand_attribution_ref);

  void clear_id();
  IdCase id_case() const;
  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
 private:
  class HasBitSetters;
  void set_has_strand_attribution_id();
  void set_has_strand_attribution_ref();

  inline bool has_id() const;
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 strand_attribution_here_tile_id_;
  union IdUnion {
    IdUnion() {}
    ::google::protobuf::uint32 strand_attribution_id_;
    ::google::protobuf::internal::ArenaStringPtr strand_attribution_ref_;
  } id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class SpecificationComplianceAssertion final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion) */ {
 public:
  SpecificationComplianceAssertion();
  virtual ~SpecificationComplianceAssertion();

  SpecificationComplianceAssertion(const SpecificationComplianceAssertion& from);

  inline SpecificationComplianceAssertion& operator=(const SpecificationComplianceAssertion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpecificationComplianceAssertion(SpecificationComplianceAssertion&& from) noexcept
    : SpecificationComplianceAssertion() {
    *this = ::std::move(from);
  }

  inline SpecificationComplianceAssertion& operator=(SpecificationComplianceAssertion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SpecificationComplianceAssertion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpecificationComplianceAssertion* internal_default_instance() {
    return reinterpret_cast<const SpecificationComplianceAssertion*>(
               &_SpecificationComplianceAssertion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(SpecificationComplianceAssertion* other);
  friend void swap(SpecificationComplianceAssertion& a, SpecificationComplianceAssertion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpecificationComplianceAssertion* New() const final {
    return CreateMaybeMessage<SpecificationComplianceAssertion>(nullptr);
  }

  SpecificationComplianceAssertion* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SpecificationComplianceAssertion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SpecificationComplianceAssertion& from);
  void MergeFrom(const SpecificationComplianceAssertion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecificationComplianceAssertion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 compliant_with_specification_ref = 1;
  void clear_compliant_with_specification_ref();
  static const int kCompliantWithSpecificationRefFieldNumber = 1;
  ::google::protobuf::uint32 compliant_with_specification_ref() const;
  void set_compliant_with_specification_ref(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 compliant_with_specification_ref_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class LocalAdministrativeAreaReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference) */ {
 public:
  LocalAdministrativeAreaReference();
  virtual ~LocalAdministrativeAreaReference();

  LocalAdministrativeAreaReference(const LocalAdministrativeAreaReference& from);

  inline LocalAdministrativeAreaReference& operator=(const LocalAdministrativeAreaReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalAdministrativeAreaReference(LocalAdministrativeAreaReference&& from) noexcept
    : LocalAdministrativeAreaReference() {
    *this = ::std::move(from);
  }

  inline LocalAdministrativeAreaReference& operator=(LocalAdministrativeAreaReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LocalAdministrativeAreaReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalAdministrativeAreaReference* internal_default_instance() {
    return reinterpret_cast<const LocalAdministrativeAreaReference*>(
               &_LocalAdministrativeAreaReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(LocalAdministrativeAreaReference* other);
  friend void swap(LocalAdministrativeAreaReference& a, LocalAdministrativeAreaReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalAdministrativeAreaReference* New() const final {
    return CreateMaybeMessage<LocalAdministrativeAreaReference>(nullptr);
  }

  LocalAdministrativeAreaReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocalAdministrativeAreaReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocalAdministrativeAreaReference& from);
  void MergeFrom(const LocalAdministrativeAreaReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocalAdministrativeAreaReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint32 administrative_area_id = 1;
  void clear_administrative_area_id();
  static const int kAdministrativeAreaIdFieldNumber = 1;
  ::google::protobuf::int32 administrative_area_id() const;
  void set_administrative_area_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 administrative_area_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class PartitionedAdministrativeAreaReference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference) */ {
 public:
  PartitionedAdministrativeAreaReference();
  virtual ~PartitionedAdministrativeAreaReference();

  PartitionedAdministrativeAreaReference(const PartitionedAdministrativeAreaReference& from);

  inline PartitionedAdministrativeAreaReference& operator=(const PartitionedAdministrativeAreaReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PartitionedAdministrativeAreaReference(PartitionedAdministrativeAreaReference&& from) noexcept
    : PartitionedAdministrativeAreaReference() {
    *this = ::std::move(from);
  }

  inline PartitionedAdministrativeAreaReference& operator=(PartitionedAdministrativeAreaReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PartitionedAdministrativeAreaReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PartitionedAdministrativeAreaReference* internal_default_instance() {
    return reinterpret_cast<const PartitionedAdministrativeAreaReference*>(
               &_PartitionedAdministrativeAreaReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(PartitionedAdministrativeAreaReference* other);
  friend void swap(PartitionedAdministrativeAreaReference& a, PartitionedAdministrativeAreaReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PartitionedAdministrativeAreaReference* New() const final {
    return CreateMaybeMessage<PartitionedAdministrativeAreaReference>(nullptr);
  }

  PartitionedAdministrativeAreaReference* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PartitionedAdministrativeAreaReference>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PartitionedAdministrativeAreaReference& from);
  void MergeFrom(const PartitionedAdministrativeAreaReference& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PartitionedAdministrativeAreaReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string administrative_area_partition_id = 2;
  void clear_administrative_area_partition_id();
  static const int kAdministrativeAreaPartitionIdFieldNumber = 2;
  const ::std::string& administrative_area_partition_id() const;
  void set_administrative_area_partition_id(const ::std::string& value);
  #if LANG_CXX11
  void set_administrative_area_partition_id(::std::string&& value);
  #endif
  void set_administrative_area_partition_id(const char* value);
  void set_administrative_area_partition_id(const char* value, size_t size);
  ::std::string* mutable_administrative_area_partition_id();
  ::std::string* release_administrative_area_partition_id();
  void set_allocated_administrative_area_partition_id(::std::string* administrative_area_partition_id);

  // sint32 administrative_area_id = 1;
  void clear_administrative_area_id();
  static const int kAdministrativeAreaIdFieldNumber = 1;
  ::google::protobuf::int32 administrative_area_id() const;
  void set_administrative_area_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr administrative_area_partition_id_;
  ::google::protobuf::int32 administrative_area_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PartitionReference

// uint32 here_tile_id = 1;
inline void PartitionReference::clear_here_tile_id() {
  here_tile_id_ = 0u;
}
inline ::google::protobuf::uint32 PartitionReference::here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.PartitionReference.here_tile_id)
  return here_tile_id_;
}
inline void PartitionReference::set_here_tile_id(::google::protobuf::uint32 value) {
  
  here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.PartitionReference.here_tile_id)
}

// -------------------------------------------------------------------

// GenericPartitionReference

// string generic_partition_id = 1;
inline void GenericPartitionReference::clear_generic_partition_id() {
  generic_partition_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenericPartitionReference::generic_partition_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
  return generic_partition_id_.GetNoArena();
}
inline void GenericPartitionReference::set_generic_partition_id(const ::std::string& value) {
  
  generic_partition_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
}
#if LANG_CXX11
inline void GenericPartitionReference::set_generic_partition_id(::std::string&& value) {
  
  generic_partition_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
}
#endif
inline void GenericPartitionReference::set_generic_partition_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  generic_partition_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
}
inline void GenericPartitionReference::set_generic_partition_id(const char* value, size_t size) {
  
  generic_partition_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
}
inline ::std::string* GenericPartitionReference::mutable_generic_partition_id() {
  
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
  return generic_partition_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenericPartitionReference::release_generic_partition_id() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
  
  return generic_partition_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenericPartitionReference::set_allocated_generic_partition_id(::std::string* generic_partition_id) {
  if (generic_partition_id != nullptr) {
    
  } else {
    
  }
  generic_partition_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), generic_partition_id);
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
}

// -------------------------------------------------------------------

// LocalLinkReference

// uint32 link_id = 1;
inline void LocalLinkReference::clear_link_id() {
  link_id_ = 0u;
}
inline ::google::protobuf::uint32 LocalLinkReference::link_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.LocalLinkReference.link_id)
  return link_id_;
}
inline void LocalLinkReference::set_link_id(::google::protobuf::uint32 value) {
  
  link_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.LocalLinkReference.link_id)
}

// -------------------------------------------------------------------

// LocalNodeReference

// uint32 node_id = 1;
inline void LocalNodeReference::clear_node_id() {
  node_id_ = 0u;
}
inline ::google::protobuf::uint32 LocalNodeReference::node_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.LocalNodeReference.node_id)
  return node_id_;
}
inline void LocalNodeReference::set_node_id(::google::protobuf::uint32 value) {
  
  node_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.LocalNodeReference.node_id)
}

// -------------------------------------------------------------------

// TiledLinkReference

// uint32 link_id = 1;
inline void TiledLinkReference::clear_link_id() {
  link_id_ = 0u;
}
inline ::google::protobuf::uint32 TiledLinkReference::link_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledLinkReference.link_id)
  return link_id_;
}
inline void TiledLinkReference::set_link_id(::google::protobuf::uint32 value) {
  
  link_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledLinkReference.link_id)
}

// uint32 link_here_tile_id = 2;
inline void TiledLinkReference::clear_link_here_tile_id() {
  link_here_tile_id_ = 0u;
}
inline ::google::protobuf::uint32 TiledLinkReference::link_here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledLinkReference.link_here_tile_id)
  return link_here_tile_id_;
}
inline void TiledLinkReference::set_link_here_tile_id(::google::protobuf::uint32 value) {
  
  link_here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledLinkReference.link_here_tile_id)
}

// -------------------------------------------------------------------

// TiledNodeReference

// uint32 node_id = 1;
inline void TiledNodeReference::clear_node_id() {
  node_id_ = 0u;
}
inline ::google::protobuf::uint32 TiledNodeReference::node_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledNodeReference.node_id)
  return node_id_;
}
inline void TiledNodeReference::set_node_id(::google::protobuf::uint32 value) {
  
  node_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledNodeReference.node_id)
}

// uint32 node_here_tile_id = 2;
inline void TiledNodeReference::clear_node_here_tile_id() {
  node_here_tile_id_ = 0u;
}
inline ::google::protobuf::uint32 TiledNodeReference::node_here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledNodeReference.node_here_tile_id)
  return node_here_tile_id_;
}
inline void TiledNodeReference::set_node_here_tile_id(::google::protobuf::uint32 value) {
  
  node_here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledNodeReference.node_here_tile_id)
}

// -------------------------------------------------------------------

// TiledLaneGroupReference

// uint64 lane_group_id = 1;
inline void TiledLaneGroupReference::clear_lane_group_id() {
  lane_group_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TiledLaneGroupReference::lane_group_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference.lane_group_id)
  return lane_group_id_;
}
inline void TiledLaneGroupReference::set_lane_group_id(::google::protobuf::uint64 value) {
  
  lane_group_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference.lane_group_id)
}

// uint32 lane_group_here_tile_id = 2;
inline void TiledLaneGroupReference::clear_lane_group_here_tile_id() {
  lane_group_here_tile_id_ = 0u;
}
inline ::google::protobuf::uint32 TiledLaneGroupReference::lane_group_here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference.lane_group_here_tile_id)
  return lane_group_here_tile_id_;
}
inline void TiledLaneGroupReference::set_lane_group_here_tile_id(::google::protobuf::uint32 value) {
  
  lane_group_here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference.lane_group_here_tile_id)
}

// -------------------------------------------------------------------

// TiledLaneGroupConnectorReference

// uint64 lane_group_connector_id = 1;
inline void TiledLaneGroupConnectorReference::clear_lane_group_connector_id() {
  lane_group_connector_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TiledLaneGroupConnectorReference::lane_group_connector_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference.lane_group_connector_id)
  return lane_group_connector_id_;
}
inline void TiledLaneGroupConnectorReference::set_lane_group_connector_id(::google::protobuf::uint64 value) {
  
  lane_group_connector_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference.lane_group_connector_id)
}

// uint32 lane_group_connector_here_tile_id = 2;
inline void TiledLaneGroupConnectorReference::clear_lane_group_connector_here_tile_id() {
  lane_group_connector_here_tile_id_ = 0u;
}
inline ::google::protobuf::uint32 TiledLaneGroupConnectorReference::lane_group_connector_here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference.lane_group_connector_here_tile_id)
  return lane_group_connector_here_tile_id_;
}
inline void TiledLaneGroupConnectorReference::set_lane_group_connector_here_tile_id(::google::protobuf::uint32 value) {
  
  lane_group_connector_here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference.lane_group_connector_here_tile_id)
}

// -------------------------------------------------------------------

// ParametricRange

// double range_offset_from_start = 1;
inline void ParametricRange::clear_range_offset_from_start() {
  range_offset_from_start_ = 0;
}
inline double ParametricRange::range_offset_from_start() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.ParametricRange.range_offset_from_start)
  return range_offset_from_start_;
}
inline void ParametricRange::set_range_offset_from_start(double value) {
  
  range_offset_from_start_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.ParametricRange.range_offset_from_start)
}

// double range_offset_from_end = 2;
inline void ParametricRange::clear_range_offset_from_end() {
  range_offset_from_end_ = 0;
}
inline double ParametricRange::range_offset_from_end() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.ParametricRange.range_offset_from_end)
  return range_offset_from_end_;
}
inline void ParametricRange::set_range_offset_from_end(double value) {
  
  range_offset_from_end_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.ParametricRange.range_offset_from_end)
}

// -------------------------------------------------------------------

// ParametricLocation

// double location_offset_from_start = 1;
inline void ParametricLocation::clear_location_offset_from_start() {
  location_offset_from_start_ = 0;
}
inline double ParametricLocation::location_offset_from_start() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.ParametricLocation.location_offset_from_start)
  return location_offset_from_start_;
}
inline void ParametricLocation::set_location_offset_from_start(double value) {
  
  location_offset_from_start_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.ParametricLocation.location_offset_from_start)
}

// -------------------------------------------------------------------

// StrandAttributionLocalReference

// uint32 strand_attribution_id = 1;
inline bool StrandAttributionLocalReference::has_strand_attribution_id() const {
  return id_case() == kStrandAttributionId;
}
inline void StrandAttributionLocalReference::set_has_strand_attribution_id() {
  _oneof_case_[0] = kStrandAttributionId;
}
inline void StrandAttributionLocalReference::clear_strand_attribution_id() {
  if (has_strand_attribution_id()) {
    id_.strand_attribution_id_ = 0u;
    clear_has_id();
  }
}
inline ::google::protobuf::uint32 StrandAttributionLocalReference::strand_attribution_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_id)
  if (has_strand_attribution_id()) {
    return id_.strand_attribution_id_;
  }
  return 0u;
}
inline void StrandAttributionLocalReference::set_strand_attribution_id(::google::protobuf::uint32 value) {
  if (!has_strand_attribution_id()) {
    clear_id();
    set_has_strand_attribution_id();
  }
  id_.strand_attribution_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_id)
}

// string strand_attribution_ref = 2;
inline bool StrandAttributionLocalReference::has_strand_attribution_ref() const {
  return id_case() == kStrandAttributionRef;
}
inline void StrandAttributionLocalReference::set_has_strand_attribution_ref() {
  _oneof_case_[0] = kStrandAttributionRef;
}
inline void StrandAttributionLocalReference::clear_strand_attribution_ref() {
  if (has_strand_attribution_ref()) {
    id_.strand_attribution_ref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_id();
  }
}
inline const ::std::string& StrandAttributionLocalReference::strand_attribution_ref() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
  if (has_strand_attribution_ref()) {
    return id_.strand_attribution_ref_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void StrandAttributionLocalReference::set_strand_attribution_ref(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
}
#if LANG_CXX11
inline void StrandAttributionLocalReference::set_strand_attribution_ref(::std::string&& value) {
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
}
#endif
inline void StrandAttributionLocalReference::set_strand_attribution_ref(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
}
inline void StrandAttributionLocalReference::set_strand_attribution_ref(const char* value, size_t size) {
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
}
inline ::std::string* StrandAttributionLocalReference::mutable_strand_attribution_ref() {
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
  return id_.strand_attribution_ref_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StrandAttributionLocalReference::release_strand_attribution_ref() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
  if (has_strand_attribution_ref()) {
    clear_has_id();
    return id_.strand_attribution_ref_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void StrandAttributionLocalReference::set_allocated_strand_attribution_ref(::std::string* strand_attribution_ref) {
  if (has_id()) {
    clear_id();
  }
  if (strand_attribution_ref != nullptr) {
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(strand_attribution_ref);
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
}

inline bool StrandAttributionLocalReference::has_id() const {
  return id_case() != ID_NOT_SET;
}
inline void StrandAttributionLocalReference::clear_has_id() {
  _oneof_case_[0] = ID_NOT_SET;
}
inline StrandAttributionLocalReference::IdCase StrandAttributionLocalReference::id_case() const {
  return StrandAttributionLocalReference::IdCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// TiledStrandAttributionReference

// uint32 strand_attribution_id = 1;
inline bool TiledStrandAttributionReference::has_strand_attribution_id() const {
  return id_case() == kStrandAttributionId;
}
inline void TiledStrandAttributionReference::set_has_strand_attribution_id() {
  _oneof_case_[0] = kStrandAttributionId;
}
inline void TiledStrandAttributionReference::clear_strand_attribution_id() {
  if (has_strand_attribution_id()) {
    id_.strand_attribution_id_ = 0u;
    clear_has_id();
  }
}
inline ::google::protobuf::uint32 TiledStrandAttributionReference::strand_attribution_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_id)
  if (has_strand_attribution_id()) {
    return id_.strand_attribution_id_;
  }
  return 0u;
}
inline void TiledStrandAttributionReference::set_strand_attribution_id(::google::protobuf::uint32 value) {
  if (!has_strand_attribution_id()) {
    clear_id();
    set_has_strand_attribution_id();
  }
  id_.strand_attribution_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_id)
}

// string strand_attribution_ref = 2;
inline bool TiledStrandAttributionReference::has_strand_attribution_ref() const {
  return id_case() == kStrandAttributionRef;
}
inline void TiledStrandAttributionReference::set_has_strand_attribution_ref() {
  _oneof_case_[0] = kStrandAttributionRef;
}
inline void TiledStrandAttributionReference::clear_strand_attribution_ref() {
  if (has_strand_attribution_ref()) {
    id_.strand_attribution_ref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_id();
  }
}
inline const ::std::string& TiledStrandAttributionReference::strand_attribution_ref() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
  if (has_strand_attribution_ref()) {
    return id_.strand_attribution_ref_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void TiledStrandAttributionReference::set_strand_attribution_ref(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
}
#if LANG_CXX11
inline void TiledStrandAttributionReference::set_strand_attribution_ref(::std::string&& value) {
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
}
#endif
inline void TiledStrandAttributionReference::set_strand_attribution_ref(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
}
inline void TiledStrandAttributionReference::set_strand_attribution_ref(const char* value, size_t size) {
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
}
inline ::std::string* TiledStrandAttributionReference::mutable_strand_attribution_ref() {
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
  return id_.strand_attribution_ref_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TiledStrandAttributionReference::release_strand_attribution_ref() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
  if (has_strand_attribution_ref()) {
    clear_has_id();
    return id_.strand_attribution_ref_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void TiledStrandAttributionReference::set_allocated_strand_attribution_ref(::std::string* strand_attribution_ref) {
  if (has_id()) {
    clear_id();
  }
  if (strand_attribution_ref != nullptr) {
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(strand_attribution_ref);
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
}

// uint32 strand_attribution_here_tile_id = 3;
inline void TiledStrandAttributionReference::clear_strand_attribution_here_tile_id() {
  strand_attribution_here_tile_id_ = 0u;
}
inline ::google::protobuf::uint32 TiledStrandAttributionReference::strand_attribution_here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_here_tile_id)
  return strand_attribution_here_tile_id_;
}
inline void TiledStrandAttributionReference::set_strand_attribution_here_tile_id(::google::protobuf::uint32 value) {
  
  strand_attribution_here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_here_tile_id)
}

inline bool TiledStrandAttributionReference::has_id() const {
  return id_case() != ID_NOT_SET;
}
inline void TiledStrandAttributionReference::clear_has_id() {
  _oneof_case_[0] = ID_NOT_SET;
}
inline TiledStrandAttributionReference::IdCase TiledStrandAttributionReference::id_case() const {
  return TiledStrandAttributionReference::IdCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SpecificationComplianceAssertion

// uint32 compliant_with_specification_ref = 1;
inline void SpecificationComplianceAssertion::clear_compliant_with_specification_ref() {
  compliant_with_specification_ref_ = 0u;
}
inline ::google::protobuf::uint32 SpecificationComplianceAssertion::compliant_with_specification_ref() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion.compliant_with_specification_ref)
  return compliant_with_specification_ref_;
}
inline void SpecificationComplianceAssertion::set_compliant_with_specification_ref(::google::protobuf::uint32 value) {
  
  compliant_with_specification_ref_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion.compliant_with_specification_ref)
}

// -------------------------------------------------------------------

// LocalAdministrativeAreaReference

// sint32 administrative_area_id = 1;
inline void LocalAdministrativeAreaReference::clear_administrative_area_id() {
  administrative_area_id_ = 0;
}
inline ::google::protobuf::int32 LocalAdministrativeAreaReference::administrative_area_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference.administrative_area_id)
  return administrative_area_id_;
}
inline void LocalAdministrativeAreaReference::set_administrative_area_id(::google::protobuf::int32 value) {
  
  administrative_area_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference.administrative_area_id)
}

// -------------------------------------------------------------------

// PartitionedAdministrativeAreaReference

// sint32 administrative_area_id = 1;
inline void PartitionedAdministrativeAreaReference::clear_administrative_area_id() {
  administrative_area_id_ = 0;
}
inline ::google::protobuf::int32 PartitionedAdministrativeAreaReference::administrative_area_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_id)
  return administrative_area_id_;
}
inline void PartitionedAdministrativeAreaReference::set_administrative_area_id(::google::protobuf::int32 value) {
  
  administrative_area_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_id)
}

// string administrative_area_partition_id = 2;
inline void PartitionedAdministrativeAreaReference::clear_administrative_area_partition_id() {
  administrative_area_partition_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PartitionedAdministrativeAreaReference::administrative_area_partition_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
  return administrative_area_partition_id_.GetNoArena();
}
inline void PartitionedAdministrativeAreaReference::set_administrative_area_partition_id(const ::std::string& value) {
  
  administrative_area_partition_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
}
#if LANG_CXX11
inline void PartitionedAdministrativeAreaReference::set_administrative_area_partition_id(::std::string&& value) {
  
  administrative_area_partition_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
}
#endif
inline void PartitionedAdministrativeAreaReference::set_administrative_area_partition_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  administrative_area_partition_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
}
inline void PartitionedAdministrativeAreaReference::set_administrative_area_partition_id(const char* value, size_t size) {
  
  administrative_area_partition_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
}
inline ::std::string* PartitionedAdministrativeAreaReference::mutable_administrative_area_partition_id() {
  
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
  return administrative_area_partition_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PartitionedAdministrativeAreaReference::release_administrative_area_partition_id() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
  
  return administrative_area_partition_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PartitionedAdministrativeAreaReference::set_allocated_administrative_area_partition_id(::std::string* administrative_area_partition_id) {
  if (administrative_area_partition_id != nullptr) {
    
  } else {
    
  }
  administrative_area_partition_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), administrative_area_partition_id);
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::here::pb::hdmap::external::v1::common::RelativeDirection> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::here::pb::hdmap::external::v1::common::RelativeDirection>() {
  return ::com::here::pb::hdmap::external::v1::common::RelativeDirection_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto
